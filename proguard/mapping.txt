android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    android.os.Bundle mExtras -> mExtras
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    int BUILD_VERSION_CODE_KITKAT_WATCH -> BUILD_VERSION_CODE_KITKAT_WATCH
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> val$currentLayerType
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> includeChildForAccessibilitiy
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
    boolean access$300(android.view.View) -> access$300
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> LOG_TAG
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    float mInitialMotionY -> mInitialMotionY
    float mLastMotionY -> mLastMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
bolts.AggregateException -> bolts.AggregateException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable[] causes -> causes
    java.util.List getErrors() -> getErrors
    java.lang.Throwable[] getCauses() -> getCauses
bolts.AndroidExecutors -> bolts.AndroidExecutors:
    bolts.AndroidExecutors INSTANCE -> INSTANCE
    java.util.concurrent.Executor uiThread -> uiThread
    int CPU_COUNT -> CPU_COUNT
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAX_POOL_SIZE -> MAX_POOL_SIZE
    long KEEP_ALIVE_TIME -> KEEP_ALIVE_TIME
    java.util.concurrent.ExecutorService newCachedThreadPool() -> newCachedThreadPool
    java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory) -> newCachedThreadPool
    void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean) -> allowCoreThreadTimeout
    java.util.concurrent.Executor uiThread() -> uiThread
bolts.AndroidExecutors$1 -> bolts.AndroidExecutors$1:
bolts.AndroidExecutors$UIThreadExecutor -> bolts.AndroidExecutors$UIThreadExecutor:
    void execute(java.lang.Runnable) -> execute
bolts.AppLink -> bolts.AppLink:
    android.net.Uri sourceUrl -> sourceUrl
    java.util.List targets -> targets
    android.net.Uri webUrl -> webUrl
    android.net.Uri getSourceUrl() -> getSourceUrl
    java.util.List getTargets() -> getTargets
    android.net.Uri getWebUrl() -> getWebUrl
bolts.AppLink$Target -> bolts.AppLink$Target:
    android.net.Uri url -> url
    java.lang.String packageName -> packageName
    java.lang.String className -> className
    java.lang.String appName -> appName
    android.net.Uri getUrl() -> getUrl
    java.lang.String getAppName() -> getAppName
    java.lang.String getClassName() -> getClassName
    java.lang.String getPackageName() -> getPackageName
bolts.AppLinkNavigation -> bolts.AppLinkNavigation:
    java.lang.String KEY_NAME_USER_AGENT -> KEY_NAME_USER_AGENT
    java.lang.String KEY_NAME_VERSION -> KEY_NAME_VERSION
    java.lang.String KEY_NAME_REFERER_APP_LINK -> KEY_NAME_REFERER_APP_LINK
    java.lang.String KEY_NAME_REFERER_APP_LINK_APP_NAME -> KEY_NAME_REFERER_APP_LINK_APP_NAME
    java.lang.String KEY_NAME_REFERER_APP_LINK_PACKAGE -> KEY_NAME_REFERER_APP_LINK_PACKAGE
    java.lang.String VERSION -> VERSION
    bolts.AppLinkResolver defaultResolver -> defaultResolver
    bolts.AppLink appLink -> appLink
    android.os.Bundle extras -> extras
    android.os.Bundle appLinkData -> appLinkData
    bolts.AppLink getAppLink() -> getAppLink
    android.os.Bundle getAppLinkData() -> getAppLinkData
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle buildAppLinkDataForNavigation(android.content.Context) -> buildAppLinkDataForNavigation
    java.lang.Object getJSONValue(java.lang.Object) -> getJSONValue
    org.json.JSONObject getJSONForBundle(android.os.Bundle) -> getJSONForBundle
    bolts.AppLinkNavigation$NavigationResult navigate(android.content.Context) -> navigate
    void sendAppLinkNavigateEventBroadcast(android.content.Context,android.content.Intent,bolts.AppLinkNavigation$NavigationResult,org.json.JSONException) -> sendAppLinkNavigateEventBroadcast
    void setDefaultResolver(bolts.AppLinkResolver) -> setDefaultResolver
    bolts.AppLinkResolver getDefaultResolver() -> getDefaultResolver
    bolts.AppLinkResolver getResolver(android.content.Context) -> getResolver
    bolts.AppLinkNavigation$NavigationResult navigate(android.content.Context,bolts.AppLink) -> navigate
    bolts.Task navigateInBackground(android.content.Context,android.net.Uri,bolts.AppLinkResolver) -> navigateInBackground
    bolts.Task navigateInBackground(android.content.Context,java.net.URL,bolts.AppLinkResolver) -> navigateInBackground
    bolts.Task navigateInBackground(android.content.Context,java.lang.String,bolts.AppLinkResolver) -> navigateInBackground
    bolts.Task navigateInBackground(android.content.Context,android.net.Uri) -> navigateInBackground
    bolts.Task navigateInBackground(android.content.Context,java.net.URL) -> navigateInBackground
    bolts.Task navigateInBackground(android.content.Context,java.lang.String) -> navigateInBackground
bolts.AppLinkNavigation$1 -> bolts.AppLinkNavigation$1:
    android.content.Context val$context -> val$context
    bolts.AppLinkNavigation$NavigationResult then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.AppLinkNavigation$NavigationResult -> bolts.AppLinkNavigation$NavigationResult:
    bolts.AppLinkNavigation$NavigationResult FAILED -> FAILED
    bolts.AppLinkNavigation$NavigationResult WEB -> WEB
    bolts.AppLinkNavigation$NavigationResult APP -> APP
    java.lang.String code -> code
    boolean succeeded -> succeeded
    bolts.AppLinkNavigation$NavigationResult[] $VALUES -> $VALUES
    bolts.AppLinkNavigation$NavigationResult[] values() -> values
    bolts.AppLinkNavigation$NavigationResult valueOf(java.lang.String) -> valueOf
    java.lang.String getCode() -> getCode
    boolean isSucceeded() -> isSucceeded
bolts.AppLinkResolver -> bolts.AppLinkResolver:
    bolts.Task getAppLinkFromUrlInBackground(android.net.Uri) -> getAppLinkFromUrlInBackground
bolts.AppLinks -> bolts.AppLinks:
    java.lang.String KEY_NAME_APPLINK_DATA -> KEY_NAME_APPLINK_DATA
    java.lang.String KEY_NAME_EXTRAS -> KEY_NAME_EXTRAS
    java.lang.String KEY_NAME_TARGET -> KEY_NAME_TARGET
    android.os.Bundle getAppLinkData(android.content.Intent) -> getAppLinkData
    android.os.Bundle getAppLinkExtras(android.content.Intent) -> getAppLinkExtras
    android.net.Uri getTargetUrl(android.content.Intent) -> getTargetUrl
    android.net.Uri getTargetUrlFromInboundIntent(android.content.Context,android.content.Intent) -> getTargetUrlFromInboundIntent
bolts.Bolts -> bolts.Bolts:
    java.lang.String VERSION -> VERSION
bolts.BoltsExecutors -> bolts.BoltsExecutors:
    bolts.BoltsExecutors INSTANCE -> INSTANCE
    java.util.concurrent.ExecutorService background -> background
    java.util.concurrent.Executor immediate -> immediate
    boolean isAndroidRuntime() -> isAndroidRuntime
    java.util.concurrent.ExecutorService background() -> background
    java.util.concurrent.Executor immediate() -> immediate
bolts.BoltsExecutors$1 -> bolts.BoltsExecutors$1:
bolts.BoltsExecutors$ImmediateExecutor -> bolts.BoltsExecutors$ImmediateExecutor:
    int MAX_DEPTH -> MAX_DEPTH
    java.lang.ThreadLocal executionDepth -> executionDepth
    int incrementDepth() -> incrementDepth
    int decrementDepth() -> decrementDepth
    void execute(java.lang.Runnable) -> execute
bolts.Capture -> bolts.Capture:
    java.lang.Object value -> value
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
bolts.Continuation -> bolts.Continuation:
    java.lang.Object then(bolts.Task) -> then
bolts.MeasurementEvent -> bolts.MeasurementEvent:
    java.lang.String MEASUREMENT_EVENT_NOTIFICATION_NAME -> MEASUREMENT_EVENT_NOTIFICATION_NAME
    java.lang.String MEASUREMENT_EVENT_NAME_KEY -> MEASUREMENT_EVENT_NAME_KEY
    java.lang.String MEASUREMENT_EVENT_ARGS_KEY -> MEASUREMENT_EVENT_ARGS_KEY
    java.lang.String APP_LINK_NAVIGATE_OUT_EVENT_NAME -> APP_LINK_NAVIGATE_OUT_EVENT_NAME
    java.lang.String APP_LINK_NAVIGATE_IN_EVENT_NAME -> APP_LINK_NAVIGATE_IN_EVENT_NAME
    android.content.Context appContext -> appContext
    java.lang.String name -> name
    android.os.Bundle args -> args
    void sendBroadcastEvent(android.content.Context,java.lang.String,android.content.Intent,java.util.Map) -> sendBroadcastEvent
    void sendBroadcast() -> sendBroadcast
    android.os.Bundle getApplinkLogData(android.content.Context,java.lang.String,android.os.Bundle,android.content.Intent) -> getApplinkLogData
    java.lang.String objectToJSONString(java.lang.Object) -> objectToJSONString
bolts.Task -> bolts.Task:
    java.util.concurrent.ExecutorService BACKGROUND_EXECUTOR -> BACKGROUND_EXECUTOR
    java.util.concurrent.Executor IMMEDIATE_EXECUTOR -> IMMEDIATE_EXECUTOR
    java.util.concurrent.Executor UI_THREAD_EXECUTOR -> UI_THREAD_EXECUTOR
    java.lang.Object lock -> lock
    boolean complete -> complete
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception error -> error
    java.util.List continuations -> continuations
    bolts.Task$TaskCompletionSource create() -> create
    boolean isCompleted() -> isCompleted
    boolean isCancelled() -> isCancelled
    boolean isFaulted() -> isFaulted
    java.lang.Object getResult() -> getResult
    java.lang.Exception getError() -> getError
    void waitForCompletion() -> waitForCompletion
    bolts.Task forResult(java.lang.Object) -> forResult
    bolts.Task forError(java.lang.Exception) -> forError
    bolts.Task cancelled() -> cancelled
    bolts.Task cast() -> cast
    bolts.Task makeVoid() -> makeVoid
    bolts.Task callInBackground(java.util.concurrent.Callable) -> callInBackground
    bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> call
    bolts.Task call(java.util.concurrent.Callable) -> call
    bolts.Task whenAll(java.util.Collection) -> whenAll
    bolts.Task continueWhile(java.util.concurrent.Callable,bolts.Continuation) -> continueWhile
    bolts.Task continueWhile(java.util.concurrent.Callable,bolts.Continuation,java.util.concurrent.Executor) -> continueWhile
    bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor) -> continueWith
    bolts.Task continueWith(bolts.Continuation) -> continueWith
    bolts.Task continueWithTask(bolts.Continuation,java.util.concurrent.Executor) -> continueWithTask
    bolts.Task continueWithTask(bolts.Continuation) -> continueWithTask
    bolts.Task onSuccess(bolts.Continuation,java.util.concurrent.Executor) -> onSuccess
    bolts.Task onSuccess(bolts.Continuation) -> onSuccess
    bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor) -> onSuccessTask
    bolts.Task onSuccessTask(bolts.Continuation) -> onSuccessTask
    void completeImmediately(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> completeImmediately
    void completeAfterTask(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> completeAfterTask
    void runContinuations() -> runContinuations
    void access$100(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> access$100
    void access$200(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> access$200
    java.lang.Object access$300(bolts.Task) -> access$300
    boolean access$400(bolts.Task) -> access$400
    boolean access$402(bolts.Task,boolean) -> access$402
    boolean access$502(bolts.Task,boolean) -> access$502
    void access$600(bolts.Task) -> access$600
    java.lang.Object access$702(bolts.Task,java.lang.Object) -> access$702
    java.lang.Exception access$802(bolts.Task,java.lang.Exception) -> access$802
bolts.Task$1 -> bolts.Task$1:
    bolts.Task this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$10 -> bolts.Task$10:
    bolts.Continuation val$continuation -> val$continuation
    bolts.Task val$task -> val$task
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
bolts.Task$10$1 -> bolts.Task$10$1:
    bolts.Task$10 this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$2 -> bolts.Task$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    java.util.concurrent.Callable val$callable -> val$callable
    void run() -> run
bolts.Task$3 -> bolts.Task$3:
    java.lang.Object val$errorLock -> val$errorLock
    java.util.ArrayList val$causes -> val$causes
    java.util.concurrent.atomic.AtomicBoolean val$isCancelled -> val$isCancelled
    java.util.concurrent.atomic.AtomicInteger val$count -> val$count
    bolts.Task$TaskCompletionSource val$allFinished -> val$allFinished
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$4 -> bolts.Task$4:
    java.util.concurrent.Callable val$predicate -> val$predicate
    bolts.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    bolts.Capture val$predicateContinuation -> val$predicateContinuation
    bolts.Task this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$5 -> bolts.Task$5:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    bolts.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    bolts.Task this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$6 -> bolts.Task$6:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    bolts.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    bolts.Task this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$7 -> bolts.Task$7:
    bolts.Continuation val$continuation -> val$continuation
    bolts.Task this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$8 -> bolts.Task$8:
    bolts.Continuation val$continuation -> val$continuation
    bolts.Task this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.Task$9 -> bolts.Task$9:
    bolts.Continuation val$continuation -> val$continuation
    bolts.Task val$task -> val$task
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
bolts.Task$TaskCompletionSource -> bolts.Task$TaskCompletionSource:
    bolts.Task this$0 -> this$0
    bolts.Task getTask() -> getTask
    boolean trySetCancelled() -> trySetCancelled
    boolean trySetResult(java.lang.Object) -> trySetResult
    boolean trySetError(java.lang.Exception) -> trySetError
    void setCancelled() -> setCancelled
    void setResult(java.lang.Object) -> setResult
    void setError(java.lang.Exception) -> setError
bolts.WebViewAppLinkResolver -> bolts.WebViewAppLinkResolver:
    android.content.Context context -> context
    java.lang.String TAG_EXTRACTION_JAVASCRIPT -> TAG_EXTRACTION_JAVASCRIPT
    java.lang.String PREFER_HEADER -> PREFER_HEADER
    java.lang.String META_TAG_PREFIX -> META_TAG_PREFIX
    java.lang.String KEY_AL_VALUE -> KEY_AL_VALUE
    java.lang.String KEY_APP_NAME -> KEY_APP_NAME
    java.lang.String KEY_CLASS -> KEY_CLASS
    java.lang.String KEY_PACKAGE -> KEY_PACKAGE
    java.lang.String KEY_URL -> KEY_URL
    java.lang.String KEY_SHOULD_FALLBACK -> KEY_SHOULD_FALLBACK
    java.lang.String KEY_WEB_URL -> KEY_WEB_URL
    java.lang.String KEY_WEB -> KEY_WEB
    java.lang.String KEY_ANDROID -> KEY_ANDROID
    bolts.Task getAppLinkFromUrlInBackground(android.net.Uri) -> getAppLinkFromUrlInBackground
    java.util.Map parseAlData(org.json.JSONArray) -> parseAlData
    java.util.List getAlList(java.util.Map,java.lang.String) -> getAlList
    bolts.AppLink makeAppLinkFromAlData(java.util.Map,android.net.Uri) -> makeAppLinkFromAlData
    android.net.Uri tryCreateUrl(java.lang.String) -> tryCreateUrl
    java.lang.String readFromConnection(java.net.URLConnection) -> readFromConnection
    java.util.Map access$000(org.json.JSONArray) -> access$000
    bolts.AppLink access$100(java.util.Map,android.net.Uri) -> access$100
    android.content.Context access$200(bolts.WebViewAppLinkResolver) -> access$200
    java.lang.String access$300(java.net.URLConnection) -> access$300
bolts.WebViewAppLinkResolver$1 -> bolts.WebViewAppLinkResolver$1:
    android.net.Uri val$url -> val$url
    bolts.WebViewAppLinkResolver this$0 -> this$0
    bolts.AppLink then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.WebViewAppLinkResolver$2 -> bolts.WebViewAppLinkResolver$2:
    bolts.Capture val$contentType -> val$contentType
    android.net.Uri val$url -> val$url
    bolts.Capture val$content -> val$content
    bolts.WebViewAppLinkResolver this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
bolts.WebViewAppLinkResolver$2$1 -> bolts.WebViewAppLinkResolver$2$1:
    boolean loaded -> loaded
    bolts.WebViewAppLinkResolver$2 this$1 -> this$1
    void runJavaScript(android.webkit.WebView) -> runJavaScript
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
bolts.WebViewAppLinkResolver$2$2 -> bolts.WebViewAppLinkResolver$2$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    bolts.WebViewAppLinkResolver$2 this$1 -> this$1
    void setValue(java.lang.String) -> setValue
bolts.WebViewAppLinkResolver$3 -> bolts.WebViewAppLinkResolver$3:
    android.net.Uri val$url -> val$url
    bolts.Capture val$content -> val$content
    bolts.Capture val$contentType -> val$contentType
    bolts.WebViewAppLinkResolver this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.goalninja.android.AlarmReceiver -> com.goalninja.android.AlarmReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.goalninja.android.AlarmService -> com.goalninja.android.AlarmService:
    java.text.SimpleDateFormat sdf -> a
    int id -> b
    java.lang.String title -> c
    java.lang.String category -> d
    java.lang.String schedule -> e
    java.lang.String freq_days -> f
    java.lang.String freq_time -> g
    java.util.Date date -> h
    java.util.Calendar alarmtime -> i
    java.util.Calendar nextCheckin -> j
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.goalninja.android.AlarmService$SaveAlarm -> com.goalninja.android.a:
    com.goalninja.android.AlarmService this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.ArchiveAdapter -> com.goalninja.android.b:
    android.content.Context ctxt -> a
    java.util.ArrayList myList -> b
    java.lang.String schedule -> c
    java.lang.String category -> d
    android.widget.TextView title -> e
    android.widget.TextView start_string -> f
    android.widget.TextView date_string -> g
    android.widget.TextView date_text -> h
    java.text.SimpleDateFormat sdf -> i
    android.widget.RelativeLayout bg -> j
    android.widget.ImageView icon -> k
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.goalninja.android.ArchivedGoal -> com.goalninja.android.ArchivedGoal:
    java.lang.String title -> a
    java.lang.String category -> b
    java.lang.String schedule -> c
    java.lang.String start_string -> d
    java.lang.String date_string -> e
    java.lang.String freq_days -> f
    java.lang.String freq_time -> g
    java.lang.String alarm_string -> h
    int id -> i
    int progress -> j
    android.widget.TextView archive_title -> k
    android.widget.TextView archive_start -> l
    android.widget.TextView archive_end -> m
    java.text.SimpleDateFormat sdf_db -> n
    java.text.SimpleDateFormat sdf -> o
    java.lang.String note -> p
    java.lang.String added_date_string -> q
    int goal_id -> r
    java.util.ArrayList NoteList -> s
    android.widget.ListView notes -> t
    java.util.Date added_date -> u
    com.goalninja.android.GoalProgAdapter progAdapter -> v
    java.util.Date start -> w
    java.util.Date date -> x
    android.database.sqlite.SQLiteDatabase db -> y
    com.goalninja.android.GoalDatabase dbSingleton -> z
    android.widget.RelativeLayout bg -> A
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.goalninja.android.ArchivedGoal$GetArchiveGoal -> com.goalninja.android.c:
    com.goalninja.android.ArchivedGoal this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.Archives -> com.goalninja.android.Archives:
    android.widget.ListView archivedGoals -> a
    android.widget.TextView noArchivedGoals -> b
    java.util.ArrayList myArchivedGoals -> c
    com.goalninja.android.ArchiveAdapter archiveAdapter -> d
    android.database.sqlite.SQLiteDatabase db -> e
    com.goalninja.android.GoalDatabase dbSingleton -> f
    java.lang.String title -> g
    java.lang.String category -> h
    java.lang.String schedule -> i
    java.lang.String start_string -> j
    java.lang.String date_string -> k
    java.lang.String freq_days -> l
    java.lang.String freq_time -> m
    java.lang.String alarm_string -> n
    java.lang.String nextcheckin_string -> o
    java.util.Date start -> p
    java.util.Date date -> q
    java.util.Calendar alarmtime -> r
    java.util.Calendar nextcheckin -> s
    int id -> t
    int feed_id -> u
    int progress -> v
    java.text.SimpleDateFormat sdf_db -> w
    java.text.SimpleDateFormat sdf -> x
    android.content.Context context -> y
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.goalninja.android.Archives$GetArchives -> com.goalninja.android.d:
    com.goalninja.android.Archives this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.goalninja.android.Archives access$3(com.goalninja.android.Archives$GetArchives) -> a
com.goalninja.android.Archives$GetArchives$1 -> com.goalninja.android.e:
    com.goalninja.android.Archives$GetArchives this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.goalninja.android.EditGoal -> com.goalninja.android.EditGoal:
    android.widget.TextView title_text -> a
    android.widget.TextView category_text -> b
    android.widget.TextView complete_text -> c
    android.widget.TextView freq_days_text -> d
    android.widget.TextView freq_time_text -> e
    android.widget.RelativeLayout complete -> f
    android.widget.RelativeLayout bg -> g
    android.widget.LinearLayout repeat_block -> h
    android.widget.Spinner days -> i
    android.widget.Spinner time -> j
    android.widget.Button save -> k
    java.lang.String title -> l
    java.lang.String category -> m
    java.lang.String schedule -> n
    java.lang.String freq_days -> o
    java.lang.String freq_time -> p
    java.lang.String date_text -> q
    int id -> r
    int days_pos -> s
    int time_pos -> t
    java.util.Date start -> u
    java.util.Date date -> v
    java.lang.String freq_days_prev -> w
    java.lang.String freq_time_prev -> x
    java.util.Date date_prev -> y
    java.util.Calendar cal -> z
    java.util.Calendar alarm -> A
    java.util.Calendar newAlarm -> B
    java.util.Calendar start_cal -> C
    java.util.Calendar nextCheckin -> D
    java.text.SimpleDateFormat sdf -> E
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showDatePickerDialog(android.os.Bundle) -> a
    void goToUpdateProgress() -> a
    void removePrevAlarm() -> b
    void setNewAlarm() -> c
com.goalninja.android.EditGoal$1 -> com.goalninja.android.f:
    com.goalninja.android.EditGoal this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.EditGoal$2 -> com.goalninja.android.g:
    com.goalninja.android.EditGoal this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.EditGoal$3 -> com.goalninja.android.h:
    com.goalninja.android.EditGoal this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.EditGoal$4 -> com.goalninja.android.i:
    com.goalninja.android.EditGoal this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.EditGoal$DatePickerFragment -> com.goalninja.android.j:
    com.goalninja.android.EditGoal this$0 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.goalninja.android.EditGoal$SaveEdit -> com.goalninja.android.k:
    com.goalninja.android.EditGoal this$0 -> a
    java.lang.Void doInBackground(com.goalninja.android.MyGoal[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.Feed -> com.goalninja.android.l:
    java.lang.String title -> b
    java.lang.String category -> c
    java.lang.String schedule -> d
    int id -> e
    int isAdded -> a
    java.lang.String getCategory() -> a
    java.lang.String getTitle() -> b
    java.lang.String getSchedule() -> c
    int getId() -> d
com.goalninja.android.FeedAdapter -> com.goalninja.android.m:
    android.content.Context ctxt -> a
    java.util.ArrayList feedList -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.goalninja.android.GoalDatabase -> com.goalninja.android.n:
    com.goalninja.android.GoalDatabase singleton -> a
    com.goalninja.android.GoalDatabase getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.goalninja.android.GoalProgAdapter -> com.goalninja.android.o:
    android.content.Context ctxt -> h
    java.util.ArrayList notes -> i
    java.lang.String date_format -> a
    java.text.SimpleDateFormat sdf -> b
    java.text.SimpleDateFormat sdf_db -> c
    com.goalninja.android.GoalDatabase dbsingleton -> d
    int id -> e
    int pos -> f
    int rowpos -> g
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void refreshList() -> a
    java.util.ArrayList access$0(com.goalninja.android.GoalProgAdapter) -> a
    android.content.Context access$1(com.goalninja.android.GoalProgAdapter) -> b
com.goalninja.android.GoalProgAdapter$1 -> com.goalninja.android.p:
    com.goalninja.android.GoalProgAdapter this$0 -> a
    android.widget.Button val$delete_note -> b
    void onClick(android.view.View) -> onClick
    com.goalninja.android.GoalProgAdapter access$0(com.goalninja.android.GoalProgAdapter$1) -> a
com.goalninja.android.GoalProgAdapter$1$1 -> com.goalninja.android.q:
    com.goalninja.android.GoalProgAdapter$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.GoalProgAdapter$1$2 -> com.goalninja.android.r:
    com.goalninja.android.GoalProgAdapter$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.GoalProgAdapter$DeleteNote -> com.goalninja.android.s:
    com.goalninja.android.GoalProgAdapter this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.HomeAdapter -> com.goalninja.android.t:
    android.content.Context ctxt -> h
    java.util.ArrayList myList -> i
    java.lang.String start_date -> a
    java.lang.String complete_date -> b
    java.lang.String category -> c
    java.lang.String date_format -> d
    java.text.SimpleDateFormat sdf -> e
    android.widget.RelativeLayout bg -> f
    android.widget.ImageView icon -> g
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.goalninja.android.MainActivity -> com.goalninja.android.MainActivity:
    android.support.v4.view.ViewPager pager -> a
    java.lang.String[] navdrawer_items -> f
    android.widget.ListView navigation_drawer -> g
    android.support.v4.widget.DrawerLayout drawer_layout -> h
    android.support.v4.app.ActionBarDrawerToggle drawer_toggle -> i
    android.widget.RelativeLayout nav_drawer_layout -> b
    android.widget.Button nav_drawer_button -> c
    android.content.SharedPreferences sharedPref -> d
    java.lang.String user_email -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void showItem(int) -> a
    java.lang.String getEmail(android.content.Context) -> a
    android.accounts.Account getAccount(android.accounts.AccountManager) -> a
    void access$0(com.goalninja.android.MainActivity,int) -> a
    android.support.v4.widget.DrawerLayout access$1(com.goalninja.android.MainActivity) -> a
com.goalninja.android.MainActivity$1 -> com.goalninja.android.u:
    com.goalninja.android.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.goalninja.android.MainActivity access$0(com.goalninja.android.MainActivity$1) -> a
com.goalninja.android.MainActivity$1$1 -> com.goalninja.android.v:
    com.goalninja.android.MainActivity$1 this$1 -> a
    android.widget.EditText val$feedback -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.MainActivity$1$2 -> com.goalninja.android.w:
    com.goalninja.android.MainActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.MainActivity$2 -> com.goalninja.android.x:
    com.goalninja.android.MainActivity this$0 -> a
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
com.goalninja.android.MainActivity$DrawerItemClickListener -> com.goalninja.android.y:
    com.goalninja.android.MainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.goalninja.android.MyApplication -> com.goalninja.android.MyApplication:
    void onCreate() -> onCreate
com.goalninja.android.MyGoal -> com.goalninja.android.z:
    java.lang.String title -> a
    java.lang.String category -> b
    java.lang.String schedule -> c
    java.lang.String freq_days -> d
    java.lang.String freq_time -> e
    int progress -> f
    int id -> g
    int feed_id -> h
    java.util.Date start -> i
    java.util.Date date -> j
    java.util.Calendar alarmtime -> k
    java.util.Calendar nextcheckin -> l
    java.lang.String getCategory() -> a
    java.lang.String getTitle() -> b
    java.lang.String getSchedule() -> c
    java.util.Date getStart() -> d
    java.util.Date getDate() -> e
    java.lang.String getFreqDays() -> f
    void setFreqDays(java.lang.String) -> a
    java.lang.String getFreqTime() -> g
    void setFreqTime(java.lang.String) -> b
    int getProgress() -> h
    java.util.Calendar getAlarmTime() -> i
    void setAlarmTime(java.util.Calendar) -> a
    int getid() -> j
    void setid(int) -> a
    int getFeedId() -> k
    java.util.Calendar getNextCheckin() -> l
com.goalninja.android.NewGoal -> com.goalninja.android.NewGoal:
    android.widget.Spinner category -> a
    android.widget.Spinner freq_days -> b
    android.widget.Spinner freq_time -> c
    android.widget.LinearLayout repeat_block -> d
    android.widget.RelativeLayout complete_block -> e
    android.widget.RelativeLayout bg -> f
    android.widget.ImageView icon -> g
    android.widget.TextView complete_date -> h
    android.widget.TextView category_text -> i
    android.widget.TextView days_text -> j
    android.widget.TextView time_text -> k
    android.widget.RadioGroup schedule -> l
    android.widget.RadioButton repeat -> m
    android.widget.RadioButton complete -> n
    android.widget.Button add_goal -> o
    android.widget.EditText title -> p
    com.goalninja.android.MyGoal addNewGoal -> q
    android.content.SharedPreferences sharedPref -> r
    int id -> s
    int feed_id -> t
    int seq -> u
    java.lang.String freq_days_text -> v
    java.lang.String freq_time_text -> w
    java.lang.String categ_text -> x
    java.lang.String schedule_text -> y
    java.lang.String title_text -> z
    java.text.SimpleDateFormat sdf -> A
    java.util.Calendar cal -> B
    java.util.Calendar nextcheckin -> C
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showDatePickerDialog(android.os.Bundle) -> a
    void setAlarm(com.goalninja.android.MyGoal) -> a
    void setBackgroundIcon(java.lang.String) -> a
com.goalninja.android.NewGoal$1 -> com.goalninja.android.aa:
    com.goalninja.android.NewGoal this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.NewGoal$2 -> com.goalninja.android.ab:
    com.goalninja.android.NewGoal this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.goalninja.android.NewGoal$3 -> com.goalninja.android.ac:
    com.goalninja.android.NewGoal this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.NewGoal$4 -> com.goalninja.android.ad:
    com.goalninja.android.NewGoal this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.NewGoal$5 -> com.goalninja.android.ae:
    com.goalninja.android.NewGoal this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.NewGoal$6 -> com.goalninja.android.af:
    com.goalninja.android.NewGoal this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.NewGoal$AddGoal -> com.goalninja.android.ag:
    com.goalninja.android.NewGoal this$0 -> a
    java.lang.Boolean doInBackground(com.goalninja.android.MyGoal[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.NewGoal$DatePickerFragment -> com.goalninja.android.ah:
    com.goalninja.android.NewGoal this$0 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.goalninja.android.NewGoal$GetLatestGoalId -> com.goalninja.android.ai:
    com.goalninja.android.NewGoal this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.Note -> com.goalninja.android.aj:
    int GoalID -> a
    java.lang.String Note -> b
    java.util.Date date -> c
    int getGoalID() -> a
    java.lang.String getNote() -> b
    java.util.Date getDate() -> c
com.goalninja.android.RowActivity -> com.goalninja.android.RowActivity:
    java.lang.String title -> a
    java.lang.String category -> b
    java.lang.String frequency_days -> c
    java.lang.String frequency_time -> d
    java.lang.String schedule -> e
    int feed_id -> f
    int progress -> g
    int id -> h
    int seq -> i
    android.widget.Button add_goal -> j
    android.widget.Spinner freq_day -> k
    android.widget.Spinner freq_time -> l
    android.widget.TextView complete_date -> m
    android.widget.TextView date_text -> n
    android.widget.TextView time_text -> o
    android.widget.LinearLayout repeat_block -> p
    android.widget.RelativeLayout complete_block -> q
    android.widget.RelativeLayout bg -> r
    android.widget.ImageView icon -> s
    com.goalninja.android.MyGoal newGoal -> t
    java.util.Calendar newCal -> u
    android.content.SharedPreferences sharedPref -> v
    java.util.Calendar cal -> w
    java.lang.Boolean morning -> x
    java.lang.Boolean afternoon -> y
    java.lang.Boolean evening -> z
    java.lang.Boolean night -> A
    java.lang.Long which_time -> B
    java.text.SimpleDateFormat sdf -> C
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setAlarm(com.goalninja.android.MyGoal) -> a
    void showDatePickerDialog(android.os.Bundle) -> a
com.goalninja.android.RowActivity$1 -> com.goalninja.android.ak:
    com.goalninja.android.RowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.RowActivity$2 -> com.goalninja.android.al:
    com.goalninja.android.RowActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.RowActivity$3 -> com.goalninja.android.am:
    com.goalninja.android.RowActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.goalninja.android.RowActivity$4 -> com.goalninja.android.an:
    com.goalninja.android.RowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.RowActivity$AddGoal -> com.goalninja.android.ao:
    com.goalninja.android.RowActivity this$0 -> a
    java.lang.Boolean doInBackground(com.goalninja.android.MyGoal[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.RowActivity$DatePickerFragment -> com.goalninja.android.ap:
    com.goalninja.android.RowActivity this$0 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.goalninja.android.RowActivity$GetLatestGoalId -> com.goalninja.android.aq:
    com.goalninja.android.RowActivity this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.SampleAdapter -> com.goalninja.android.ar:
    android.content.Context ctxt -> a
    java.lang.CharSequence title -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.goalninja.android.SetAlarmsOnBoot -> com.goalninja.android.SetAlarmsOnBoot:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.goalninja.android.SetAlarmsOnBootService -> com.goalninja.android.SetAlarmsOnBootService:
    java.util.ArrayList myList -> a
    int id -> b
    int feedId -> c
    int progress -> d
    java.lang.String title -> e
    java.lang.String category -> f
    java.lang.String schedule -> g
    java.lang.String start_string -> h
    java.lang.String date_string -> i
    java.lang.String freq_days -> j
    java.lang.String freq_time -> k
    java.lang.String alarmtime_string -> l
    java.lang.String nextcheckin_string -> m
    java.util.Date start -> n
    java.util.Date date -> o
    java.util.Calendar alarmtime -> p
    java.util.Calendar nextcheckin -> q
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.goalninja.android.SetAlarmsOnBootService$SetAlarms -> com.goalninja.android.as:
    com.goalninja.android.SetAlarmsOnBootService this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.Settings -> com.goalninja.android.Settings:
    android.widget.TextView morning_time -> a
    android.widget.TextView afternoon_time -> b
    android.widget.TextView evening_time -> c
    android.widget.TextView night_time -> d
    android.widget.Switch notif -> e
    android.widget.CheckBox morn -> f
    android.widget.CheckBox aft -> g
    android.widget.CheckBox eve -> h
    android.widget.CheckBox night -> i
    java.text.SimpleDateFormat sdf -> j
    java.util.Calendar cal_morn -> k
    java.util.Calendar cal_aft -> l
    java.util.Calendar cal_eve -> m
    java.util.Calendar cal_night -> n
    android.content.SharedPreferences sharedPref -> o
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showTimePickerDialog(android.os.Bundle) -> a
com.goalninja.android.Settings$1 -> com.goalninja.android.at:
    com.goalninja.android.Settings this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.Settings$2 -> com.goalninja.android.au:
    com.goalninja.android.Settings this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.Settings$3 -> com.goalninja.android.av:
    com.goalninja.android.Settings this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.Settings$4 -> com.goalninja.android.aw:
    com.goalninja.android.Settings this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.Settings$5 -> com.goalninja.android.ax:
    com.goalninja.android.Settings this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.goalninja.android.Settings$6 -> com.goalninja.android.ay:
    com.goalninja.android.Settings this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.goalninja.android.Settings$7 -> com.goalninja.android.az:
    com.goalninja.android.Settings this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.goalninja.android.Settings$8 -> com.goalninja.android.ba:
    com.goalninja.android.Settings this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.goalninja.android.Settings$9 -> com.goalninja.android.bb:
    com.goalninja.android.Settings this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.goalninja.android.Settings$TimePickerFragment -> com.goalninja.android.bc:
    int which -> a
    java.util.Calendar c -> b
    com.goalninja.android.Settings this$0 -> c
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.goalninja.android.Splash -> com.goalninja.android.Splash:
    int SPLASH_TIMER -> a
    void onCreate(android.os.Bundle) -> onCreate
com.goalninja.android.Splash$1 -> com.goalninja.android.bd:
    com.goalninja.android.Splash this$0 -> a
    void run() -> run
com.goalninja.android.Tab1 -> com.goalninja.android.be:
    com.goalninja.android.HomeAdapter myAdapter -> a
    java.util.ArrayList myList -> b
    android.widget.ListView myGoalsList -> c
    android.widget.TextView noGoals -> d
    android.database.sqlite.SQLiteDatabase db -> e
    java.lang.String title -> f
    java.lang.String category -> g
    java.lang.String start_string -> h
    java.lang.String schedule -> i
    java.lang.String date_string -> j
    java.lang.String freq_days -> k
    java.lang.String freq_time -> l
    java.lang.String alarmtime_string -> m
    java.lang.String nextcheckin_string -> n
    int progress -> o
    int id -> p
    int feedId -> q
    java.util.Date start -> r
    java.util.Date date -> s
    java.util.Calendar alarmtime -> t
    java.util.Calendar nextcheckin -> u
    com.goalninja.android.Tab1 newInstance(int) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
com.goalninja.android.Tab1$GetGoal -> com.goalninja.android.bf:
    com.goalninja.android.Tab1 this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.goalninja.android.Tab1 access$3(com.goalninja.android.Tab1$GetGoal) -> a
com.goalninja.android.Tab1$GetGoal$1 -> com.goalninja.android.bg:
    com.goalninja.android.Tab1$GetGoal this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.goalninja.android.Tab2 -> com.goalninja.android.bh:
    java.util.ArrayList feedList -> g
    com.goalninja.android.FeedAdapter adapter -> h
    java.lang.String title -> a
    java.lang.String category -> b
    java.lang.String schedule -> c
    int isAdded -> d
    int id -> e
    android.widget.ListView lv -> f
    com.goalninja.android.Tab2 newInstance(int) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    java.util.ArrayList access$0(com.goalninja.android.Tab2) -> a
    void access$1(com.goalninja.android.Tab2,com.goalninja.android.FeedAdapter) -> a
    com.goalninja.android.FeedAdapter access$2(com.goalninja.android.Tab2) -> b
com.goalninja.android.Tab2$1 -> com.goalninja.android.bi:
    com.goalninja.android.Tab2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.goalninja.android.Tab2$GetFeed -> com.goalninja.android.bj:
    com.goalninja.android.Tab2 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress -> com.goalninja.android.UpdateProgress:
    int id -> a
    int feed_id -> b
    android.database.sqlite.SQLiteDatabase db -> c
    java.lang.String title -> d
    java.lang.String category -> e
    java.lang.String schedule -> f
    java.lang.String start_text -> g
    java.lang.String date_text -> h
    java.lang.String freq_days -> i
    java.lang.String freq_time -> j
    java.lang.String start_text_simple -> k
    java.lang.String date_text_simple -> l
    java.lang.String alarm_time -> m
    java.lang.String nextcheckin_time -> n
    java.lang.String streak -> o
    int progress -> p
    java.util.Date start -> q
    java.util.Date date -> r
    java.util.Date alarm_date -> s
    java.util.Calendar alarm -> t
    java.util.Calendar startCal -> u
    java.util.Calendar nextCheckin -> v
    java.lang.String date_format -> w
    java.text.SimpleDateFormat sdf -> x
    android.widget.Button save_progress -> y
    com.goalninja.android.GoalDatabase dbsingleton -> z
    android.widget.RelativeLayout bg -> A
    android.widget.ImageView checkin_icon -> B
    android.widget.TextView title_text -> C
    android.widget.TextView schedule_text -> D
    com.goalninja.android.GoalProgAdapter progAdapter -> E
    java.util.ArrayList list_prog -> F
    int goal_id -> G
    java.lang.String note -> H
    java.lang.String added_date_string -> I
    java.lang.String new_note -> J
    java.lang.String fromAlarm -> K
    java.util.Date added_date -> L
    java.util.Date date_today -> M
    android.widget.ListView list -> N
    android.widget.EditText user_note -> O
    java.lang.Boolean morning -> P
    java.lang.Boolean afternoon -> Q
    java.lang.Boolean evening -> R
    java.lang.Boolean night -> S
    android.content.SharedPreferences sharedPref -> T
    long which_time -> U
    java.util.Calendar newCal -> V
    java.util.Calendar now -> W
    java.util.Calendar newAlarm -> X
    com.goalninja.android.UpdateProgress$CustomDialog cd -> Y
    com.goalninja.android.UpdateProgress$SuccessDialog cd1 -> Z
    java.lang.Boolean thisIsTheEnd -> aa
    java.lang.Boolean endOfDay -> ab
    java.lang.Boolean endOfWeekday -> ac
    java.lang.Boolean endOfWeekend -> ad
    java.lang.Boolean endOfWeek -> ae
    java.lang.Boolean endOfFortnight -> af
    java.lang.Boolean endOfMonth -> ag
    java.lang.Boolean archiveGoal -> ah
    java.lang.Boolean dateChanged -> ai
    java.lang.Boolean checkin -> aj
    java.text.SimpleDateFormat sdf_db -> ak
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void goToMainActivity(java.lang.String) -> a
    void showDatePickerDialog(android.os.Bundle) -> a
    void setNewAlarm() -> a
com.goalninja.android.UpdateProgress$1 -> com.goalninja.android.bk:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.view.View) -> onClick
    com.goalninja.android.UpdateProgress access$0(com.goalninja.android.UpdateProgress$1) -> a
com.goalninja.android.UpdateProgress$1$1 -> com.goalninja.android.bl:
    com.goalninja.android.UpdateProgress$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$1$2 -> com.goalninja.android.bm:
    com.goalninja.android.UpdateProgress$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$1$3 -> com.goalninja.android.bn:
    com.goalninja.android.UpdateProgress$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$1$4 -> com.goalninja.android.bo:
    com.goalninja.android.UpdateProgress$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$2 -> com.goalninja.android.bp:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.view.View) -> onClick
com.goalninja.android.UpdateProgress$3 -> com.goalninja.android.bq:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$4 -> com.goalninja.android.br:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$5 -> com.goalninja.android.bs:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$6 -> com.goalninja.android.bt:
    com.goalninja.android.UpdateProgress this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.goalninja.android.UpdateProgress$CustomDialog -> com.goalninja.android.bu:
    android.app.Activity context -> a
    com.goalninja.android.UpdateProgress this$0 -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.goalninja.android.UpdateProgress$DatePickerFragment -> com.goalninja.android.bv:
    com.goalninja.android.UpdateProgress this$0 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.goalninja.android.UpdateProgress$DeleteGoal -> com.goalninja.android.bw:
    com.goalninja.android.UpdateProgress this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress$GetProgress -> com.goalninja.android.bx:
    com.goalninja.android.UpdateProgress this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress$SaveDate -> com.goalninja.android.by:
    com.goalninja.android.UpdateProgress this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress$SaveHabit -> com.goalninja.android.bz:
    com.goalninja.android.UpdateProgress this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress$SaveNote -> com.goalninja.android.ca:
    com.goalninja.android.UpdateProgress this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.goalninja.android.UpdateProgress$SuccessDialog -> com.goalninja.android.cb:
    android.app.Activity context -> a
    com.goalninja.android.UpdateProgress this$0 -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.goalninja.android.WakeIntentService -> com.goalninja.android.WakeIntentService:
    android.os.PowerManager$WakeLock lockStatic -> a
    void acquireStaticLock(android.content.Context) -> a
    android.os.PowerManager$WakeLock getLock(android.content.Context) -> b
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.parse.ACRA -> com.parse.ACRA:
    java.lang.String LOG_TAG -> LOG_TAG
    com.parse.ReportsCrashes mReportsCrashes -> mReportsCrashes
    com.parse.ReportField[] ALL_CRASH_REPORT_FIELDS -> ALL_CRASH_REPORT_FIELDS
    com.parse.ReportField[] MINIMAL_REPORT_FIELDS -> MINIMAL_REPORT_FIELDS
    java.lang.String NULL_VALUE -> NULL_VALUE
    com.parse.ErrorReporter init(com.parse.ReportsCrashes,java.lang.String,boolean,com.parse.FileProvider) -> init
    com.parse.ReportsCrashes getConfig() -> getConfig
com.parse.ACRAResponse -> com.parse.ACRAResponse:
    int mStatus -> mStatus
    void setStatusCode(int) -> setStatusCode
    int getStatusCode() -> getStatusCode
com.parse.AnonymousAuthenticationProvider -> com.parse.AnonymousAuthenticationProvider:
    void authenticate(com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData() -> getAuthData
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.BaseCrashReporter -> com.parse.BaseCrashReporter:
    android.content.Context mApplicationContext -> mApplicationContext
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formPostFormat() -> formPostFormat
    int socketTimeout() -> socketTimeout
    boolean checkSSLCertsOnCrashReport() -> checkSSLCertsOnCrashReport
    android.content.Context getApplicationContext() -> getApplicationContext
com.parse.BoundedLinkedList -> com.parse.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
com.parse.Compatibility -> com.parse.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
com.parse.ConfigCallback -> com.parse.ConfigCallback:
    void done(com.parse.ParseConfig,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseConfig,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ConfigurationInspector -> com.parse.ConfigurationInspector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    android.util.SparseArray mHardKeyboardHiddenValues -> mHardKeyboardHiddenValues
    android.util.SparseArray mKeyboardValues -> mKeyboardValues
    android.util.SparseArray mKeyboardHiddenValues -> mKeyboardHiddenValues
    android.util.SparseArray mNavigationValues -> mNavigationValues
    android.util.SparseArray mNavigationHiddenValues -> mNavigationHiddenValues
    android.util.SparseArray mOrientationValues -> mOrientationValues
    android.util.SparseArray mScreenLayoutValues -> mScreenLayoutValues
    android.util.SparseArray mTouchScreenValues -> mTouchScreenValues
    android.util.SparseArray mUiModeValues -> mUiModeValues
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
com.parse.ConnectivityNotifier -> com.parse.ConnectivityNotifier:
    java.lang.String TAG -> TAG
    com.parse.ConnectivityNotifier singleton -> singleton
    java.util.Set listeners -> listeners
    boolean hasRegisteredReceiver -> hasRegisteredReceiver
    java.lang.Object lock -> lock
    com.parse.ConnectivityNotifier getNotifier() -> getNotifier
    void addListener(com.parse.ConnectivityNotifier$ConnectivityListener,android.content.Context) -> addListener
    void removeListener(com.parse.ConnectivityNotifier$ConnectivityListener) -> removeListener
    boolean tryToRegisterForNetworkStatusNotifications() -> tryToRegisterForNetworkStatusNotifications
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isConnected() -> isConnected
com.parse.ConnectivityNotifier$ConnectivityListener -> com.parse.ConnectivityNotifier$ConnectivityListener:
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.CountCallback -> com.parse.CountCallback:
    void done(int,com.parse.ParseException) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.CountingMultipartEntity -> com.parse.CountingMultipartEntity:
    com.parse.ProgressCallback progressCallback -> progressCallback
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.CountingMultipartEntity$CountingOutputStream -> com.parse.CountingMultipartEntity$CountingOutputStream:
    com.parse.ProgressCallback progressCallback -> progressCallback
    long uploadedSize -> uploadedSize
    long totalSize -> totalSize
    boolean hasReportedDone -> hasReportedDone
    void write(byte[],int,int) -> write
    void write(int) -> write
    void notifyCallback() -> notifyCallback
com.parse.CrashReportData -> com.parse.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String PROP_DTD_NAME -> PROP_DTD_NAME
    com.parse.CrashReportData defaults -> defaults
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String lineSeparator -> lineSeparator
    void dumpString(java.lang.Appendable,java.lang.String,boolean) -> dumpString
    java.lang.String getProperty(com.parse.ReportField) -> getProperty
    java.lang.String getProperty(com.parse.ReportField,java.lang.String) -> getProperty
    void list(java.io.PrintStream) -> list
    void list(java.io.PrintWriter) -> list
    void load(java.io.InputStream) -> load
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    void load(java.io.Reader) -> load
    java.lang.String put(com.parse.ReportField,java.lang.String,java.io.Writer) -> put
    java.util.Enumeration keys() -> keys
    void save(java.io.OutputStream,java.lang.String) -> save
    java.lang.Object setProperty(com.parse.ReportField,java.lang.String) -> setProperty
    void store(java.io.OutputStream,java.lang.String) -> store
    java.io.Writer getWriter(java.io.OutputStream) -> getWriter
    void store(java.io.Writer,java.lang.String) -> store
    void storeComment(java.io.Writer,java.lang.String) -> storeComment
    void storeKeyValuePair(java.io.Writer,com.parse.ReportField,java.lang.String) -> storeKeyValuePair
    void storeToXML(java.io.OutputStream,java.lang.String) -> storeToXML
    void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String) -> storeToXML
    java.lang.String substitutePredefinedEntries(java.lang.String) -> substitutePredefinedEntries
com.parse.CustomReportDataSupplier -> com.parse.CustomReportDataSupplier:
    java.lang.String getCustomData(java.lang.Throwable) -> getCustomData
com.parse.DeleteCallback -> com.parse.DeleteCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.DeviceFeaturesCollector -> com.parse.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
com.parse.DropBoxCollector -> com.parse.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String read(android.content.Context,java.lang.String[]) -> read
com.parse.DumpSysCollector -> com.parse.DumpSysCollector:
    java.lang.String collectMemInfo(android.content.Context) -> collectMemInfo
    java.lang.String collectLargerMemoryInfo(android.content.Context) -> collectLargerMemoryInfo
com.parse.ErrorReporter -> com.parse.ErrorReporter:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String TEMP_REPORTFILE_EXTENSION -> TEMP_REPORTFILE_EXTENSION
    java.lang.String ACRA_DIRNAME -> ACRA_DIRNAME
    long MAX_REPORT_AGE -> MAX_REPORT_AGE
    long DEFAULT_MAX_REPORT_SIZE -> DEFAULT_MAX_REPORT_SIZE
    java.lang.String PREALLOCATED_REPORTFILE -> PREALLOCATED_REPORTFILE
    long PREALLOCATED_FILESIZE -> PREALLOCATED_FILESIZE
    java.lang.String DUMP_DIR -> DUMP_DIR
    java.lang.String CRASH_ATTACHMENT_DUMMY_STACKTRACE -> CRASH_ATTACHMENT_DUMMY_STACKTRACE
    java.lang.String SIGQUIT_DIR -> SIGQUIT_DIR
    java.lang.String DUMPFILE_EXTENSION -> DUMPFILE_EXTENSION
    long NATIVE_MAX_REPORT_SIZE -> NATIVE_MAX_REPORT_SIZE
    long SIGQUIT_MAX_REPORT_SIZE -> SIGQUIT_MAX_REPORT_SIZE
    java.util.regex.Pattern VERSION_CODE_REGEX -> VERSION_CODE_REGEX
    long MIN_TEMP_REPORT_AGE -> MIN_TEMP_REPORT_AGE
    long mMaxReportSize -> mMaxReportSize
    java.lang.String mInternalException -> mInternalException
    java.lang.String IS_PROCESSING_ANOTHER_EXCEPTION -> IS_PROCESSING_ANOTHER_EXCEPTION
    java.lang.String ANDROID_RUNTIME_DALVIK -> ANDROID_RUNTIME_DALVIK
    java.lang.String ANDROID_RUNTIME_ART -> ANDROID_RUNTIME_ART
    java.lang.String ANDROID_RUNTIME_UNKNOWN -> ANDROID_RUNTIME_UNKNOWN
    java.lang.String KNOWN_ART_JAR -> KNOWN_ART_JAR
    java.lang.String KNOWN_DALVIK_JAR -> KNOWN_DALVIK_JAR
    java.lang.String JAVA_BOOT_CLASS_PATH -> JAVA_BOOT_CLASS_PATH
    boolean mHasNativeCrashDumpOnInit -> mHasNativeCrashDumpOnInit
    java.util.ArrayList mReportSenders -> mReportSenders
    java.util.Map mConstantFields -> mConstantFields
    java.util.Map mDeviceSpecificFields -> mDeviceSpecificFields
    com.parse.PackageManagerWrapper mPackageManager -> mPackageManager
    com.parse.ErrorReporter$CrashReportType[] ALL_REPORT_TYPES -> ALL_REPORT_TYPES
    com.parse.FileProvider mFileProvider -> mFileProvider
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.util.Map mInstanceCustomParameters -> mInstanceCustomParameters
    java.util.Map mInstanceLazyCustomParameters -> mInstanceLazyCustomParameters
    boolean mCurrentlyProcessingOOM -> mCurrentlyProcessingOOM
    java.lang.Object mShouldContinueProcessingExceptionLock -> mShouldContinueProcessingExceptionLock
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    com.parse.ErrorReporter mInstanceSingleton -> mInstanceSingleton
    android.content.Context mContext -> mContext
    java.io.File preallocFile -> preallocFile
    int DEFAULT_TRACE_COUNT_LIMIT -> DEFAULT_TRACE_COUNT_LIMIT
    int MAX_TRACE_COUNT_LIMIT -> MAX_TRACE_COUNT_LIMIT
    com.parse.SimpleTraceLogger activityLogger -> activityLogger
    java.lang.String mAppVersionCode -> mAppVersionCode
    java.lang.String mAppVersionName -> mAppVersionName
    java.lang.String mUserId -> mUserId
    boolean sendInMemoryReport -> sendInMemoryReport
    boolean processNameByAmsReady -> processNameByAmsReady
    java.lang.String processNameByAms -> processNameByAms
    android.text.format.Time mAppStartDate -> mAppStartDate
    boolean usePreallocatedFile -> usePreallocatedFile
    boolean mIsInternalBuild -> mIsInternalBuild
    com.parse.LogBridge mLogBridge -> mLogBridge
    java.util.concurrent.atomic.AtomicBoolean mProcessingCrash -> mProcessingCrash
    com.parse.LogBridge getLogBridge() -> getLogBridge
    void setLogBridge(com.parse.LogBridge) -> setLogBridge
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    void putLazyCustomData(java.lang.String,com.parse.CustomReportDataSupplier) -> putLazyCustomData
    java.lang.String dumpCustomDataToString(java.util.Map,java.lang.Throwable) -> dumpCustomDataToString
    void dumpLazyCustomDataMap(java.lang.StringBuilder,java.util.Map,java.lang.Throwable) -> dumpLazyCustomDataMap
    void dumpCustomDataMap(java.lang.StringBuilder,java.util.Map) -> dumpCustomDataMap
    void dumpCustomDataEntry(java.lang.StringBuilder,java.lang.String,java.lang.String) -> dumpCustomDataEntry
    java.lang.String getProcessNameFromAmsOrNull() -> getProcessNameFromAmsOrNull
    void resetProcessNameByAmsCache() -> resetProcessNameByAmsCache
    java.lang.String getProcessNameFromAms() -> getProcessNameFromAms
    java.lang.String getProcessName() -> getProcessName
    java.lang.String getJailStatus() -> getJailStatus
    long getProcessUptime() -> getProcessUptime
    long getDeviceUptime() -> getDeviceUptime
    com.parse.ErrorReporter getInstance() -> getInstance
    void init(android.content.Context,boolean,com.parse.FileProvider) -> init
    java.lang.String formatTimestamp(long) -> formatTimestamp
    void createPreallocatedReportFile() -> createPreallocatedReportFile
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    void populateConstantDeviceData(com.parse.CrashReportData,java.io.Writer) -> populateConstantDeviceData
    java.util.Map getConstantDeviceData() -> getConstantDeviceData
    java.lang.String getAndroidRuntime() -> getAndroidRuntime
    void retrieveCrashTimeData(android.content.Context,java.lang.Throwable,com.parse.ReportField[],com.parse.CrashReportData,java.io.Writer) -> retrieveCrashTimeData
    java.lang.String toString(android.view.Display) -> toString
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void writeToLogBridge(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> writeToLogBridge
    java.lang.String throwableToString(java.lang.Throwable) -> throwableToString
    void gatherCrashData(java.lang.String,java.lang.Throwable,com.parse.ReportField[],com.parse.CrashReportData,java.io.Writer,java.util.Map) -> gatherCrashData
    void put(com.parse.ReportField,java.lang.String,com.parse.CrashReportData,java.io.Writer) -> put
    void writeReportToStream(java.lang.Throwable,java.io.OutputStream) -> writeReportToStream
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable) -> handleException
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,java.util.Map) -> handleException
    com.parse.ErrorReporter$ReportsSenderWorker handleExceptionInternal(java.lang.Throwable,java.util.Map,java.lang.String,com.parse.ReportField[],boolean) -> handleExceptionInternal
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,java.lang.String,java.util.Map) -> handleException
    void handleExceptionWithCustomFields(java.lang.Exception,java.util.Map,com.parse.ReportField[]) -> handleExceptionWithCustomFields
    void sendCrashReport(com.parse.CrashReportData) -> sendCrashReport
    java.lang.String genCrashReportFileName(java.lang.Class,java.lang.String) -> genCrashReportFileName
    java.lang.String[] getCrashReportFilesList(java.lang.String,java.lang.String[]) -> getCrashReportFilesList
    void checkAndSendReports(android.content.Context,com.parse.ErrorReporter$CrashReportType[]) -> checkAndSendReports
    void checkAndSendAcraReports(android.content.Context) -> checkAndSendAcraReports
    int checkAndSendCrashAttachments(android.content.Context,com.parse.ErrorReporter$CrashReportType) -> checkAndSendCrashAttachments
    void sendInMemoryReport(android.content.Context,com.parse.CrashReportData) -> sendInMemoryReport
    com.parse.CrashReportData loadAcraCrashReport(android.content.Context,java.lang.String) -> loadAcraCrashReport
    com.parse.CrashReportData loadCrashAttachment(android.content.Context,java.lang.String,com.parse.ErrorReporter$CrashReportType) -> loadCrashAttachment
    com.parse.CrashReportData loadCrashReport(android.content.Context,java.lang.String,com.parse.ErrorReporter$CrashReportType,long) -> loadCrashReport
    void backfillCrashReportData(com.parse.CrashReportData) -> backfillCrashReportData
    java.lang.String parseVersionCodeFromFileName(java.lang.String) -> parseVersionCodeFromFileName
    java.lang.String loadAttachment(java.io.InputStream,int) -> loadAttachment
    java.io.File fileForName(com.parse.FileProvider,java.lang.String,java.lang.String) -> fileForName
    void deleteFile(java.lang.String,java.lang.String) -> deleteFile
    com.parse.ErrorReporter$ReportsSenderWorker checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    com.parse.ErrorReporter$ReportsSenderWorker checkReportsOfType(com.parse.ErrorReporter$CrashReportType[]) -> checkReportsOfType
    boolean isNativeCrashedOnPreviousRun() -> isNativeCrashedOnPreviousRun
    void addReportSender(com.parse.ReportSender) -> addReportSender
    void removeAllReportSenders() -> removeAllReportSenders
    void setMaxReportSize(long) -> setMaxReportSize
    void setReportSender(com.parse.ReportSender) -> setReportSender
    void registerActivity(java.lang.String) -> registerActivity
    com.parse.ReportField[] getReportFieldsForException(java.lang.Throwable) -> getReportFieldsForException
    java.lang.Throwable getMostSignificantCause(java.lang.Throwable) -> getMostSignificantCause
    boolean shouldContinueProcessingException(java.lang.Throwable) -> shouldContinueProcessingException
    android.content.Context access$000(com.parse.ErrorReporter) -> access$000
com.parse.ErrorReporter$1 -> com.parse.ErrorReporter$1:
    java.lang.String[] val$extensions -> val$extensions
    com.parse.ErrorReporter this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.ErrorReporter$CrashAttachmentException -> com.parse.ErrorReporter$CrashAttachmentException:
    com.parse.ErrorReporter this$0 -> this$0
com.parse.ErrorReporter$CrashReportType -> com.parse.ErrorReporter$CrashReportType:
    com.parse.ErrorReporter$CrashReportType ACRA_CRASH_REPORT -> ACRA_CRASH_REPORT
    com.parse.ErrorReporter$CrashReportType NATIVE_CRASH_REPORT -> NATIVE_CRASH_REPORT
    com.parse.ErrorReporter$CrashReportType ANR_REPORT -> ANR_REPORT
    java.lang.String directory -> directory
    long defaultMaxSize -> defaultMaxSize
    com.parse.ReportField attachmentField -> attachmentField
    java.lang.String[] fileExtensions -> fileExtensions
    com.parse.ErrorReporter$CrashReportType[] $VALUES -> $VALUES
    com.parse.ErrorReporter$CrashReportType[] values() -> values
    com.parse.ErrorReporter$CrashReportType valueOf(java.lang.String) -> valueOf
    java.lang.String access$100(com.parse.ErrorReporter$CrashReportType) -> access$100
    java.lang.String[] access$200(com.parse.ErrorReporter$CrashReportType) -> access$200
    com.parse.ReportField access$400(com.parse.ErrorReporter$CrashReportType) -> access$400
    long access$500(com.parse.ErrorReporter$CrashReportType) -> access$500
com.parse.ErrorReporter$ReportsSenderWorker -> com.parse.ErrorReporter$ReportsSenderWorker:
    java.lang.Throwable exception -> exception
    com.parse.CrashReportData mInMemoryReportToSend -> mInMemoryReportToSend
    com.parse.ErrorReporter$CrashReportType[] mReportTypesToSend -> mReportTypesToSend
    com.parse.ErrorReporter this$0 -> this$0
    void run() -> run
    java.lang.Throwable getException() -> getException
    android.os.PowerManager$WakeLock acquireWakeLock() -> acquireWakeLock
com.parse.EventuallyPin -> com.parse.EventuallyPin:
    java.lang.String PIN_NAME -> PIN_NAME
    int TYPE_SAVE -> TYPE_SAVE
    int TYPE_DELETE -> TYPE_DELETE
    int TYPE_COMMAND -> TYPE_COMMAND
    java.lang.String getUUID() -> getUUID
    int getType() -> getType
    com.parse.ParseObject getObject() -> getObject
    java.lang.String getOperationSetUUID() -> getOperationSetUUID
    java.lang.String getSessionToken() -> getSessionToken
    com.parse.ParseCommand getCommand() -> getCommand
    bolts.Task pinEventuallyCommand(com.parse.ParseObject,com.parse.ParseCommand) -> pinEventuallyCommand
    bolts.Task pinEventuallyCommand(int,com.parse.ParseObject,java.lang.String,java.lang.String,org.json.JSONObject) -> pinEventuallyCommand
    bolts.Task findAllPinned() -> findAllPinned
    bolts.Task findAllPinned(java.util.Collection) -> findAllPinned
com.parse.EventuallyPin$1 -> com.parse.EventuallyPin$1:
    com.parse.EventuallyPin val$pin -> val$pin
    com.parse.EventuallyPin then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.EventuallyPin$2 -> com.parse.EventuallyPin$2:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.EventuallyPin$2$1 -> com.parse.EventuallyPin$2$1:
    java.util.List val$pins -> val$pins
    com.parse.EventuallyPin$2 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.FacebookAuthenticationProvider -> com.parse.FacebookAuthenticationProvider:
    java.text.DateFormat preciseDateFormat -> preciseDateFormat
    int DEFAULT_AUTH_ACTIVITY_CODE -> DEFAULT_AUTH_ACTIVITY_CODE
    java.lang.String AUTH_TYPE_NAME -> AUTH_TYPE_NAME
    com.facebook.android.Facebook facebook -> facebook
    com.facebook.Session session -> session
    com.facebook.SessionDefaultAudience defaultAudience -> defaultAudience
    java.lang.String applicationId -> applicationId
    int activityCode -> activityCode
    java.lang.ref.WeakReference baseActivity -> baseActivity
    android.content.Context applicationContext -> applicationContext
    java.util.Collection permissions -> permissions
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    java.lang.String userId -> userId
    void extendAccessToken(android.content.Context,com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> extendAccessToken
    void authenticate(com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void cancel() -> cancel
    int getActivityCode() -> getActivityCode
    java.lang.String getAuthType() -> getAuthType
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    void handleCancel() -> handleCancel
    void handleError(java.lang.Throwable) -> handleError
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.util.Date) -> getAuthData
    void handleSuccess(java.lang.String) -> handleSuccess
    void setActivity(android.app.Activity) -> setActivity
    void setActivityCode(int) -> setActivityCode
    void setPermissions(java.util.Collection) -> setPermissions
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void deauthenticate() -> deauthenticate
    java.lang.String getUserId() -> getUserId
    java.lang.String access$000(com.parse.FacebookAuthenticationProvider) -> access$000
    void access$100(com.parse.FacebookAuthenticationProvider,java.lang.String) -> access$100
    void access$200(com.parse.FacebookAuthenticationProvider,java.lang.Throwable) -> access$200
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback access$300(com.parse.FacebookAuthenticationProvider) -> access$300
    void access$400(com.parse.FacebookAuthenticationProvider) -> access$400
com.parse.FacebookAuthenticationProvider$1 -> com.parse.FacebookAuthenticationProvider$1:
    com.parse.FacebookAuthenticationProvider this$0 -> this$0
    void onComplete(android.os.Bundle) -> onComplete
    void onFacebookError(com.facebook.android.FacebookError) -> onFacebookError
    void onError(java.lang.Error) -> onError
com.parse.FacebookAuthenticationProvider$2 -> com.parse.FacebookAuthenticationProvider$2:
    com.parse.FacebookAuthenticationProvider this$0 -> this$0
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.parse.FacebookAuthenticationProvider$2$1 -> com.parse.FacebookAuthenticationProvider$2$1:
    com.parse.FacebookAuthenticationProvider$2 this$1 -> this$1
    void onCompleted(com.facebook.Response) -> onCompleted
com.parse.FileProvider -> com.parse.FileProvider:
    java.io.File getFile(java.lang.String) -> getFile
com.parse.FindCallback -> com.parse.FindCallback:
    void done(java.util.List,com.parse.ParseException) -> done
    void internalDone(java.util.List,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.FunctionCallback -> com.parse.FunctionCallback:
    void done(java.lang.Object,com.parse.ParseException) -> done
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GcmBroadcastReceiver -> com.parse.GcmBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar -> com.parse.GcmRegistrar:
    java.lang.String TAG -> TAG
    java.lang.String REGISTRATION_ID_EXTRA -> REGISTRATION_ID_EXTRA
    java.lang.String ERROR_EXTRA -> ERROR_EXTRA
    java.lang.String PARSE_SENDER_ID -> PARSE_SENDER_ID
    java.lang.String SENDER_ID_EXTRA -> SENDER_ID_EXTRA
    java.lang.String REGISTER_ACTION -> REGISTER_ACTION
    java.lang.String REGISTER_RESPONSE_ACTION -> REGISTER_RESPONSE_ACTION
    java.lang.Object lock -> lock
    com.parse.GcmRegistrar$Request request -> request
    android.content.Context context -> context
    com.parse.GcmRegistrar getInstance() -> getInstance
    void updateAsync() -> updateAsync
    void register() -> register
    void update() -> update
    java.lang.String actualSenderIDFromExtra(java.lang.Object) -> actualSenderIDFromExtra
    void sendRegistrationRequest() -> sendRegistrationRequest
    boolean isRegistrationIntent(android.content.Intent) -> isRegistrationIntent
    void handleRegistrationIntent(android.content.Intent) -> handleRegistrationIntent
    int getRequestIdentifier() -> getRequestIdentifier
    java.lang.Object access$000(com.parse.GcmRegistrar) -> access$000
    com.parse.GcmRegistrar$Request access$102(com.parse.GcmRegistrar,com.parse.GcmRegistrar$Request) -> access$102
com.parse.GcmRegistrar$1 -> com.parse.GcmRegistrar$1:
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.GcmRegistrar$2 -> com.parse.GcmRegistrar$2:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.GcmRegistrar$Request -> com.parse.GcmRegistrar$Request:
    java.lang.String RETRY_ACTION -> RETRY_ACTION
    int MAX_RETRIES -> MAX_RETRIES
    int BACKOFF_INTERVAL_MS -> BACKOFF_INTERVAL_MS
    android.content.Context context -> context
    java.lang.String senderId -> senderId
    java.util.Random random -> random
    int identifier -> identifier
    bolts.Task$TaskCompletionSource tcs -> tcs
    android.app.PendingIntent appIntent -> appIntent
    java.util.concurrent.atomic.AtomicInteger tries -> tries
    android.app.PendingIntent retryIntent -> retryIntent
    android.content.BroadcastReceiver retryReceiver -> retryReceiver
    com.parse.GcmRegistrar$Request createAndSend(android.content.Context,java.lang.String) -> createAndSend
    bolts.Task getTask() -> getTask
    void send() -> send
    void onReceiveResponseIntent(android.content.Intent) -> onReceiveResponseIntent
    void finish(java.lang.String,java.lang.String) -> finish
    int access$200(com.parse.GcmRegistrar$Request) -> access$200
    void access$300(com.parse.GcmRegistrar$Request) -> access$300
com.parse.GcmRegistrar$Request$1 -> com.parse.GcmRegistrar$Request$1:
    com.parse.GcmRegistrar$Request this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar$Singleton -> com.parse.GcmRegistrar$Singleton:
    com.parse.GcmRegistrar INSTANCE -> INSTANCE
com.parse.GetCallback -> com.parse.GetCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GetDataCallback -> com.parse.GetDataCallback:
    void done(byte[],com.parse.ParseException) -> done
    void internalDone(byte[],com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.HttpConnectionProvider -> com.parse.HttpConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
com.parse.HttpPostSender -> com.parse.HttpPostSender:
    android.net.Uri mFormUri -> mFormUri
    void send(com.parse.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
com.parse.HttpRequest -> com.parse.HttpRequest:
    com.parse.HttpConnectionProvider mConnectionProvider -> mConnectionProvider
    java.lang.String POST_CONTENT_TYPE_FORM_URLENCODED -> POST_CONTENT_TYPE_FORM_URLENCODED
    java.lang.String POST_CONTENT_TYPE_JSON -> POST_CONTENT_TYPE_JSON
    void sendPost(java.net.URL,java.lang.String,com.parse.ACRAResponse) -> sendPost
    void sendPost(java.net.URL,java.lang.String,com.parse.ACRAResponse,java.lang.String) -> sendPost
com.parse.HttpUtils -> com.parse.HttpUtils:
    void doPost(java.util.Map,java.net.URL) -> doPost
    void doPost(java.util.Map,java.net.URL,java.lang.String) -> doPost
    java.lang.String encodeParametersFormUrlEncoded(java.util.Map) -> encodeParametersFormUrlEncoded
    java.lang.String encodeParametersJson(java.util.Map) -> encodeParametersJson
com.parse.Installation -> com.parse.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(com.parse.FileProvider) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
com.parse.KnownParseObjectDecoder -> com.parse.KnownParseObjectDecoder:
    java.util.Map fetchedObjects -> fetchedObjects
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
com.parse.LocalIdManager -> com.parse.LocalIdManager:
    com.parse.LocalIdManager defaultInstance -> defaultInstance
    java.io.File diskPath -> diskPath
    java.util.Random random -> random
    com.parse.LocalIdManager getDefaultInstance() -> getDefaultInstance
    boolean isLocalId(java.lang.String) -> isLocalId
    com.parse.LocalIdManager$MapEntry getMapEntry(java.lang.String) -> getMapEntry
    void putMapEntry(java.lang.String,com.parse.LocalIdManager$MapEntry) -> putMapEntry
    void removeMapEntry(java.lang.String) -> removeMapEntry
    java.lang.String createLocalId() -> createLocalId
    void retainLocalIdOnDisk(java.lang.String) -> retainLocalIdOnDisk
    void releaseLocalIdOnDisk(java.lang.String) -> releaseLocalIdOnDisk
    java.lang.String getObjectId(java.lang.String) -> getObjectId
    void setObjectId(java.lang.String,java.lang.String) -> setObjectId
    boolean clear() -> clear
com.parse.LocalIdManager$1 -> com.parse.LocalIdManager$1:
com.parse.LocalIdManager$MapEntry -> com.parse.LocalIdManager$MapEntry:
    java.lang.String objectId -> objectId
    int retainCount -> retainCount
    com.parse.LocalIdManager this$0 -> this$0
com.parse.LocationCallback -> com.parse.LocationCallback:
    void done(com.parse.ParseGeoPoint,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseGeoPoint,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.LocationNotifier -> com.parse.LocationNotifier:
    android.location.Location fakeLocation -> fakeLocation
    bolts.Task getCurrentLocationAsync(android.content.Context,long,android.location.Criteria) -> getCurrentLocationAsync
    void setFakeLocation(android.location.Location) -> setFakeLocation
com.parse.LocationNotifier$1 -> com.parse.LocationNotifier$1:
    bolts.Capture val$timeoutFuture -> val$timeoutFuture
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.parse.LocationNotifier$2 -> com.parse.LocationNotifier$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    android.location.LocationListener val$listener -> val$listener
    void run() -> run
com.parse.LockSet -> com.parse.LockSet:
    java.util.WeakHashMap stableIds -> stableIds
    long nextStableId -> nextStableId
    java.util.Set locks -> locks
    java.lang.Long getStableId(java.util.concurrent.locks.Lock) -> getStableId
    void lock() -> lock
    void unlock() -> unlock
    java.lang.Long access$000(java.util.concurrent.locks.Lock) -> access$000
com.parse.LockSet$1 -> com.parse.LockSet$1:
    com.parse.LockSet this$0 -> this$0
    int compare(java.util.concurrent.locks.Lock,java.util.concurrent.locks.Lock) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.LogBridge -> com.parse.LogBridge:
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
com.parse.LogCatCollector -> com.parse.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    java.lang.String collectLogCat(java.lang.String) -> collectLogCat
com.parse.LogInCallback -> com.parse.LogInCallback:
    void done(com.parse.ParseUser,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseUser,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ManifestInfo -> com.parse.ManifestInfo:
    java.lang.String TAG -> TAG
    java.lang.Integer NUMBER_OF_PUSH_INTENTS -> NUMBER_OF_PUSH_INTENTS
    java.lang.Object lock -> lock
    long lastModified -> lastModified
    int versionCode -> versionCode
    java.lang.String versionName -> versionName
    int iconId -> iconId
    java.lang.String displayName -> displayName
    com.parse.PushType pushType -> pushType
    java.lang.Boolean pushUsesBroadcastReceivers -> pushUsesBroadcastReceivers
    long getLastModified() -> getLastModified
    int getVersionCode() -> getVersionCode
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getDisplayName() -> getDisplayName
    int getIconId() -> getIconId
    boolean hasIntentReceiver(java.lang.String) -> hasIntentReceiver
    java.util.List getIntentReceivers(java.lang.String[]) -> getIntentReceivers
    void setPushUsesBroadcastReceivers(boolean) -> setPushUsesBroadcastReceivers
    boolean getPushUsesBroadcastReceivers() -> getPushUsesBroadcastReceivers
    void setPushType(com.parse.PushType) -> setPushType
    com.parse.PushType getPushType() -> getPushType
    java.lang.String getNonePushTypeLogMessage() -> getNonePushTypeLogMessage
    android.content.Context getContext() -> getContext
    java.lang.String getPackageName() -> getPackageName
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    android.content.pm.ApplicationInfo getApplicationInfo(int) -> getApplicationInfo
    android.os.Bundle getApplicationMetadata() -> getApplicationMetadata
    android.content.pm.PackageInfo getPackageInfo(java.lang.String) -> getPackageInfo
    android.content.pm.ServiceInfo getServiceInfo(java.lang.Class) -> getServiceInfo
    android.content.pm.ActivityInfo getReceiverInfo(java.lang.Class) -> getReceiverInfo
    boolean hasPermissions(java.lang.String[]) -> hasPermissions
    boolean checkResolveInfo(java.lang.Class,java.util.List) -> checkResolveInfo
    boolean checkReceiver(java.lang.Class,java.lang.String,android.content.Intent[]) -> checkReceiver
    boolean hasAnyGcmSpecificDeclaration() -> hasAnyGcmSpecificDeclaration
    boolean deviceSupportsGcm() -> deviceSupportsGcm
    com.parse.ManifestInfo$ManifestCheckResult gcmSupportLevel() -> gcmSupportLevel
    com.parse.ManifestInfo$ManifestCheckResult ppnsSupportLevel() -> ppnsSupportLevel
    java.lang.String getGcmManifestMessage() -> getGcmManifestMessage
    java.lang.String getPpnsManifestMessage() -> getPpnsManifestMessage
com.parse.ManifestInfo$ManifestCheckResult -> com.parse.ManifestInfo$ManifestCheckResult:
    com.parse.ManifestInfo$ManifestCheckResult HAS_ALL_DECLARATIONS -> HAS_ALL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_OPTIONAL_DECLARATIONS -> MISSING_OPTIONAL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_REQUIRED_DECLARATIONS -> MISSING_REQUIRED_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult[] $VALUES -> $VALUES
    com.parse.ManifestInfo$ManifestCheckResult[] values() -> values
    com.parse.ManifestInfo$ManifestCheckResult valueOf(java.lang.String) -> valueOf
com.parse.NoObjectsEncodingStrategy -> com.parse.NoObjectsEncodingStrategy:
    com.parse.NoObjectsEncodingStrategy instance -> instance
    com.parse.NoObjectsEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.NonCrashException -> com.parse.NonCrashException:
    java.lang.String getExceptionFriendlyName() -> getExceptionFriendlyName
com.parse.NotificationCompat -> com.parse.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    com.parse.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.parse.NotificationCompat$NotificationCompatImpl access$000() -> access$000
com.parse.NotificationCompat$Builder -> com.parse.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    int mPriority -> mPriority
    com.parse.NotificationCompat$Builder$Style mStyle -> mStyle
    android.app.Notification mNotification -> mNotification
    com.parse.NotificationCompat$Builder setWhen(long) -> setWhen
    com.parse.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.parse.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.parse.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.parse.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.parse.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.parse.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.parse.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.parse.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.parse.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.parse.NotificationCompat$Builder setPriority(int) -> setPriority
    com.parse.NotificationCompat$Builder setStyle(com.parse.NotificationCompat$Builder$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
com.parse.NotificationCompat$Builder$BigTextStyle -> com.parse.NotificationCompat$Builder$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.parse.NotificationCompat$Builder$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.parse.NotificationCompat$Builder$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.parse.NotificationCompat$Builder$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.parse.NotificationCompat$Builder$Style -> com.parse.NotificationCompat$Builder$Style:
    com.parse.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.parse.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.parse.NotificationCompat$NotificationCompatImpl -> com.parse.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.NotificationCompat$NotificationCompatImplBase -> com.parse.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.NotificationCompat$NotificationCompatPostJellyBean -> com.parse.NotificationCompat$NotificationCompatPostJellyBean:
    android.app.Notification$Builder postJellyBeanBuilder -> postJellyBeanBuilder
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.OfflineQueryLogic -> com.parse.OfflineQueryLogic:
    com.parse.OfflineStore store -> store
    java.lang.Object getValue(java.lang.Object,java.lang.String) -> getValue
    java.lang.Object getValue(java.lang.Object,java.lang.String,int) -> getValue
    int compareTo(java.lang.Object,java.lang.Object) -> compareTo
    boolean compareList(java.lang.Object,java.util.List,com.parse.OfflineQueryLogic$Decider) -> compareList
    boolean compareArray(java.lang.Object,org.json.JSONArray,com.parse.OfflineQueryLogic$Decider) -> compareArray
    boolean compare(java.lang.Object,java.lang.Object,com.parse.OfflineQueryLogic$Decider) -> compare
    boolean matchesEqualConstraint(java.lang.Object,java.lang.Object) -> matchesEqualConstraint
    boolean matchesNotEqualConstraint(java.lang.Object,java.lang.Object) -> matchesNotEqualConstraint
    boolean matchesLessThanConstraint(java.lang.Object,java.lang.Object) -> matchesLessThanConstraint
    boolean matchesLessThanOrEqualToConstraint(java.lang.Object,java.lang.Object) -> matchesLessThanOrEqualToConstraint
    boolean matchesGreaterThanConstraint(java.lang.Object,java.lang.Object) -> matchesGreaterThanConstraint
    boolean matchesGreaterThanOrEqualToConstraint(java.lang.Object,java.lang.Object) -> matchesGreaterThanOrEqualToConstraint
    boolean matchesInConstraint(java.lang.Object,java.lang.Object) -> matchesInConstraint
    boolean matchesNotInConstraint(java.lang.Object,java.lang.Object) -> matchesNotInConstraint
    boolean matchesAllConstraint(java.lang.Object,java.lang.Object) -> matchesAllConstraint
    boolean matchesRegexConstraint(java.lang.Object,java.lang.Object,java.lang.String) -> matchesRegexConstraint
    boolean matchesExistsConstraint(java.lang.Object,java.lang.Object) -> matchesExistsConstraint
    boolean matchesNearSphereConstraint(java.lang.Object,java.lang.Object,java.lang.Double) -> matchesNearSphereConstraint
    boolean matchesWithinConstraint(java.lang.Object,java.lang.Object) -> matchesWithinConstraint
    boolean matchesStatelessConstraint(java.lang.String,java.lang.Object,java.lang.Object,com.parse.ParseQuery$KeyConstraints) -> matchesStatelessConstraint
    com.parse.OfflineQueryLogic$ConstraintMatcher createInQueryMatcher(java.lang.Object,java.lang.String) -> createInQueryMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createNotInQueryMatcher(java.lang.Object,java.lang.String) -> createNotInQueryMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createSelectMatcher(java.lang.Object,java.lang.String) -> createSelectMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createDontSelectMatcher(java.lang.Object,java.lang.String) -> createDontSelectMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(java.lang.String,java.lang.Object,java.lang.String,com.parse.ParseQuery$KeyConstraints) -> createMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createOrMatcher(java.util.ArrayList) -> createOrMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(com.parse.ParseQuery$QueryConstraints) -> createMatcher
    boolean hasReadAccess(com.parse.ParseUser,com.parse.ParseObject) -> hasReadAccess
    boolean hasWriteAccess(com.parse.ParseUser,com.parse.ParseObject) -> hasWriteAccess
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(com.parse.ParseQuery,com.parse.ParseUser,boolean) -> createMatcher
    void sort(java.util.List,com.parse.ParseQuery) -> sort
    bolts.Task fetchIncludeAsync(java.lang.Object,java.lang.String,com.parse.ParseSQLiteDatabase) -> fetchIncludeAsync
    bolts.Task fetchIncludes(com.parse.ParseObject,com.parse.ParseQuery,com.parse.ParseSQLiteDatabase) -> fetchIncludes
    int access$000(java.lang.Object,java.lang.Object) -> access$000
    com.parse.OfflineStore access$100(com.parse.OfflineQueryLogic) -> access$100
    java.lang.Object access$200(com.parse.OfflineQueryLogic,java.lang.Object,java.lang.String) -> access$200
    boolean access$300(java.lang.Object,java.lang.Object) -> access$300
    boolean access$400(java.lang.Object,java.lang.Object) -> access$400
    boolean access$500(java.lang.String,java.lang.Object,java.lang.Object,com.parse.ParseQuery$KeyConstraints) -> access$500
    bolts.Task access$600(com.parse.OfflineQueryLogic,java.lang.Object,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$600
com.parse.OfflineQueryLogic$1 -> com.parse.OfflineQueryLogic$1:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$10 -> com.parse.OfflineQueryLogic$10:
    java.lang.String val$key -> val$key
    java.lang.String val$operator -> val$operator
    java.lang.Object val$constraint -> val$constraint
    com.parse.ParseQuery$KeyConstraints val$allKeyConstraints -> val$allKeyConstraints
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$11 -> com.parse.OfflineQueryLogic$11:
    java.util.ArrayList val$matchers -> val$matchers
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$11$1 -> com.parse.OfflineQueryLogic$11$1:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic$11 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$12 -> com.parse.OfflineQueryLogic$12:
    com.parse.ParseQuery$RelationConstraint val$relation -> val$relation
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$13 -> com.parse.OfflineQueryLogic$13:
    java.lang.String val$key -> val$key
    java.lang.Object val$queryConstraintValue -> val$queryConstraintValue
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$14 -> com.parse.OfflineQueryLogic$14:
    java.util.ArrayList val$matchers -> val$matchers
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$14$1 -> com.parse.OfflineQueryLogic$14$1:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$15 -> com.parse.OfflineQueryLogic$15:
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.ParseUser val$user -> val$user
    com.parse.OfflineQueryLogic$ConstraintMatcher val$constraintMatcher -> val$constraintMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$16 -> com.parse.OfflineQueryLogic$16:
    java.lang.String val$nearSphereKey -> val$nearSphereKey
    com.parse.ParseGeoPoint val$nearSphereValue -> val$nearSphereValue
    java.lang.String[] val$keys -> val$keys
    com.parse.OfflineQueryLogic this$0 -> this$0
    int compare(com.parse.ParseObject,com.parse.ParseObject) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.OfflineQueryLogic$17 -> com.parse.OfflineQueryLogic$17:
    org.json.JSONArray val$array -> val$array
    int val$index -> val$index
    java.lang.String val$path -> val$path
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$18 -> com.parse.OfflineQueryLogic$18:
    java.lang.Object val$item -> val$item
    java.lang.String val$path -> val$path
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$19 -> com.parse.OfflineQueryLogic$19:
    java.lang.String val$rest -> val$rest
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$2 -> com.parse.OfflineQueryLogic$2:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$20 -> com.parse.OfflineQueryLogic$20:
    java.lang.Object val$container -> val$container
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.lang.String val$key -> val$key
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$20$1 -> com.parse.OfflineQueryLogic$20$1:
    com.parse.OfflineQueryLogic$20 this$1 -> this$1
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$21 -> com.parse.OfflineQueryLogic$21:
    com.parse.ParseObject val$object -> val$object
    java.lang.String val$include -> val$include
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$3 -> com.parse.OfflineQueryLogic$3:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$4 -> com.parse.OfflineQueryLogic$4:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$5 -> com.parse.OfflineQueryLogic$5:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$6 -> com.parse.OfflineQueryLogic$6:
    java.lang.String val$key -> val$key
    com.parse.OfflineQueryLogic this$0 -> this$0
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$7 -> com.parse.OfflineQueryLogic$7:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$inQueryMatcher -> val$inQueryMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$7$1 -> com.parse.OfflineQueryLogic$7$1:
    com.parse.OfflineQueryLogic$7 this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$8 -> com.parse.OfflineQueryLogic$8:
    java.lang.String val$key -> val$key
    java.lang.String val$resultKey -> val$resultKey
    com.parse.OfflineQueryLogic this$0 -> this$0
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$9 -> com.parse.OfflineQueryLogic$9:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$selectMatcher -> val$selectMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$9$1 -> com.parse.OfflineQueryLogic$9$1:
    com.parse.OfflineQueryLogic$9 this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$ConstraintMatcher -> com.parse.OfflineQueryLogic$ConstraintMatcher:
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$Decider -> com.parse.OfflineQueryLogic$Decider:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$SubQueryMatcher -> com.parse.OfflineQueryLogic$SubQueryMatcher:
    com.parse.ParseQuery subQuery -> subQuery
    bolts.Task subQueryResults -> subQueryResults
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$SubQueryMatcher$1 -> com.parse.OfflineQueryLogic$SubQueryMatcher$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineQueryLogic$SubQueryMatcher this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineSQLiteOpenHelper -> com.parse.OfflineSQLiteOpenHelper:
    java.lang.String TABLE_OBJECTS -> TABLE_OBJECTS
    java.lang.String KEY_UUID -> KEY_UUID
    java.lang.String KEY_CLASS_NAME -> KEY_CLASS_NAME
    java.lang.String KEY_OBJECT_ID -> KEY_OBJECT_ID
    java.lang.String KEY_JSON -> KEY_JSON
    java.lang.String KEY_IS_DELETING_EVENTUALLY -> KEY_IS_DELETING_EVENTUALLY
    java.lang.String TABLE_DEPENDENCIES -> TABLE_DEPENDENCIES
    java.lang.String KEY_KEY -> KEY_KEY
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    void createSchema(android.database.sqlite.SQLiteDatabase) -> createSchema
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void clearDatabase(android.content.Context) -> clearDatabase
com.parse.OfflineStore -> com.parse.OfflineStore:
    int MAX_SQL_VARIABLES -> MAX_SQL_VARIABLES
    java.lang.Object defaultInstanceLock -> defaultInstanceLock
    com.parse.OfflineStore defaultInstance -> defaultInstance
    java.lang.Object lock -> lock
    com.parse.OfflineSQLiteOpenHelper helper -> helper
    com.parse.WeakValueHashMap uuidToObjectMap -> uuidToObjectMap
    com.parse.WeakValueHashMap classNameAndObjectIdToObjectMap -> classNameAndObjectIdToObjectMap
    java.util.WeakHashMap objectToUuidMap -> objectToUuidMap
    java.util.WeakHashMap fetchedObjects -> fetchedObjects
    void enableOfflineStore(android.content.Context) -> enableOfflineStore
    boolean isEnabled() -> isEnabled
    void disableOfflineStore() -> disableOfflineStore
    com.parse.OfflineStore getCurrent() -> getCurrent
    bolts.Task getOrCreateUUIDAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> getOrCreateUUIDAsync
    bolts.Task getPointerAsync(java.lang.String,com.parse.ParseSQLiteDatabase) -> getPointerAsync
    bolts.Task findAsync(com.parse.ParseQuery,com.parse.ParseUser,com.parse.ParsePin,boolean,boolean) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery,com.parse.ParseUser,com.parse.ParsePin,boolean,boolean) -> countAsync
    bolts.Task findAsync(com.parse.ParseQuery,com.parse.ParseUser,com.parse.ParsePin,boolean,boolean,boolean) -> findAsync
    bolts.Task findAsync(com.parse.ParseQuery,com.parse.ParseUser,com.parse.ParsePin,boolean,boolean,boolean,com.parse.ParseSQLiteDatabase) -> findAsync
    android.util.Pair getOrCreateObjectWithoutData(java.lang.String,java.lang.String) -> getOrCreateObjectWithoutData
    void updateObjectId(com.parse.ParseObject,java.lang.String,java.lang.String) -> updateObjectId
    bolts.Task fetchLocallyAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> fetchLocallyAsync
    bolts.Task fetchLocallyAsync(com.parse.ParseObject) -> fetchLocallyAsync
    bolts.Task saveLocallyAsync(java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> saveLocallyAsync
    bolts.Task saveLocallyAsync(com.parse.ParseObject,boolean) -> saveLocallyAsync
    bolts.Task saveLocallyAsync(com.parse.ParseObject,boolean,com.parse.ParseSQLiteDatabase) -> saveLocallyAsync
    bolts.Task unpinAsync(com.parse.ParseObject) -> unpinAsync
    bolts.Task unpinAsync(java.lang.String) -> unpinAsync
    bolts.Task unpinAsync(java.lang.String,com.parse.ParseSQLiteDatabase) -> unpinAsync
    bolts.Task deleteObjects(java.util.List,com.parse.ParseSQLiteDatabase) -> deleteObjects
    void registerNewObject(com.parse.ParseObject) -> registerNewObject
    bolts.Task updateDataForObjectAsync(com.parse.ParseObject) -> updateDataForObjectAsync
    bolts.Task updateDataForObjectAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> updateDataForObjectAsync
    bolts.Task deleteDataForObjectAsync(com.parse.ParseObject) -> deleteDataForObjectAsync
    bolts.Task deleteDataForObjectAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> deleteDataForObjectAsync
    void simulateReboot() -> simulateReboot
    void clearDatabase(android.content.Context) -> clearDatabase
    bolts.Task access$200(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$200
    java.lang.Object access$300(com.parse.OfflineStore) -> access$300
    com.parse.WeakValueHashMap access$400(com.parse.OfflineStore) -> access$400
    java.util.WeakHashMap access$500(com.parse.OfflineStore) -> access$500
    bolts.Task access$600(com.parse.OfflineStore,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$600
    bolts.Task access$800(com.parse.OfflineStore,java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$800
    bolts.Task access$900(com.parse.OfflineStore,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$900
    bolts.Task access$1000(com.parse.OfflineStore,java.lang.String) -> access$1000
    bolts.Task access$1100(com.parse.OfflineStore,java.util.List,com.parse.ParseSQLiteDatabase) -> access$1100
    bolts.Task access$1200(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$1200
    com.parse.OfflineSQLiteOpenHelper access$1300(com.parse.OfflineStore) -> access$1300
    bolts.Task access$1400(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$1400
    com.parse.WeakValueHashMap access$1500(com.parse.OfflineStore) -> access$1500
    java.util.WeakHashMap access$1600(com.parse.OfflineStore) -> access$1600
com.parse.OfflineStore$1 -> com.parse.OfflineStore$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$10 -> com.parse.OfflineStore$10:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.lang.String[] val$select -> val$select
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$11 -> com.parse.OfflineStore$11:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$12 -> com.parse.OfflineStore$12:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$13 -> com.parse.OfflineStore$13:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$13$1 -> com.parse.OfflineStore$13$1:
    java.util.Map val$offlineObjects -> val$offlineObjects
    com.parse.OfflineStore$13 this$1 -> this$1
    boolean visit(java.lang.Object) -> visit
com.parse.OfflineStore$13$2 -> com.parse.OfflineStore$13$2:
    org.json.JSONObject val$json -> val$json
    java.util.Map val$offlineObjects -> val$offlineObjects
    com.parse.OfflineStore$13 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$14 -> com.parse.OfflineStore$14:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$14$1 -> com.parse.OfflineStore$14$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$15 -> com.parse.OfflineStore$15:
    java.lang.String val$key -> val$key
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$16 -> com.parse.OfflineStore$16:
    com.parse.ParseObject val$object -> val$object
    bolts.Capture val$encoded -> val$encoded
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$17 -> com.parse.OfflineStore$17:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    bolts.Capture val$encoded -> val$encoded
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$18 -> com.parse.OfflineStore$18:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$19 -> com.parse.OfflineStore$19:
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$2 -> com.parse.OfflineStore$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.String val$newUUID -> val$newUUID
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$20 -> com.parse.OfflineStore$20:
    com.parse.ParseObject val$object -> val$object
    boolean val$includeAllChildren -> val$includeAllChildren
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$20$1 -> com.parse.OfflineStore$20$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$20 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$20$2 -> com.parse.OfflineStore$20$2:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$20 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$20$3 -> com.parse.OfflineStore$20$3:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$20 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$21 -> com.parse.OfflineStore$21:
    java.util.ArrayList val$objectsInTree -> val$objectsInTree
    com.parse.OfflineStore this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.OfflineStore$22 -> com.parse.OfflineStore$22:
    java.util.ArrayList val$objectsInTree -> val$objectsInTree
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$23 -> com.parse.OfflineStore$23:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$24 -> com.parse.OfflineStore$24:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$25 -> com.parse.OfflineStore$25:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26 -> com.parse.OfflineStore$26:
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$27 -> com.parse.OfflineStore$27:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$28 -> com.parse.OfflineStore$28:
    java.lang.String val$key -> val$key
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$28$1 -> com.parse.OfflineStore$28$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$28 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$28$1$1 -> com.parse.OfflineStore$28$1$1:
    com.parse.OfflineStore$28$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$28$1$2 -> com.parse.OfflineStore$28$1$2:
    com.parse.OfflineStore$28$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$29 -> com.parse.OfflineStore$29:
    java.util.List val$uuidsToDelete -> val$uuidsToDelete
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$3 -> com.parse.OfflineStore$3:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$30 -> com.parse.OfflineStore$30:
    java.lang.String val$key -> val$key
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$31 -> com.parse.OfflineStore$31:
    java.util.List val$uuidsToDelete -> val$uuidsToDelete
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$32 -> com.parse.OfflineStore$32:
    java.lang.String val$key -> val$key
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$33 -> com.parse.OfflineStore$33:
    java.util.List val$uuids -> val$uuids
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34 -> com.parse.OfflineStore$34:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34$1 -> com.parse.OfflineStore$34$1:
    com.parse.OfflineStore$34 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34$1$1 -> com.parse.OfflineStore$34$1$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$34$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34$1$1$1 -> com.parse.OfflineStore$34$1$1$1:
    com.parse.OfflineStore$34$1$1 this$3 -> this$3
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34$1$1$2 -> com.parse.OfflineStore$34$1$1$2:
    com.parse.OfflineStore$34$1$1 this$3 -> this$3
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$35 -> com.parse.OfflineStore$35:
    com.parse.ParseObject val$object -> val$object
    bolts.Capture val$jsonObject -> val$jsonObject
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$36 -> com.parse.OfflineStore$36:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    bolts.Capture val$jsonObject -> val$jsonObject
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$37 -> com.parse.OfflineStore$37:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$37$1 -> com.parse.OfflineStore$37$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$37 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$37$1$1 -> com.parse.OfflineStore$37$1$1:
    com.parse.OfflineStore$37$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$37$1$2 -> com.parse.OfflineStore$37$1$2:
    com.parse.OfflineStore$37$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$38 -> com.parse.OfflineStore$38:
    bolts.Capture val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$39 -> com.parse.OfflineStore$39:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$39$1 -> com.parse.OfflineStore$39$1:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore$39 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$39$2 -> com.parse.OfflineStore$39$2:
    com.parse.OfflineStore$39 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$4 -> com.parse.OfflineStore$4:
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$40 -> com.parse.OfflineStore$40:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$41 -> com.parse.OfflineStore$41:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$42 -> com.parse.OfflineStore$42:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$43 -> com.parse.OfflineStore$43:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$5 -> com.parse.OfflineStore$5:
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    com.parse.ParsePin val$pin -> val$pin
    boolean val$isCount -> val$isCount
    boolean val$includeIsDeletingEventually -> val$includeIsDeletingEventually
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$5$1 -> com.parse.OfflineStore$5$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6 -> com.parse.OfflineStore$6:
    boolean val$includeIsDeletingEventually -> val$includeIsDeletingEventually
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$7 -> com.parse.OfflineStore$7:
    com.parse.OfflineQueryLogic val$queryLogic -> val$queryLogic
    java.util.List val$results -> val$results
    com.parse.ParseQuery val$query -> val$query
    boolean val$isCount -> val$isCount
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$7$1 -> com.parse.OfflineStore$7$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore$7 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$7$2 -> com.parse.OfflineStore$7$2:
    java.util.List val$finalTrimmedResults -> val$finalTrimmedResults
    com.parse.OfflineStore$7 this$1 -> this$1
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8 -> com.parse.OfflineStore$8:
    com.parse.OfflineQueryLogic val$queryLogic -> val$queryLogic
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.util.List val$results -> val$results
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8$1 -> com.parse.OfflineStore$8$1:
    bolts.Capture val$object -> val$object
    com.parse.OfflineStore$8 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8$2 -> com.parse.OfflineStore$8$2:
    bolts.Capture val$object -> val$object
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.OfflineStore$8 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8$3 -> com.parse.OfflineStore$8$3:
    bolts.Capture val$object -> val$object
    com.parse.OfflineStore$8 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8$4 -> com.parse.OfflineStore$8$4:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore$8 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$9 -> com.parse.OfflineStore$9:
    bolts.Capture val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$OfflineDecoder -> com.parse.OfflineStore$OfflineDecoder:
    java.util.Map offlineObjects -> offlineObjects
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.OfflineStore$OfflineEncodingStrategy -> com.parse.OfflineStore$OfflineEncodingStrategy:
    com.parse.ParseSQLiteDatabase db -> db
    java.util.ArrayList tasks -> tasks
    java.lang.Object tasksLock -> tasksLock
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task whenFinished() -> whenFinished
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
    java.lang.Object access$000(com.parse.OfflineStore$OfflineEncodingStrategy) -> access$000
    java.util.ArrayList access$100(com.parse.OfflineStore$OfflineEncodingStrategy) -> access$100
com.parse.OfflineStore$OfflineEncodingStrategy$1 -> com.parse.OfflineStore$OfflineEncodingStrategy$1:
    com.parse.OfflineStore$OfflineEncodingStrategy this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$OfflineEncodingStrategy$2 -> com.parse.OfflineStore$OfflineEncodingStrategy$2:
    org.json.JSONObject val$result -> val$result
    com.parse.OfflineStore$OfflineEncodingStrategy this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PackageManagerWrapper -> com.parse.PackageManagerWrapper:
    android.content.Context context -> context
    boolean hasPermission(java.lang.String) -> hasPermission
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
com.parse.Parse -> com.parse.Parse:
    java.lang.String TAG -> TAG
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int logLevel -> logLevel
    int maxParseFileSize -> maxParseFileSize
    int maxKeyValueCacheBytes -> maxKeyValueCacheBytes
    int maxKeyValueCacheFiles -> maxKeyValueCacheFiles
    java.lang.Object MUTEX -> MUTEX
    com.parse.ParseEventuallyQueue eventuallyQueue -> eventuallyQueue
    java.lang.Object MUTEX_CALLBACKS -> MUTEX_CALLBACKS
    java.util.Set callbacks -> callbacks
    java.text.DateFormat dateFormat -> dateFormat
    java.util.concurrent.ScheduledExecutorService scheduledExecutor -> scheduledExecutor
    java.lang.Object SCHEDULED_EXECUTOR_LOCK -> SCHEDULED_EXECUTOR_LOCK
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    boolean isInitialized() -> isInitialized
    void enableLocalDatastore(android.content.Context) -> enableLocalDatastore
    boolean allParsePushIntentReceiversInternal() -> allParsePushIntentReceiversInternal
    android.content.Context getApplicationContext() -> getApplicationContext
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void logV(java.lang.String,java.lang.String,java.lang.Throwable) -> logV
    void logV(java.lang.String,java.lang.String) -> logV
    void logD(java.lang.String,java.lang.String,java.lang.Throwable) -> logD
    void logD(java.lang.String,java.lang.String) -> logD
    void logI(java.lang.String,java.lang.String,java.lang.Throwable) -> logI
    void logI(java.lang.String,java.lang.String) -> logI
    void logW(java.lang.String,java.lang.String,java.lang.Throwable) -> logW
    void logW(java.lang.String,java.lang.String) -> logW
    void logE(java.lang.String,java.lang.String,java.lang.Throwable) -> logE
    void logE(java.lang.String,java.lang.String) -> logE
    void setContextIfNeeded(android.content.Context) -> setContextIfNeeded
    java.io.File getParseDir() -> getParseDir
    java.io.File getParseCacheDir(java.lang.String) -> getParseCacheDir
    java.io.File getParseFilesDir(java.lang.String) -> getParseFilesDir
    void recursiveDelete(java.io.File) -> recursiveDelete
    void checkCacheApplicationId() -> checkCacheApplicationId
    java.io.File getKeyValueCacheDir() -> getKeyValueCacheDir
    java.io.File getKeyValueCacheFile(java.lang.String) -> getKeyValueCacheFile
    long getKeyValueCacheAge(java.io.File) -> getKeyValueCacheAge
    java.io.File createKeyValueCacheFile(java.lang.String) -> createKeyValueCacheFile
    void clearCacheDir() -> clearCacheDir
    void saveToKeyValueCache(java.lang.String,java.lang.String) -> saveToKeyValueCache
    void clearFromKeyValueCache(java.lang.String) -> clearFromKeyValueCache
    java.lang.String loadFromKeyValueCache(java.lang.String,long) -> loadFromKeyValueCache
    java.lang.Object jsonFromKeyValueCache(java.lang.String,long) -> jsonFromKeyValueCache
    com.parse.ParseEventuallyQueue getEventuallyQueue() -> getEventuallyQueue
    void checkInit() -> checkInit
    void checkContext() -> checkContext
    boolean hasPermission(java.lang.String) -> hasPermission
    void requirePermission(java.lang.String) -> requirePermission
    boolean isValidType(java.lang.Object) -> isValidType
    java.lang.Object encode(java.lang.Object,com.parse.ParseObjectEncodingStrategy) -> encode
    java.util.Date stringToDate(java.lang.String) -> stringToDate
    java.lang.String dateToString(java.util.Date) -> dateToString
    org.json.JSONObject encodeDate(java.util.Date) -> encodeDate
    java.lang.Iterable keys(org.json.JSONObject) -> keys
    boolean isContainerObject(java.lang.Object) -> isContainerObject
    java.lang.Number addNumbers(java.lang.Number,java.lang.Number) -> addNumbers
    java.lang.Number subtractNumbers(java.lang.Number,java.lang.Number) -> subtractNumbers
    int compareNumbers(java.lang.Number,java.lang.Number) -> compareNumbers
    java.lang.String join(java.lang.CharSequence,java.lang.Iterable) -> join
    java.lang.Object waitForTask(bolts.Task) -> waitForTask
    java.util.concurrent.ScheduledExecutorService getScheduledExecutor() -> getScheduledExecutor
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback) -> callbackOnMainThreadAsync
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback,boolean) -> callbackOnMainThreadAsync
    void saveDiskObject(java.io.File,org.json.JSONObject) -> saveDiskObject
    org.json.JSONObject getDiskObject(java.io.File) -> getDiskObject
    void registerParseCallbacks(com.parse.Parse$ParseCallbacks) -> registerParseCallbacks
    void unregisterParseCallbacks(com.parse.Parse$ParseCallbacks) -> unregisterParseCallbacks
    com.parse.Parse$ParseCallbacks[] collectParseCallbacks() -> collectParseCallbacks
    void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject) -> saveDiskObject
    org.json.JSONObject getDiskObject(android.content.Context,java.lang.String) -> getDiskObject
    boolean deleteDiskObject(android.content.Context,java.lang.String) -> deleteDiskObject
com.parse.Parse$1 -> com.parse.Parse$1:
    void run() -> run
com.parse.Parse$2 -> com.parse.Parse$2:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.Parse$3 -> com.parse.Parse$3:
    java.lang.String val$suffix -> val$suffix
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.Parse$4 -> com.parse.Parse$4:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.Parse$5 -> com.parse.Parse$5:
    org.json.JSONObject val$finalObject -> val$finalObject
    java.util.Iterator iterator() -> iterator
com.parse.Parse$6 -> com.parse.Parse$6:
    boolean val$reportCancellation -> val$reportCancellation
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCallback val$callback -> val$callback
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.Parse$6$1 -> com.parse.Parse$6$1:
    bolts.Task val$task -> val$task
    com.parse.Parse$6 this$0 -> this$0
    void run() -> run
com.parse.Parse$ParseCallbacks -> com.parse.Parse$ParseCallbacks:
    void onParseInitialized() -> onParseInitialized
com.parse.ParseACL -> com.parse.ParseACL:
    java.lang.String PUBLIC_KEY -> PUBLIC_KEY
    java.lang.String UNRESOLVED_KEY -> UNRESOLVED_KEY
    com.parse.ParseACL defaultACL -> defaultACL
    boolean defaultACLUsesCurrentUser -> defaultACLUsesCurrentUser
    java.lang.ref.WeakReference lastCurrentUser -> lastCurrentUser
    com.parse.ParseACL defaultACLWithCurrentUser -> defaultACLWithCurrentUser
    boolean shared -> shared
    com.parse.ParseUser unresolvedUser -> unresolvedUser
    org.json.JSONObject permissionsById -> permissionsById
    com.parse.ParseACL copy() -> copy
    boolean isShared() -> isShared
    void setShared(boolean) -> setShared
    org.json.JSONObject toJSONObject(com.parse.ParseObjectEncodingStrategy) -> toJSONObject
    com.parse.ParseACL createACLFromJSONObject(org.json.JSONObject,com.parse.ParseDecoder) -> createACLFromJSONObject
    void resolveUser(com.parse.ParseUser) -> resolveUser
    boolean hasUnresolvedUser() -> hasUnresolvedUser
    void setAccess(java.lang.String,java.lang.String,boolean) -> setAccess
    boolean getAccess(java.lang.String,java.lang.String) -> getAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    boolean getPublicReadAccess() -> getPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setReadAccess(com.parse.ParseUser,boolean) -> setReadAccess
    void setUnresolvedReadAccess(com.parse.ParseUser,boolean) -> setUnresolvedReadAccess
    void setUnresolvedWriteAccess(com.parse.ParseUser,boolean) -> setUnresolvedWriteAccess
    void prepareUnresolvedUser(com.parse.ParseUser) -> prepareUnresolvedUser
    boolean getReadAccess(com.parse.ParseUser) -> getReadAccess
    void setWriteAccess(com.parse.ParseUser,boolean) -> setWriteAccess
    boolean getWriteAccess(com.parse.ParseUser) -> getWriteAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void validateRoleState(com.parse.ParseRole) -> validateRoleState
    boolean getRoleReadAccess(com.parse.ParseRole) -> getRoleReadAccess
    void setRoleReadAccess(com.parse.ParseRole,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(com.parse.ParseRole) -> getRoleWriteAccess
    void setRoleWriteAccess(com.parse.ParseRole,boolean) -> setRoleWriteAccess
    void setDefaultACL(com.parse.ParseACL,boolean) -> setDefaultACL
    com.parse.ParseACL getDefaultACL() -> getDefaultACL
    void access$000(com.parse.ParseACL,com.parse.ParseUser) -> access$000
com.parse.ParseACL$UserResolutionListener -> com.parse.ParseACL$UserResolutionListener:
    java.lang.ref.WeakReference parent -> parent
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
com.parse.ParseAWSRequest -> com.parse.ParseAWSRequest:
    java.lang.String mimeType -> mimeType
    org.json.JSONObject postParams -> postParams
    com.parse.ProgressCallback progressCallback -> progressCallback
    byte[] data -> data
    void setMimeType(java.lang.String) -> setMimeType
    void setPostParams(org.json.JSONObject) -> setPostParams
    void setProgressCallback(com.parse.ProgressCallback) -> setProgressCallback
    void setData(byte[]) -> setData
    org.apache.http.HttpEntity newEntity() -> newEntity
    byte[] onResponse(org.apache.http.HttpResponse,com.parse.ProgressCallback) -> onResponse
    java.lang.Object onResponse(org.apache.http.HttpResponse,com.parse.ProgressCallback) -> onResponse
com.parse.ParseAddOperation -> com.parse.ParseAddOperation:
    java.util.ArrayList objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAddUniqueOperation -> com.parse.ParseAddUniqueOperation:
    java.util.LinkedHashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAnalytics -> com.parse.ParseAnalytics:
    java.lang.String TAG -> TAG
    java.lang.String OP -> OP
    java.lang.String APP_OPENED -> APP_OPENED
    java.util.Map lruSeenPushes -> lruSeenPushes
    bolts.Task trackAppOpenedInBackground(android.content.Intent) -> trackAppOpenedInBackground
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void trackAppOpenedInBackground(android.content.Intent,com.parse.SaveCallback) -> trackAppOpenedInBackground
    void trackEvent(java.lang.String) -> trackEvent
    void trackEventInBackground(java.lang.String,com.parse.SaveCallback) -> trackEventInBackground
    void trackEvent(java.lang.String,java.util.Map) -> trackEvent
    void trackEventInBackground(java.lang.String,java.util.Map,com.parse.SaveCallback) -> trackEventInBackground
    bolts.Task trackEventInBackground(java.lang.String) -> trackEventInBackground
    bolts.Task trackEventInBackground(java.lang.String,java.util.Map) -> trackEventInBackground
    com.parse.ParseCommand createCommand(java.lang.String) -> createCommand
com.parse.ParseAnalytics$1 -> com.parse.ParseAnalytics$1:
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.parse.ParseAnonymousUtils -> com.parse.ParseAnonymousUtils:
    com.parse.AnonymousAuthenticationProvider provider -> provider
    java.lang.String AUTH_TYPE_ANONYMOUS -> AUTH_TYPE_ANONYMOUS
    java.lang.String SERVICE_NAME_ANONYMOUS -> SERVICE_NAME_ANONYMOUS
    void initialize() -> initialize
    boolean isLinked(com.parse.ParseUser) -> isLinked
    bolts.Task logInInBackground() -> logInInBackground
    void logIn(com.parse.LogInCallback) -> logIn
    com.parse.ParseUser lazyLogIn() -> lazyLogIn
com.parse.ParseAuthenticationProvider -> com.parse.ParseAuthenticationProvider:
    void authenticate(com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback -> com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback:
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.ParseBroadcastReceiver -> com.parse.ParseBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseCallback -> com.parse.ParseCallback:
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ParseClassName -> com.parse.ParseClassName:
    java.lang.String value() -> value
com.parse.ParseCloud -> com.parse.ParseCloud:
    com.parse.ParseCommand constructCallCommand(java.lang.String,java.util.Map) -> constructCallCommand
    java.lang.Object convertCloudResponse(java.lang.Object) -> convertCloudResponse
    bolts.Task callFunctionInBackground(java.lang.String,java.util.Map) -> callFunctionInBackground
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.parse.FunctionCallback) -> callFunctionInBackground
    java.lang.Object access$000(java.lang.Object) -> access$000
com.parse.ParseCloud$1 -> com.parse.ParseCloud$1:
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCommand -> com.parse.ParseCommand:
    java.lang.String COMMAND_UUID -> COMMAND_UUID
    java.lang.String SESSION_TOKEN -> SESSION_TOKEN
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String APP_BUILD_VERSION -> APP_BUILD_VERSION
    java.lang.String APP_DISPLAY_VERSION -> APP_DISPLAY_VERSION
    java.lang.String INSTALLATION_ID -> INSTALLATION_ID
    java.lang.String DEVICE_TYPE_AND_SDK_VERSION -> DEVICE_TYPE_AND_SDK_VERSION
    java.lang.String op -> op
    org.json.JSONObject params -> params
    java.lang.String localId -> localId
    java.lang.String operationSetUUID -> operationSetUUID
    java.lang.String sessionToken -> sessionToken
    java.lang.String generateUrl(java.lang.String) -> generateUrl
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,org.json.JSONArray) -> put
    void put(java.lang.String,org.json.JSONObject) -> put
    java.lang.String getOp() -> getOp
    void setOp(java.lang.String) -> setOp
    java.lang.String getSessionToken() -> getSessionToken
    java.lang.String getOperationSetUUID() -> getOperationSetUUID
    void setOperationSetUUID(java.lang.String) -> setOperationSetUUID
    java.lang.String getLocalId() -> getLocalId
    void setLocalId(java.lang.String) -> setLocalId
    void enableRetrying() -> enableRetrying
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.lang.String getCacheKey() -> getCacheKey
    java.lang.String toDeterministicString(java.lang.Object) -> toDeterministicString
    void addToStringer(org.json.JSONStringer,java.lang.Object) -> addToStringer
    void addDefaultParameters(org.json.JSONObject,java.lang.String) -> addDefaultParameters
    org.apache.http.HttpEntity newEntity() -> newEntity
    org.apache.http.client.methods.HttpUriRequest newRequest() -> newRequest
    bolts.Task onPreExecute(bolts.Task) -> onPreExecute
    org.json.JSONObject onResponse(org.apache.http.HttpResponse,com.parse.ProgressCallback) -> onResponse
    bolts.Task onPostExecute(bolts.Task) -> onPostExecute
    void getLocalPointersIn(java.lang.Object,java.util.ArrayList) -> getLocalPointersIn
    void maybeChangeServerOperation() -> maybeChangeServerOperation
    void resolveLocalIds() -> resolveLocalIds
    void retainLocalIds() -> retainLocalIds
    void releaseLocalIds() -> releaseLocalIds
    java.lang.Object onResponse(org.apache.http.HttpResponse,com.parse.ProgressCallback) -> onResponse
com.parse.ParseCommandCache -> com.parse.ParseCommandCache:
    java.lang.String TAG -> TAG
    int filenameCounter -> filenameCounter
    java.lang.Object lock -> lock
    java.io.File cachePath -> cachePath
    int timeoutMaxRetries -> timeoutMaxRetries
    double timeoutRetryWaitSeconds -> timeoutRetryWaitSeconds
    int maxCacheSizeBytes -> maxCacheSizeBytes
    boolean shouldStop -> shouldStop
    boolean unprocessedCommandsExist -> unprocessedCommandsExist
    java.util.HashMap pendingTasks -> pendingTasks
    boolean running -> running
    java.lang.Object runningLock -> runningLock
    java.util.logging.Logger log -> log
    java.io.File getCacheDir() -> getCacheDir
    int getPendingCount() -> getPendingCount
    void setTimeoutMaxRetries(int) -> setTimeoutMaxRetries
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    void resume() -> resume
    void pause() -> pause
    void removeFile(java.io.File) -> removeFile
    void simulateReboot() -> simulateReboot
    void fakeObjectUpdate() -> fakeObjectUpdate
    bolts.Task enqueueEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseCommand,boolean,com.parse.ParseObject) -> enqueueEventuallyAsync
    int pendingCount() -> pendingCount
    void clear() -> clear
    void setConnected(boolean) -> setConnected
    java.lang.Object waitForTaskWithoutLock(bolts.Task) -> waitForTaskWithoutLock
    void maybeRunAllCommandsNow(int) -> maybeRunAllCommandsNow
    void runLoop() -> runLoop
    void access$000(com.parse.ParseCommandCache) -> access$000
    java.lang.Object access$100() -> access$100
com.parse.ParseCommandCache$1 -> com.parse.ParseCommandCache$1:
    com.parse.ParseCommandCache this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParseCommandCache$2 -> com.parse.ParseCommandCache$2:
    com.parse.ParseCommandCache this$0 -> this$0
    void run() -> run
com.parse.ParseCommandCache$3 -> com.parse.ParseCommandCache$3:
    bolts.Capture val$finished -> val$finished
    com.parse.ParseCommandCache this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCommandCache$4 -> com.parse.ParseCommandCache$4:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.String val$localId -> val$localId
    com.parse.ParseCommandCache this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig -> com.parse.ParseConfig:
    java.lang.String CURRENT_CONFIG_FILENAME -> CURRENT_CONFIG_FILENAME
    com.parse.TaskQueue taskQueue -> taskQueue
    java.lang.Object currentConfigMutex -> currentConfigMutex
    com.parse.ParseConfig currentConfig -> currentConfig
    java.util.Map params -> params
    com.parse.ParseConfig getCurrentConfig() -> getCurrentConfig
    com.parse.ParseConfig get() -> get
    void getInBackground(com.parse.ConfigCallback) -> getInBackground
    bolts.Task getInBackground() -> getInBackground
    bolts.Task getAsync(bolts.Task) -> getAsync
    void clearCurrentConfigForTesting() -> clearCurrentConfigForTesting
    com.parse.ParseConfig getFromDisk(android.content.Context,java.lang.String) -> getFromDisk
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    java.util.Date getDate(java.lang.String,java.util.Date) -> getDate
    double getDouble(java.lang.String) -> getDouble
    double getDouble(java.lang.String,double) -> getDouble
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONArray getJSONArray(java.lang.String,org.json.JSONArray) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    org.json.JSONObject getJSONObject(java.lang.String,org.json.JSONObject) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    java.util.List getList(java.lang.String,java.util.List) -> getList
    long getLong(java.lang.String) -> getLong
    long getLong(java.lang.String,long) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.util.Map getMap(java.lang.String,java.util.Map) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    java.lang.Number getNumber(java.lang.String,java.lang.Number) -> getNumber
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseFile getParseFile(java.lang.String,com.parse.ParseFile) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String,com.parse.ParseGeoPoint) -> getParseGeoPoint
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    void saveToDisk(android.content.Context,java.lang.String) -> saveToDisk
    java.lang.String toString() -> toString
    bolts.Task access$000(bolts.Task) -> access$000
    void access$100(com.parse.ParseConfig,android.content.Context,java.lang.String) -> access$100
    java.lang.Object access$200() -> access$200
    com.parse.ParseConfig access$302(com.parse.ParseConfig) -> access$302
    com.parse.ParseConfig access$300() -> access$300
com.parse.ParseConfig$1 -> com.parse.ParseConfig$1:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig$2 -> com.parse.ParseConfig$2:
    com.parse.ParseConfig then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig$3 -> com.parse.ParseConfig$3:
    com.parse.ParseCommand val$command -> val$command
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCrashReportHandler -> com.parse.ParseCrashReportHandler:
    com.parse.ReportField[] CRASH_REPORT_FIELDS -> CRASH_REPORT_FIELDS
    void send(com.parse.CrashReportData) -> send
    org.json.JSONObject getCrashReportEventPayload(com.parse.CrashReportData) -> getCrashReportEventPayload
com.parse.ParseCrashReporter -> com.parse.ParseCrashReporter:
    com.parse.ParseCrashReporter defaultInstance -> defaultInstance
    java.lang.Object defaultInstanceLock -> defaultInstanceLock
    java.lang.String REPORT_ENDPOINT -> REPORT_ENDPOINT
    com.parse.ErrorReporter innerCrashReporter -> innerCrashReporter
    void enableCrashReporting(android.content.Context) -> enableCrashReporting
    boolean isEnabled() -> isEnabled
    com.parse.ParseCrashReporter getCurrent() -> getCurrent
    com.parse.ErrorReporter access$002(com.parse.ParseCrashReporter,com.parse.ErrorReporter) -> access$002
    com.parse.ErrorReporter access$000(com.parse.ParseCrashReporter) -> access$000
com.parse.ParseCrashReporter$1 -> com.parse.ParseCrashReporter$1:
    com.parse.ParseCrashReporter this$0 -> this$0
    java.io.File getFile(java.lang.String) -> getFile
com.parse.ParseCrashReporter$2 -> com.parse.ParseCrashReporter$2:
    android.content.Context val$applicationContext -> val$applicationContext
    com.parse.FileProvider val$fileProvider -> val$fileProvider
    com.parse.ParseCrashReporter this$0 -> this$0
    void onParseInitialized() -> onParseInitialized
com.parse.ParseCrashReporting -> com.parse.ParseCrashReporting:
    java.lang.String CRASH_REPORT -> CRASH_REPORT
    void enable(android.content.Context) -> enable
    boolean isCrashReportingEnabled() -> isCrashReportingEnabled
    void trackCrashReport(org.json.JSONObject) -> trackCrashReport
com.parse.ParseDecoder -> com.parse.ParseDecoder:
    java.util.List convertJSONArrayToList(org.json.JSONArray) -> convertJSONArrayToList
    java.util.Map convertJSONObjectToMap(org.json.JSONObject) -> convertJSONObjectToMap
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.ParseDeleteOperation -> com.parse.ParseDeleteOperation:
    com.parse.ParseDeleteOperation defaultInstance -> defaultInstance
    com.parse.ParseDeleteOperation getInstance() -> getInstance
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseEventuallyQueue -> com.parse.ParseEventuallyQueue:
    boolean isConnected -> isConnected
    com.parse.ParseEventuallyQueue$TestHelper testHelper -> testHelper
    void setConnected(boolean) -> setConnected
    boolean isConnected() -> isConnected
    int pendingCount() -> pendingCount
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    com.parse.ParseEventuallyQueue$TestHelper getTestHelper() -> getTestHelper
    void notifyTestHelper(int) -> notifyTestHelper
    void pause() -> pause
    void resume() -> resume
    bolts.Task enqueueEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    bolts.Task waitForOperationSetAndEventuallyPin(com.parse.ParseOperationSet,com.parse.EventuallyPin) -> waitForOperationSetAndEventuallyPin
    void simulateReboot() -> simulateReboot
    void clear() -> clear
    void fakeObjectUpdate() -> fakeObjectUpdate
com.parse.ParseEventuallyQueue$1 -> com.parse.ParseEventuallyQueue$1:
com.parse.ParseEventuallyQueue$TestHelper -> com.parse.ParseEventuallyQueue$TestHelper:
    int MAX_EVENTS -> MAX_EVENTS
    int COMMAND_SUCCESSFUL -> COMMAND_SUCCESSFUL
    int COMMAND_FAILED -> COMMAND_FAILED
    int COMMAND_ENQUEUED -> COMMAND_ENQUEUED
    int COMMAND_NOT_ENQUEUED -> COMMAND_NOT_ENQUEUED
    int OBJECT_UPDATED -> OBJECT_UPDATED
    int OBJECT_REMOVED -> OBJECT_REMOVED
    int NETWORK_DOWN -> NETWORK_DOWN
    android.util.SparseArray events -> events
    java.lang.String getEventString(int) -> getEventString
    void clear() -> clear
    int unexpectedEvents() -> unexpectedEvents
    java.util.List getUnexpectedEvents() -> getUnexpectedEvents
    void notify(int) -> notify
    boolean waitFor(int) -> waitFor
    boolean waitFor(int,int) -> waitFor
com.parse.ParseException -> com.parse.ParseException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int INVALID_EVENT_NAME -> INVALID_EVENT_NAME
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int getCode() -> getCode
com.parse.ParseFacebookUtils -> com.parse.ParseFacebookUtils:
    com.parse.FacebookAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void initialize() -> initialize
    void initialize(java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    void unlink(com.parse.ParseUser) -> unlink
    bolts.Task unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
    bolts.Task linkInBackground(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date) -> linkInBackground
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date,com.parse.SaveCallback) -> link
    bolts.Task linkInBackground(com.parse.ParseUser,java.util.Collection,android.app.Activity,int) -> linkInBackground
    bolts.Task linkInBackground(com.parse.ParseUser,java.util.Collection,android.app.Activity) -> linkInBackground
    bolts.Task linkInBackground(com.parse.ParseUser,android.app.Activity,int) -> linkInBackground
    bolts.Task linkInBackground(com.parse.ParseUser,android.app.Activity) -> linkInBackground
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity) -> link
    void link(com.parse.ParseUser,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,android.app.Activity) -> link
    bolts.Task logInInBackground(java.lang.String,java.lang.String,java.util.Date) -> logInInBackground
    void logIn(java.lang.String,java.lang.String,java.util.Date,com.parse.LogInCallback) -> logIn
    bolts.Task logInInBackground(java.util.Collection,android.app.Activity,int) -> logInInBackground
    void logIn(java.util.Collection,android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(java.util.Collection,android.app.Activity,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,com.parse.LogInCallback) -> logIn
    void finishAuthentication(int,int,android.content.Intent) -> finishAuthentication
    bolts.Task saveLatestSessionDataInBackground(com.parse.ParseUser) -> saveLatestSessionDataInBackground
    void saveLatestSessionData(com.parse.ParseUser,com.parse.SaveCallback) -> saveLatestSessionData
    void saveLatestSessionData(com.parse.ParseUser) -> saveLatestSessionData
    boolean shouldExtendAccessToken(com.parse.ParseUser) -> shouldExtendAccessToken
    void extendAccessToken(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessToken
    boolean extendAccessTokenIfNeeded(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessTokenIfNeeded
com.parse.ParseFacebookUtils$1 -> com.parse.ParseFacebookUtils$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.SaveCallback val$callback -> val$callback
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
com.parse.ParseFacebookUtils$Permissions -> com.parse.ParseFacebookUtils$Permissions:
com.parse.ParseFacebookUtils$Permissions$Extended -> com.parse.ParseFacebookUtils$Permissions$Extended:
    java.lang.String READ_FRIEND_LISTS -> READ_FRIEND_LISTS
    java.lang.String READ_INSIGHTS -> READ_INSIGHTS
    java.lang.String READ_MAILBOX -> READ_MAILBOX
    java.lang.String READ_REQUESTS -> READ_REQUESTS
    java.lang.String READ_STREAM -> READ_STREAM
    java.lang.String XMPP_LOGIN -> XMPP_LOGIN
    java.lang.String ADS_MANAGEMENT -> ADS_MANAGEMENT
    java.lang.String CREATE_EVENT -> CREATE_EVENT
    java.lang.String MANAGE_FRIEND_LISTS -> MANAGE_FRIEND_LISTS
    java.lang.String MANAGE_NOTIFICATIONS -> MANAGE_NOTIFICATIONS
    java.lang.String OFFLINE_ACCESS -> OFFLINE_ACCESS
    java.lang.String PUBLISH_CHECKINS -> PUBLISH_CHECKINS
    java.lang.String PUBLISH_STREAM -> PUBLISH_STREAM
    java.lang.String RSVP_EVENT -> RSVP_EVENT
    java.lang.String PUBLISH_ACTIONS -> PUBLISH_ACTIONS
com.parse.ParseFacebookUtils$Permissions$Friends -> com.parse.ParseFacebookUtils$Permissions$Friends:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
com.parse.ParseFacebookUtils$Permissions$Page -> com.parse.ParseFacebookUtils$Permissions$Page:
    java.lang.String MANAGE_PAGES -> MANAGE_PAGES
com.parse.ParseFacebookUtils$Permissions$User -> com.parse.ParseFacebookUtils$Permissions$User:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
    java.lang.String EMAIL -> EMAIL
com.parse.ParseFieldOperation -> com.parse.ParseFieldOperation:
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseFieldOperations -> com.parse.ParseFieldOperations:
    java.util.Map opDecoderMap -> opDecoderMap
    void registerDecoder(java.lang.String,com.parse.ParseFieldOperations$ParseFieldOperationFactory) -> registerDecoder
    void registerDefaultDecoders() -> registerDefaultDecoders
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
    java.util.ArrayList jsonArrayAsArrayList(org.json.JSONArray) -> jsonArrayAsArrayList
com.parse.ParseFieldOperations$1 -> com.parse.ParseFieldOperations$1:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$2 -> com.parse.ParseFieldOperations$2:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$3 -> com.parse.ParseFieldOperations$3:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$4 -> com.parse.ParseFieldOperations$4:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$5 -> com.parse.ParseFieldOperations$5:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$6 -> com.parse.ParseFieldOperations$6:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$7 -> com.parse.ParseFieldOperations$7:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$8 -> com.parse.ParseFieldOperations$8:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$ParseFieldOperationFactory -> com.parse.ParseFieldOperations$ParseFieldOperationFactory:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFile -> com.parse.ParseFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String contentType -> contentType
    byte[] data -> data
    com.parse.ParseAWSRequest request -> request
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Set currentTasks -> currentTasks
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getFilesDir() -> getFilesDir
    void clearCache() -> clearCache
    java.lang.String getFilename() -> getFilename
    java.io.File getCacheFile() -> getCacheFile
    java.io.File getFilesFile() -> getFilesFile
    java.lang.String getName() -> getName
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    byte[] getCachedData() -> getCachedData
    boolean isPinned() -> isPinned
    void pin() -> pin
    void unpin() -> unpin
    bolts.Task pinInBackground() -> pinInBackground
    bolts.Task unpinInBackground() -> unpinInBackground
    void pinInBackground(com.parse.ParseCallback) -> pinInBackground
    void unpinInBackground(com.parse.ParseCallback) -> unpinInBackground
    void setPinned(boolean) -> setPinned
    void setPinnedInBackground(boolean,com.parse.ParseCallback) -> setPinnedInBackground
    bolts.Task setPinnedInBackground(boolean) -> setPinnedInBackground
    com.parse.ParseCommand constructFileUploadCommand(java.lang.String) -> constructFileUploadCommand
    void prepareFileUploadPost(org.json.JSONObject,com.parse.ProgressCallback) -> prepareFileUploadPost
    bolts.Task handleFileUploadResultAsync(org.json.JSONObject,com.parse.ProgressCallback) -> handleFileUploadResultAsync
    void save() -> save
    void save(com.parse.ProgressCallback) -> save
    bolts.Task saveAsync(com.parse.ProgressCallback,bolts.Task) -> saveAsync
    bolts.Task saveInBackground(com.parse.ProgressCallback) -> saveInBackground
    bolts.Task saveInBackground() -> saveInBackground
    void saveInBackground(com.parse.SaveCallback,com.parse.ProgressCallback) -> saveInBackground
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    byte[] getData() -> getData
    bolts.Task getDataAsync(com.parse.ProgressCallback,bolts.Task) -> getDataAsync
    bolts.Task getDataInBackground(com.parse.ProgressCallback) -> getDataInBackground
    bolts.Task getDataInBackground() -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback,com.parse.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    org.json.JSONObject encode() -> encode
    java.util.Set access$000(com.parse.ParseFile) -> access$000
    boolean access$102(com.parse.ParseFile,boolean) -> access$102
    bolts.Task access$200(com.parse.ParseFile,org.json.JSONObject,com.parse.ProgressCallback) -> access$200
    com.parse.ParseCommand access$300(com.parse.ParseFile,java.lang.String) -> access$300
    java.lang.String access$400(com.parse.ParseFile) -> access$400
    byte[] access$500(com.parse.ParseFile) -> access$500
    bolts.Task access$600(com.parse.ParseFile,com.parse.ProgressCallback,bolts.Task) -> access$600
com.parse.ParseFile$1 -> com.parse.ParseFile$1:
    boolean val$pinned -> val$pinned
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$2 -> com.parse.ParseFile$2:
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3 -> com.parse.ParseFile$3:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3$1 -> com.parse.ParseFile$3$1:
    com.parse.ParseFile$3 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3$2 -> com.parse.ParseFile$3$2:
    com.parse.ParseFile$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3$3 -> com.parse.ParseFile$3$3:
    com.parse.ParseFile$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3$4 -> com.parse.ParseFile$3$4:
    com.parse.ParseFile$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3$5 -> com.parse.ParseFile$3$5:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseFile$3 this$1 -> this$1
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseFile$3$5$1 -> com.parse.ParseFile$3$5$1:
    com.parse.ParseCommand val$command -> val$command
    com.parse.ParseFile$3$5 this$2 -> this$2
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$4 -> com.parse.ParseFile$4:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$5 -> com.parse.ParseFile$5:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$5$1 -> com.parse.ParseFile$5$1:
    com.parse.ParseFile$5 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$5$2 -> com.parse.ParseFile$5$2:
    com.parse.ParseFile$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$6 -> com.parse.ParseFile$6:
    com.parse.ParseFile this$0 -> this$0
    byte[] then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$7 -> com.parse.ParseFile$7:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFileUtils -> com.parse.ParseFileUtils:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long FILE_COPY_BUFFER_SIZE -> FILE_COPY_BUFFER_SIZE
    byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    void moveFile(java.io.File,java.io.File) -> moveFile
    void copyFile(java.io.File,java.io.File) -> copyFile
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    void deleteDirectory(java.io.File) -> deleteDirectory
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    void cleanDirectory(java.io.File) -> cleanDirectory
    void forceDelete(java.io.File) -> forceDelete
    boolean isSymlink(java.io.File) -> isSymlink
com.parse.ParseGeoPoint -> com.parse.ParseGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double EARTH_MEAN_RADIUS_MILE -> EARTH_MEAN_RADIUS_MILE
    double latitude -> latitude
    double longitude -> longitude
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    double distanceInRadiansTo(com.parse.ParseGeoPoint) -> distanceInRadiansTo
    double distanceInKilometersTo(com.parse.ParseGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.parse.ParseGeoPoint) -> distanceInMilesTo
    bolts.Task getCurrentLocationInBackground(long) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,com.parse.LocationCallback) -> getCurrentLocationInBackground
    bolts.Task getCurrentLocationInBackground(long,android.location.Criteria) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,android.location.Criteria,com.parse.LocationCallback) -> getCurrentLocationInBackground
    java.lang.String toString() -> toString
com.parse.ParseGeoPoint$1 -> com.parse.ParseGeoPoint$1:
    com.parse.ParseGeoPoint then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseGeoPoint$2 -> com.parse.ParseGeoPoint$2:
    com.parse.ParseGeoPoint then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseIOUtils -> com.parse.ParseIOUtils:
    int EOF -> EOF
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    long skip(java.io.InputStream,long) -> skip
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    void skipFully(java.io.InputStream,long) -> skipFully
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.parse.ParseImageView -> com.parse.ParseImageView:
    com.parse.ParseFile file -> file
    android.graphics.drawable.Drawable placeholder -> placeholder
    boolean isLoaded -> isLoaded
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setParseFile(com.parse.ParseFile) -> setParseFile
    bolts.Task loadInBackground() -> loadInBackground
    void loadInBackground(com.parse.GetDataCallback) -> loadInBackground
    com.parse.ParseFile access$000(com.parse.ParseImageView) -> access$000
com.parse.ParseImageView$1 -> com.parse.ParseImageView$1:
    com.parse.ParseFile val$loadingFile -> val$loadingFile
    com.parse.ParseImageView this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseIncrementOperation -> com.parse.ParseIncrementOperation:
    java.lang.Number amount -> amount
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseInstallation -> com.parse.ParseInstallation:
    java.lang.String TAG -> TAG
    java.lang.Object MUTEX_CURRENT_INSTALLATION -> MUTEX_CURRENT_INSTALLATION
    java.lang.String INSTALLATION_ID_LOCATION -> INSTALLATION_ID_LOCATION
    java.lang.String STORAGE_LOCATION -> STORAGE_LOCATION
    java.lang.String PIN_CURRENT_INSTALLATION -> PIN_CURRENT_INSTALLATION
    java.lang.String INSTALLATION_ID -> INSTALLATION_ID
    java.lang.String DEVICE_TYPE -> DEVICE_TYPE
    java.lang.String APP_NAME -> APP_NAME
    java.lang.String APP_IDENTIFIER -> APP_IDENTIFIER
    java.lang.String PARSE_VERSION -> PARSE_VERSION
    java.lang.String DEVICE_TOKEN -> DEVICE_TOKEN
    java.lang.String DEVICE_TOKEN_LAST_MODIFIED -> DEVICE_TOKEN_LAST_MODIFIED
    java.lang.String PUSH_TYPE -> PUSH_TYPE
    java.lang.String TIMEZONE -> TIMEZONE
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String APP_VERSION -> APP_VERSION
    java.util.List READ_ONLY_FIELDS -> READ_ONLY_FIELDS
    com.parse.ParseInstallation currentInstallation -> currentInstallation
    java.lang.String installationId -> installationId
    void setDefaultValues() -> setDefaultValues
    boolean hasCurrentInstallation() -> hasCurrentInstallation
    com.parse.ParseInstallation getCurrentInstallation() -> getCurrentInstallation
    com.parse.ParseQuery getQuery() -> getQuery
    java.lang.String getOrCreateCurrentInstallationId() -> getOrCreateCurrentInstallationId
    void setCurrentInstallationId(java.lang.String) -> setCurrentInstallationId
    java.lang.String getInstallationId() -> getInstallationId
    void checkKeyIsMutable(java.lang.String) -> checkKeyIsMutable
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    void updateBeforeSave() -> updateBeforeSave
    bolts.Task fetchAsync(bolts.Task) -> fetchAsync
    bolts.Task handleSaveResultAsync(org.json.JSONObject,com.parse.ParseOperationSet) -> handleSaveResultAsync
    bolts.Task handleFetchResultAsync(org.json.JSONObject) -> handleFetchResultAsync
    void maybeUpdateInstallationIdOnDisk() -> maybeUpdateInstallationIdOnDisk
    void updateTimezone() -> updateTimezone
    void updateVersionInfo() -> updateVersionInfo
    void updateDeviceInfo() -> updateDeviceInfo
    com.parse.PushType getPushType() -> getPushType
    void setPushType(com.parse.PushType) -> setPushType
    void removePushType() -> removePushType
    java.lang.String getDeviceToken() -> getDeviceToken
    boolean isDeviceTokenStale() -> isDeviceTokenStale
    void setDeviceTokenLastModified(long) -> setDeviceTokenLastModified
    void setDeviceToken(java.lang.String) -> setDeviceToken
    void removeDeviceToken() -> removeDeviceToken
    bolts.Task maybeFlushToDiskAsync(com.parse.ParseInstallation) -> maybeFlushToDiskAsync
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    void clearCurrentInstallationFromDisk(android.content.Context) -> clearCurrentInstallationFromDisk
    boolean needsDefaultACL() -> needsDefaultACL
    bolts.Task access$001(com.parse.ParseInstallation,bolts.Task) -> access$001
    bolts.Task access$100(com.parse.ParseInstallation) -> access$100
    void access$200(com.parse.ParseInstallation) -> access$200
com.parse.ParseInstallation$1 -> com.parse.ParseInstallation$1:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$2 -> com.parse.ParseInstallation$2:
    bolts.Task val$toAwait -> val$toAwait
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$3 -> com.parse.ParseInstallation$3:
    com.parse.ParseInstallation this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$4 -> com.parse.ParseInstallation$4:
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$5 -> com.parse.ParseInstallation$5:
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$6 -> com.parse.ParseInstallation$6:
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$7 -> com.parse.ParseInstallation$7:
    com.parse.ParseInstallation val$installation -> val$installation
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$8 -> com.parse.ParseInstallation$8:
    com.parse.ParseInstallation val$installation -> val$installation
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$9 -> com.parse.ParseInstallation$9:
    com.parse.ParseInstallation val$installation -> val$installation
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseJSONCacheItem -> com.parse.ParseJSONCacheItem:
    org.json.JSONObject json -> json
    java.lang.String hashValue -> hashValue
    boolean equals(com.parse.ParseJSONCacheItem) -> equals
    java.lang.String getHashValue() -> getHashValue
    java.lang.Object getJSONObject() -> getJSONObject
com.parse.ParseMulticastDelegate -> com.parse.ParseMulticastDelegate:
    java.util.List callbacks -> callbacks
    void subscribe(com.parse.ParseCallback) -> subscribe
    void unsubscribe(com.parse.ParseCallback) -> unsubscribe
    void invoke(java.lang.Object,com.parse.ParseException) -> invoke
    void clear() -> clear
com.parse.ParseNotificationManager -> com.parse.ParseNotificationManager:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    java.util.concurrent.atomic.AtomicInteger notificationCount -> notificationCount
    boolean shouldShowNotifications -> shouldShowNotifications
    android.util.SparseIntArray iconIds -> iconIds
    com.parse.ParseNotificationManager getInstance() -> getInstance
    boolean getShouldShowNotifications() -> getShouldShowNotifications
    void setShouldShowNotifications(boolean) -> setShouldShowNotifications
    int getNotificationCount() -> getNotificationCount
    boolean isValidIconId(android.content.Context,int) -> isValidIconId
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> createNotification
    void showNotification(android.content.Context,android.app.Notification) -> showNotification
    void showNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> showNotification
com.parse.ParseNotificationManager$Singleton -> com.parse.ParseNotificationManager$Singleton:
    com.parse.ParseNotificationManager INSTANCE -> INSTANCE
    com.parse.ParseNotificationManager access$000() -> access$000
com.parse.ParseObject -> com.parse.ParseObject:
    java.lang.String TAG -> TAG
    java.lang.String server -> server
    java.lang.String API_VERSION -> API_VERSION
    java.lang.String AUTO_CLASS_NAME -> AUTO_CLASS_NAME
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String REST_KEY_COMPLETE -> REST_KEY_COMPLETE
    java.lang.String REST_KEY_OPERATIONS -> REST_KEY_OPERATIONS
    java.util.Map classNames -> classNames
    java.util.Map objectTypes -> objectTypes
    java.text.DateFormat impreciseDateFormat -> impreciseDateFormat
    java.lang.String objectId -> objectId
    java.lang.String localId -> localId
    java.lang.String className -> className
    com.parse.ParseMulticastDelegate saveEvent -> saveEvent
    java.util.Map serverData -> serverData
    java.util.LinkedList operationSetQueue -> operationSetQueue
    java.util.Map estimatedData -> estimatedData
    java.util.Map dataAvailability -> dataAvailability
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Map hashedObjects -> hashedObjects
    boolean hasBeenFetched -> hasBeenFetched
    boolean isDeleted -> isDeleted
    int isDeletingEventually -> isDeletingEventually
    java.util.Date updatedAt -> updatedAt
    java.util.Date createdAt -> createdAt
    java.lang.ThreadLocal isCreatingPointerForObjectId -> isCreatingPointerForObjectId
    java.lang.String NEW_OFFLINE_OBJECT_ID_PLACEHOLDER -> NEW_OFFLINE_OBJECT_ID_PLACEHOLDER
    java.lang.String DEFAULT_PIN -> DEFAULT_PIN
    com.parse.ParseObject create(java.lang.String) -> create
    com.parse.ParseObject create(java.lang.Class) -> create
    com.parse.ParseObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    com.parse.ParseObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    void registerSubclass(java.lang.Class) -> registerSubclass
    void unregisterSubclass(java.lang.String) -> unregisterSubclass
    java.lang.String getApplicationId() -> getApplicationId
    bolts.Task enqueueForAll(java.util.List,bolts.Continuation) -> enqueueForAll
    java.util.Date impreciseParseDate(java.lang.String) -> impreciseParseDate
    void saveToDisk(android.content.Context,java.lang.String) -> saveToDisk
    void addToHashedObjects(java.lang.Object) -> addToHashedObjects
    com.parse.ParseObject getFromDisk(android.content.Context,java.lang.String) -> getFromDisk
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean) -> fromJSON
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean,com.parse.ParseDecoder) -> fromJSON
    java.lang.String getClassName() -> getClassName
    java.util.Set keySet() -> keySet
    java.util.Date getUpdatedAt() -> getUpdatedAt
    java.util.Date getCreatedAt() -> getCreatedAt
    void copyChangesFrom(com.parse.ParseObject) -> copyChangesFrom
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void revert() -> revert
    void mergeAfterFetch(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeAfterFetch
    void mergeAfterSave(org.json.JSONObject,com.parse.ParseDecoder,com.parse.ParseOperationSet) -> mergeAfterSave
    java.util.Map collectFetchedObjects() -> collectFetchedObjects
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    org.json.JSONObject toRest(com.parse.ParseObjectEncodingStrategy) -> toRest
    void mergeREST(org.json.JSONObject,com.parse.ParseDecoder) -> mergeREST
    boolean hasDirtyChildren() -> hasDirtyChildren
    boolean isDirty() -> isDirty
    boolean isDirty(boolean) -> isDirty
    boolean hasChanges() -> hasChanges
    boolean hasOutstandingOperations() -> hasOutstandingOperations
    boolean isDirty(java.lang.String) -> isDirty
    void checkpointAllMutableContainers() -> checkpointAllMutableContainers
    void checkpointMutableContainer(java.lang.Object) -> checkpointMutableContainer
    void checkForChangesToMutableContainer(java.lang.String,java.lang.Object) -> checkForChangesToMutableContainer
    void checkForChangesToMutableContainers() -> checkForChangesToMutableContainers
    java.lang.String getObjectId() -> getObjectId
    java.lang.String getOrCreateLocalId() -> getOrCreateLocalId
    void setObjectId(java.lang.String) -> setObjectId
    void setObjectIdInternal(java.lang.String) -> setObjectIdInternal
    void findUnsavedChildren(java.lang.Object,java.util.List) -> findUnsavedChildren
    com.parse.ParseCommand constructSaveCommand(com.parse.ParseOperationSet,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    org.json.JSONObject toJSONObjectForSaving(com.parse.ParseOperationSet,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    bolts.Task handleSaveResultAsync(org.json.JSONObject,com.parse.ParseOperationSet) -> handleSaveResultAsync
    com.parse.ParseOperationSet startSave() -> startSave
    void validateSave() -> validateSave
    void save() -> save
    bolts.Task saveInBackground() -> saveInBackground
    bolts.Task saveAsync(bolts.Task) -> saveAsync
    bolts.Task saveAsync(com.parse.ParseOperationSet,java.lang.String) -> saveAsync
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    bolts.Task saveEventually() -> saveEventually
    bolts.Task enqueueSaveEventuallyOperationAsync(com.parse.ParseOperationSet) -> enqueueSaveEventuallyOperationAsync
    bolts.Task handleSaveEventuallyResultAsync(org.json.JSONObject,com.parse.ParseOperationSet) -> handleSaveEventuallyResultAsync
    void updateBeforeSave() -> updateBeforeSave
    void deleteEventually(com.parse.DeleteCallback) -> deleteEventually
    bolts.Task deleteEventually() -> deleteEventually
    bolts.Task handleDeleteEventuallyResultAsync(java.lang.Object) -> handleDeleteEventuallyResultAsync
    bolts.Task handleFetchResultAsync(org.json.JSONObject) -> handleFetchResultAsync
    void refresh() -> refresh
    void refreshInBackground(com.parse.RefreshCallback) -> refreshInBackground
    com.parse.ParseObject fetch() -> fetch
    bolts.Task fetchAsync(bolts.Task) -> fetchAsync
    bolts.Task fetchInBackground() -> fetchInBackground
    void fetchInBackground(com.parse.GetCallback) -> fetchInBackground
    bolts.Task fetchIfNeededInBackground() -> fetchIfNeededInBackground
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    void fetchIfNeededInBackground(com.parse.GetCallback) -> fetchIfNeededInBackground
    com.parse.ParseCommand constructDeleteCommand(boolean,java.lang.String) -> constructDeleteCommand
    void validateDelete() -> validateDelete
    bolts.Task deleteAsync(bolts.Task) -> deleteAsync
    bolts.Task deleteAsync(java.lang.String) -> deleteAsync
    bolts.Task handleDeleteResultAsync(java.lang.Object) -> handleDeleteResultAsync
    bolts.Task deleteInBackground() -> deleteInBackground
    void delete() -> delete
    void deleteInBackground(com.parse.DeleteCallback) -> deleteInBackground
    bolts.Task deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
    void deleteAll(java.util.List) -> deleteAll
    void deleteAllInBackground(java.util.List,com.parse.DeleteCallback) -> deleteAllInBackground
    bolts.Task deleteAllInBackground(java.util.List) -> deleteAllInBackground
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap) -> collectDirtyChildren
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List) -> collectDirtyChildren
    boolean canBeSerialized() -> canBeSerialized
    bolts.Task deepSaveAsync(java.lang.Object,java.lang.String) -> deepSaveAsync
    void saveAll(java.util.List) -> saveAll
    void saveAllInBackground(java.util.List,com.parse.SaveCallback) -> saveAllInBackground
    bolts.Task saveAllInBackground(java.util.List) -> saveAllInBackground
    bolts.Task fetchAllIfNeededAsync(java.util.List,com.parse.ParseUser,bolts.Task) -> fetchAllIfNeededAsync
    bolts.Task fetchAllIfNeededInBackground(java.util.List) -> fetchAllIfNeededInBackground
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.parse.FindCallback) -> fetchAllIfNeededInBackground
    bolts.Task fetchAllAsync(java.util.List,com.parse.ParseUser,bolts.Task) -> fetchAllAsync
    bolts.Task fetchAllInBackground(java.util.List) -> fetchAllInBackground
    java.util.List fetchAll(java.util.List) -> fetchAll
    void fetchAllInBackground(java.util.List,com.parse.FindCallback) -> fetchAllInBackground
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    com.parse.ParseOperationSet currentOperations() -> currentOperations
    void applyOperations(com.parse.ParseOperationSet,java.util.Map) -> applyOperations
    void rebuildEstimatedData() -> rebuildEstimatedData
    void performOperation(java.lang.String,com.parse.ParseFieldOperation) -> performOperation
    void put(java.lang.String,java.lang.Object) -> put
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.String getString(java.lang.String) -> getString
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.Number getNumber(java.lang.String) -> getNumber
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.util.List getList(java.lang.String) -> getList
    java.util.Map getMap(java.lang.String) -> getMap
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    int getInt(java.lang.String) -> getInt
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    boolean getBoolean(java.lang.String) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    com.parse.ParseObject getParseObject(java.lang.String) -> getParseObject
    com.parse.ParseUser getParseUser(java.lang.String) -> getParseUser
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseACL getACL() -> getACL
    com.parse.ParseACL getACL(boolean) -> getACL
    void setACL(com.parse.ParseACL) -> setACL
    boolean isDataAvailable() -> isDataAvailable
    boolean isDataAvailable(java.lang.String) -> isDataAvailable
    com.parse.ParseRelation getRelation(java.lang.String) -> getRelation
    java.lang.Object get(java.lang.String) -> get
    void checkGetAccess(java.lang.String) -> checkGetAccess
    boolean hasSameId(com.parse.ParseObject) -> hasSameId
    void registerSaveListener(com.parse.GetCallback) -> registerSaveListener
    void unregisterSaveListener(com.parse.GetCallback) -> unregisterSaveListener
    java.lang.String getClassName(java.lang.Class) -> getClassName
    void setDefaultValues() -> setDefaultValues
    boolean needsDefaultACL() -> needsDefaultACL
    void registerParseSubclasses() -> registerParseSubclasses
    void pinAllInBackground(java.lang.String,java.util.List,com.parse.SaveCallback) -> pinAllInBackground
    bolts.Task pinAllInBackground(java.lang.String,java.util.List) -> pinAllInBackground
    void pinAll(java.lang.String,java.util.List) -> pinAll
    void pinAllInBackground(java.util.List,com.parse.SaveCallback) -> pinAllInBackground
    bolts.Task pinAllInBackground(java.util.List) -> pinAllInBackground
    void pinAll(java.util.List) -> pinAll
    void unpinAllInBackground(java.lang.String,java.util.List,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.lang.String,java.util.List) -> unpinAllInBackground
    void unpinAll(java.lang.String,java.util.List) -> unpinAll
    void unpinAllInBackground(java.util.List,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.util.List) -> unpinAllInBackground
    void unpinAll(java.util.List) -> unpinAll
    void unpinAllInBackground(java.lang.String,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.lang.String) -> unpinAllInBackground
    void unpinAll(java.lang.String) -> unpinAll
    void unpinAllInBackground(com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground() -> unpinAllInBackground
    void unpinAll() -> unpinAll
    bolts.Task fetchFromLocalDatastoreAsync() -> fetchFromLocalDatastoreAsync
    void fetchFromLocalDatastoreInBackground(com.parse.GetCallback) -> fetchFromLocalDatastoreInBackground
    void fetchFromLocalDatastore() -> fetchFromLocalDatastore
    void pinInBackground(java.lang.String,com.parse.SaveCallback) -> pinInBackground
    bolts.Task pinInBackground(java.lang.String) -> pinInBackground
    void pin(java.lang.String) -> pin
    void pinInBackground(com.parse.SaveCallback) -> pinInBackground
    bolts.Task pinInBackground() -> pinInBackground
    void pin() -> pin
    void unpinInBackground(java.lang.String,com.parse.DeleteCallback) -> unpinInBackground
    bolts.Task unpinInBackground(java.lang.String) -> unpinInBackground
    void unpin(java.lang.String) -> unpin
    void unpinInBackground(com.parse.DeleteCallback) -> unpinInBackground
    bolts.Task unpinInBackground() -> unpinInBackground
    void unpin() -> unpin
    java.lang.String access$000(com.parse.ParseObject) -> access$000
    void access$100(com.parse.ParseObject,org.json.JSONObject,com.parse.ParseDecoder,com.parse.ParseOperationSet) -> access$100
    com.parse.ParseMulticastDelegate access$200(com.parse.ParseObject) -> access$200
    java.util.Map access$300(com.parse.ParseObject) -> access$300
    bolts.Task access$400(java.lang.Object,java.lang.String) -> access$400
    boolean access$500(com.parse.ParseObject,java.lang.String) -> access$500
    com.parse.ParseACL access$600(com.parse.ParseObject,boolean) -> access$600
    java.util.Map access$700(com.parse.ParseObject) -> access$700
    java.util.Map access$800(com.parse.ParseObject) -> access$800
    java.lang.String access$900(com.parse.ParseObject) -> access$900
    bolts.Task access$1000(com.parse.ParseObject,java.lang.Object) -> access$1000
    bolts.Task access$1100(com.parse.ParseObject,bolts.Task) -> access$1100
    com.parse.ParseCommand access$1200(com.parse.ParseObject,boolean,java.lang.String) -> access$1200
    void access$1300(java.lang.Object,java.util.List,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap) -> access$1300
    boolean access$1400(com.parse.ParseObject) -> access$1400
    bolts.Task access$1500(java.util.List,com.parse.ParseUser,bolts.Task) -> access$1500
    bolts.Task access$1600(java.util.List,com.parse.ParseUser,bolts.Task) -> access$1600
com.parse.ParseObject$1 -> com.parse.ParseObject$1:
    java.lang.String initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.ParseObject$10 -> com.parse.ParseObject$10:
    bolts.Capture val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$10$1 -> com.parse.ParseObject$10$1:
    com.parse.ParseObject$10 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$10$1$1 -> com.parse.ParseObject$10$1$1:
    bolts.Task val$saveTask -> val$saveTask
    com.parse.ParseObject$10$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$11 -> com.parse.ParseObject$11:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$12 -> com.parse.ParseObject$12:
    bolts.Capture val$operations -> val$operations
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$12$1 -> com.parse.ParseObject$12$1:
    com.parse.ParseObject$12 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$13 -> com.parse.ParseObject$13:
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$14 -> com.parse.ParseObject$14:
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$14$1 -> com.parse.ParseObject$14$1:
    com.parse.ParseObject$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$15 -> com.parse.ParseObject$15:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$16 -> com.parse.ParseObject$16:
    com.parse.ParseCommand val$command -> val$command
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$17 -> com.parse.ParseObject$17:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$18 -> com.parse.ParseObject$18:
    java.lang.Object val$result -> val$result
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$19 -> com.parse.ParseObject$19:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$2 -> com.parse.ParseObject$2:
    java.util.List val$childTasks -> val$childTasks
    bolts.Task val$fullTask -> val$fullTask
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$20 -> com.parse.ParseObject$20:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$21 -> com.parse.ParseObject$21:
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    org.json.JSONObject val$result -> val$result
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$22 -> com.parse.ParseObject$22:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$23 -> com.parse.ParseObject$23:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$24 -> com.parse.ParseObject$24:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$25 -> com.parse.ParseObject$25:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$26 -> com.parse.ParseObject$26:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$27 -> com.parse.ParseObject$27:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$28 -> com.parse.ParseObject$28:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$29 -> com.parse.ParseObject$29:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$3 -> com.parse.ParseObject$3:
    bolts.Task$TaskCompletionSource val$readyToStart -> val$readyToStart
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$30 -> com.parse.ParseObject$30:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$31 -> com.parse.ParseObject$31:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$32 -> com.parse.ParseObject$32:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$33 -> com.parse.ParseObject$33:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34 -> com.parse.ParseObject$34:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34$1 -> com.parse.ParseObject$34$1:
    com.parse.ParseObject$34 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34$1$1 -> com.parse.ParseObject$34$1$1:
    com.parse.ParseObject$34$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$35 -> com.parse.ParseObject$35:
    java.util.List val$dirtyFiles -> val$dirtyFiles
    java.util.IdentityHashMap val$alreadySeen -> val$alreadySeen
    java.util.IdentityHashMap val$alreadySeenNew -> val$alreadySeenNew
    java.util.List val$dirtyChildren -> val$dirtyChildren
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$36 -> com.parse.ParseObject$36:
    bolts.Capture val$result -> val$result
    com.parse.ParseObject this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$37 -> com.parse.ParseObject$37:
    java.util.List val$objects -> val$objects
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$1 -> com.parse.ParseObject$37$1:
    bolts.Capture val$remaining -> val$remaining
    com.parse.ParseObject$37 this$0 -> this$0
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$37$2 -> com.parse.ParseObject$37$2:
    bolts.Capture val$remaining -> val$remaining
    com.parse.ParseObject$37 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$1 -> com.parse.ParseObject$37$2$1:
    java.util.List val$current -> val$current
    com.parse.ParseObject$37$2 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$2 -> com.parse.ParseObject$37$2$2:
    com.parse.ParseObject$37$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$3 -> com.parse.ParseObject$37$2$3:
    java.util.List val$current -> val$current
    java.util.List val$operations -> val$operations
    com.parse.ParseObject$37$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$3$1 -> com.parse.ParseObject$37$2$3$1:
    com.parse.ParseObject$37$2$3 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$3$1$1 -> com.parse.ParseObject$37$2$3$1$1:
    com.parse.ParseObject$37$2$3$1 this$3 -> this$3
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$3$1$1$1 -> com.parse.ParseObject$37$2$3$1$1$1:
    com.parse.ParseObject$37$2$3$1$1 this$4 -> this$4
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$37$2$3$1$1$1$1 -> com.parse.ParseObject$37$2$3$1$1$1$1:
    java.util.List val$tasks -> val$tasks
    com.parse.ParseObject$37$2$3$1$1$1 this$5 -> this$5
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$38 -> com.parse.ParseObject$38:
    java.util.List val$objects -> val$objects
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$39 -> com.parse.ParseObject$39:
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$4 -> com.parse.ParseObject$4:
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    com.parse.ParseObject this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$40 -> com.parse.ParseObject$40:
    java.util.List val$objects -> val$objects
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$41 -> com.parse.ParseObject$41:
    java.util.List val$objects -> val$objects
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$42 -> com.parse.ParseObject$42:
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$43 -> com.parse.ParseObject$43:
    java.util.List val$objects -> val$objects
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$5 -> com.parse.ParseObject$5:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$6 -> com.parse.ParseObject$6:
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    org.json.JSONObject val$result -> val$result
    com.parse.ParseOperationSet val$operationsBeforeSave -> val$operationsBeforeSave
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$7 -> com.parse.ParseObject$7:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$8 -> com.parse.ParseObject$8:
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$9 -> com.parse.ParseObject$9:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObjectEncodingStrategy -> com.parse.ParseObjectEncodingStrategy:
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ParseOperationSet -> com.parse.ParseOperationSet:
    long serialVersionUID -> serialVersionUID
    java.lang.String REST_KEY_IS_SAVE_EVENTUALLY -> REST_KEY_IS_SAVE_EVENTUALLY
    java.lang.String REST_KEY_UUID -> REST_KEY_UUID
    java.lang.String uuid -> uuid
    boolean isSaveEventually -> isSaveEventually
    java.lang.String getUUID() -> getUUID
    void setIsSaveEventually(boolean) -> setIsSaveEventually
    boolean isSaveEventually() -> isSaveEventually
    void mergeFrom(com.parse.ParseOperationSet) -> mergeFrom
    org.json.JSONObject toRest(com.parse.ParseObjectEncodingStrategy) -> toRest
    com.parse.ParseOperationSet fromRest(org.json.JSONObject,com.parse.ParseDecoder) -> fromRest
com.parse.ParsePin -> com.parse.ParsePin:
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_OBJECTS -> KEY_OBJECTS
    bolts.Task getParsePin(java.lang.String) -> getParsePin
    bolts.Task pinAllObjectsAsync(java.lang.String,java.util.List) -> pinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String,java.util.List) -> unpinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String) -> unpinAllObjectsAsync
    boolean needsDefaultACL() -> needsDefaultACL
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getObjects() -> getObjects
    void setObjects(java.util.List) -> setObjects
com.parse.ParsePin$1 -> com.parse.ParsePin$1:
    java.lang.String val$name -> val$name
    com.parse.ParsePin then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePin$2 -> com.parse.ParsePin$2:
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePin$3 -> com.parse.ParsePin$3:
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePin$4 -> com.parse.ParsePin$4:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue -> com.parse.ParsePinningEventuallyQueue:
    java.lang.String TAG -> TAG
    java.util.HashMap pendingOperationSetUUIDTasks -> pendingOperationSetUUIDTasks
    com.parse.TaskQueue taskQueue -> taskQueue
    com.parse.TaskQueue operationSetTaskQueue -> operationSetTaskQueue
    java.util.ArrayList eventuallyPinUUIDQueue -> eventuallyPinUUIDQueue
    bolts.Task$TaskCompletionSource connectionTaskCompletionSource -> connectionTaskCompletionSource
    java.lang.Object connectionLock -> connectionLock
    java.lang.Object taskQueueSyncLock -> taskQueueSyncLock
    java.util.HashMap pendingEventuallyTasks -> pendingEventuallyTasks
    java.util.HashMap uuidToOperationSet -> uuidToOperationSet
    java.util.HashMap uuidToEventuallyPin -> uuidToEventuallyPin
    void setConnected(boolean) -> setConnected
    int pendingCount() -> pendingCount
    bolts.Task pendingCountAsync() -> pendingCountAsync
    bolts.Task pendingCountAsync(bolts.Task) -> pendingCountAsync
    void pause() -> pause
    void resume() -> resume
    bolts.Task waitForConnectionAsync() -> waitForConnectionAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject,bolts.Task,bolts.Task$TaskCompletionSource) -> enqueueEventuallyAsync
    bolts.Task populateQueueAsync() -> populateQueueAsync
    bolts.Task populateQueueAsync(bolts.Task) -> populateQueueAsync
    bolts.Task runEventuallyAsync(com.parse.EventuallyPin) -> runEventuallyAsync
    bolts.Task runEventuallyAsync(com.parse.EventuallyPin,bolts.Task) -> runEventuallyAsync
    bolts.Task waitForOperationSetAndEventuallyPin(com.parse.ParseOperationSet,com.parse.EventuallyPin) -> waitForOperationSetAndEventuallyPin
    bolts.Task process(com.parse.EventuallyPin,com.parse.ParseOperationSet) -> process
    void simulateReboot() -> simulateReboot
    void clear() -> clear
    bolts.Task whenAll(java.util.Collection) -> whenAll
    bolts.Task access$100(com.parse.ParsePinningEventuallyQueue,com.parse.ParseCommand,com.parse.ParseObject,bolts.Task,bolts.Task$TaskCompletionSource) -> access$100
    java.util.HashMap access$200(com.parse.ParsePinningEventuallyQueue) -> access$200
    bolts.Task access$300(com.parse.ParsePinningEventuallyQueue) -> access$300
    bolts.Task access$400(com.parse.ParsePinningEventuallyQueue,bolts.Task) -> access$400
    bolts.Task access$500(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin) -> access$500
    java.util.ArrayList access$600(com.parse.ParsePinningEventuallyQueue) -> access$600
    bolts.Task access$700(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin,bolts.Task) -> access$700
    bolts.Task access$800(com.parse.ParsePinningEventuallyQueue) -> access$800
    java.lang.Object access$900(com.parse.ParsePinningEventuallyQueue) -> access$900
    java.util.HashMap access$1000(com.parse.ParsePinningEventuallyQueue) -> access$1000
    java.util.HashMap access$1100(com.parse.ParsePinningEventuallyQueue) -> access$1100
    java.util.HashMap access$1200(com.parse.ParsePinningEventuallyQueue) -> access$1200
    bolts.Task access$1300(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin,com.parse.ParseOperationSet) -> access$1300
com.parse.ParsePinningEventuallyQueue$1 -> com.parse.ParsePinningEventuallyQueue$1:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParsePinningEventuallyQueue$10 -> com.parse.ParsePinningEventuallyQueue$10:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$10$1 -> com.parse.ParsePinningEventuallyQueue$10$1:
    com.parse.ParsePinningEventuallyQueue$10 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$11 -> com.parse.ParsePinningEventuallyQueue$11:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$12 -> com.parse.ParsePinningEventuallyQueue$12:
    java.lang.String val$uuid -> val$uuid
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13 -> com.parse.ParsePinningEventuallyQueue$13:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1 -> com.parse.ParsePinningEventuallyQueue$13$1:
    int val$type -> val$type
    com.parse.ParseObject val$object -> val$object
    com.parse.ParsePinningEventuallyQueue$13 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1$1 -> com.parse.ParsePinningEventuallyQueue$13$1$1:
    bolts.Task val$saveTask -> val$saveTask
    com.parse.ParsePinningEventuallyQueue$13$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1$2 -> com.parse.ParsePinningEventuallyQueue$13$1$2:
    bolts.Task val$saveTask -> val$saveTask
    com.parse.ParsePinningEventuallyQueue$13$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14 -> com.parse.ParsePinningEventuallyQueue$14:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14$1 -> com.parse.ParsePinningEventuallyQueue$14$1:
    com.parse.ParsePinningEventuallyQueue$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14$1$1 -> com.parse.ParsePinningEventuallyQueue$14$1$1:
    com.parse.ParsePinningEventuallyQueue$14$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$15 -> com.parse.ParsePinningEventuallyQueue$15:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$2 -> com.parse.ParsePinningEventuallyQueue$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$2$1 -> com.parse.ParsePinningEventuallyQueue$2$1:
    com.parse.ParsePinningEventuallyQueue$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$3 -> com.parse.ParsePinningEventuallyQueue$3:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$3$1 -> com.parse.ParsePinningEventuallyQueue$3$1:
    com.parse.ParsePinningEventuallyQueue$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$4 -> com.parse.ParsePinningEventuallyQueue$4:
    com.parse.ParseCommand val$command -> val$command
    com.parse.ParseObject val$object -> val$object
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5 -> com.parse.ParsePinningEventuallyQueue$5:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseCommand val$command -> val$command
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5$1 -> com.parse.ParsePinningEventuallyQueue$5$1:
    com.parse.ParsePinningEventuallyQueue$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5$1$1 -> com.parse.ParsePinningEventuallyQueue$5$1$1:
    com.parse.ParsePinningEventuallyQueue$5$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$6 -> com.parse.ParsePinningEventuallyQueue$6:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$7 -> com.parse.ParsePinningEventuallyQueue$7:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$8 -> com.parse.ParsePinningEventuallyQueue$8:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$9 -> com.parse.ParsePinningEventuallyQueue$9:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    java.lang.String val$uuid -> val$uuid
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$9$1 -> com.parse.ParsePinningEventuallyQueue$9$1:
    com.parse.ParsePinningEventuallyQueue$9 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$PauseException -> com.parse.ParsePinningEventuallyQueue$PauseException:
com.parse.ParsePush -> com.parse.ParsePush:
    java.lang.String TAG -> TAG
    java.util.Set channelSet -> channelSet
    com.parse.ParseQuery query -> query
    java.lang.Long expirationTime -> expirationTime
    java.lang.Long expirationTimeInterval -> expirationTimeInterval
    java.lang.Boolean pushToIOS -> pushToIOS
    java.lang.Boolean pushToAndroid -> pushToAndroid
    org.json.JSONObject data -> data
    java.lang.String V2_PUSH_NOT_CONFIGURED -> V2_PUSH_NOT_CONFIGURED
    void setEnabled(boolean) -> setEnabled
    bolts.Task subscribeInBackground(java.lang.String) -> subscribeInBackground
    void subscribeInBackground(java.lang.String,com.parse.SaveCallback) -> subscribeInBackground
    bolts.Task unsubscribeInBackground(java.lang.String) -> unsubscribeInBackground
    void unsubscribeInBackground(java.lang.String,com.parse.SaveCallback) -> unsubscribeInBackground
    void checkForManifestAndThrowExceptionIfNeeded() -> checkForManifestAndThrowExceptionIfNeeded
    bolts.Task sendMessageInBackground(java.lang.String,com.parse.ParseQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery,com.parse.SendCallback) -> sendMessageInBackground
    bolts.Task sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery,com.parse.SendCallback) -> sendDataInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setQuery(com.parse.ParseQuery) -> setQuery
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void clearExpiration() -> clearExpiration
    void setPushToIOS(boolean) -> setPushToIOS
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setData(org.json.JSONObject) -> setData
    void setMessage(java.lang.String) -> setMessage
    bolts.Task sendInBackground() -> sendInBackground
    void send() -> send
    void sendInBackground(com.parse.SendCallback) -> sendInBackground
    com.parse.ParseCommand buildCommand(java.lang.String) -> buildCommand
com.parse.ParsePush$1 -> com.parse.ParsePush$1:
    boolean val$enabled -> val$enabled
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePush$2 -> com.parse.ParsePush$2:
    com.parse.ParsePush this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePushBroadcastReceiver -> com.parse.ParsePushBroadcastReceiver:
    java.lang.String TAG -> TAG
    java.lang.String KEY_PUSH_CHANNEL -> KEY_PUSH_CHANNEL
    java.lang.String KEY_PUSH_DATA -> KEY_PUSH_DATA
    java.lang.String ACTION_PUSH_RECEIVE -> ACTION_PUSH_RECEIVE
    java.lang.String ACTION_PUSH_OPEN -> ACTION_PUSH_OPEN
    java.lang.String ACTION_PUSH_DELETE -> ACTION_PUSH_DELETE
    java.lang.String PROPERTY_PUSH_ICON -> PROPERTY_PUSH_ICON
    int SMALL_NOTIFICATION_MAX_CHARACTER_LIMIT -> SMALL_NOTIFICATION_MAX_CHARACTER_LIMIT
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onPushReceive(android.content.Context,android.content.Intent) -> onPushReceive
    void onPushDismiss(android.content.Context,android.content.Intent) -> onPushDismiss
    void onPushOpen(android.content.Context,android.content.Intent) -> onPushOpen
    java.lang.Class getActivity(android.content.Context,android.content.Intent) -> getActivity
    int getSmallIconId(android.content.Context,android.content.Intent) -> getSmallIconId
    android.graphics.Bitmap getLargeIcon(android.content.Context,android.content.Intent) -> getLargeIcon
    org.json.JSONObject getPushData(android.content.Intent) -> getPushData
    android.app.Notification getNotification(android.content.Context,android.content.Intent) -> getNotification
com.parse.ParseQuery -> com.parse.ParseQuery:
    java.lang.String TAG -> TAG
    java.lang.String className -> className
    com.parse.ParseQuery$QueryConstraints where -> where
    java.util.ArrayList include -> include
    java.util.ArrayList selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    long queryStart -> queryStart
    long querySent -> querySent
    long queryReceived -> queryReceived
    long objectsParsed -> objectsParsed
    java.lang.Object isRunningLock -> isRunningLock
    com.parse.ParseCommand currentCommand -> currentCommand
    boolean isRunning -> isRunning
    java.util.HashMap extraOptions -> extraOptions
    com.parse.ParseQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    java.lang.String pinName -> pinName
    boolean ignoreACLs -> ignoreACLs
    com.parse.ParseQuery or(java.util.List) -> or
    com.parse.ParseQuery getQuery(java.lang.Class) -> getQuery
    com.parse.ParseQuery getQuery(java.lang.String) -> getQuery
    com.parse.ParseQuery getUserQuery() -> getUserQuery
    void checkIfRunning() -> checkIfRunning
    void checkIfRunning(boolean) -> checkIfRunning
    com.parse.ParseQuery$QueryConstraints getConstraints() -> getConstraints
    org.json.JSONObject toREST() -> toREST
    org.json.JSONObject toJSON() -> toJSON
    com.parse.ParseCommand makeFindCommand(java.lang.String) -> makeFindCommand
    java.util.List convertFindResponse(org.json.JSONObject) -> convertFindResponse
    bolts.Task runCommandWithPolicyAsync(com.parse.ParseQuery$CommandDelegate,com.parse.ParseQuery$CachePolicy) -> runCommandWithPolicyAsync
    bolts.Task countWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> countWithCachePolicyAsync
    bolts.Task findWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> findWithCachePolicyAsync
    bolts.Task getFirstWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> getFirstWithCachePolicyAsync
    bolts.Task getWithCachePolicyAsync(java.lang.String,com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> getWithCachePolicyAsync
    void cancel() -> cancel
    java.util.List find() -> find
    com.parse.ParseObject getFirst() -> getFirst
    bolts.Task findFromNetworkAsync(boolean) -> findFromNetworkAsync
    void checkPinningEnabled(boolean) -> checkPinningEnabled
    void setCachePolicy(com.parse.ParseQuery$CachePolicy) -> setCachePolicy
    com.parse.ParseQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.parse.ParseQuery fromNetwork() -> fromNetwork
    boolean isFromNetwork() -> isFromNetwork
    com.parse.ParseQuery fromLocalDatastore() -> fromLocalDatastore
    com.parse.ParseQuery fromLocalDatastore(boolean) -> fromLocalDatastore
    boolean isFromLocalDatastore() -> isFromLocalDatastore
    com.parse.ParseQuery fromPin() -> fromPin
    com.parse.ParseQuery fromPin(boolean) -> fromPin
    com.parse.ParseQuery fromPin(java.lang.String) -> fromPin
    com.parse.ParseQuery fromPin(java.lang.String,boolean) -> fromPin
    com.parse.ParseQuery fromLocalDatastore(java.lang.String,boolean) -> fromLocalDatastore
    void setMaxCacheAge(long) -> setMaxCacheAge
    long getMaxCacheAge() -> getMaxCacheAge
    bolts.Task findFromCacheAsync(com.parse.ParseUser,boolean,boolean) -> findFromCacheAsync
    bolts.Task countFromCacheAsync(com.parse.ParseUser,boolean,boolean) -> countFromCacheAsync
    bolts.Task doWithRunningCheck(java.util.concurrent.Callable) -> doWithRunningCheck
    void doInBackground(com.parse.ParseQuery$CallableWithCachePolicy,com.parse.ParseCallback) -> doInBackground
    bolts.Task findInBackground() -> findInBackground
    bolts.Task findInBackground(com.parse.ParseUser) -> findInBackground
    void findInBackground(com.parse.FindCallback) -> findInBackground
    bolts.Task getFirstInBackground() -> getFirstInBackground
    void getFirstInBackground(com.parse.GetCallback) -> getFirstInBackground
    com.parse.ParseCommand makeCountCommand(java.lang.String) -> makeCountCommand
    int count() -> count
    bolts.Task countFromNetworkAsync() -> countFromNetworkAsync
    bolts.Task countInBackground() -> countInBackground
    void countInBackground(com.parse.CountCallback) -> countInBackground
    com.parse.ParseObject get(java.lang.String) -> get
    boolean hasCachedResult() -> hasCachedResult
    void clearCachedResult() -> clearCachedResult
    void clearAllCachedResults() -> clearAllCachedResults
    bolts.Task getInBackground(java.lang.String) -> getInBackground
    void getInBackground(java.lang.String,com.parse.GetCallback) -> getInBackground
    com.parse.ParseQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    void addCondition(java.lang.String,java.lang.String,java.lang.Object) -> addCondition
    com.parse.ParseQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.parse.ParseQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.parse.ParseQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.parse.ParseQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.parse.ParseQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.parse.ParseQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.parse.ParseQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.parse.ParseQuery whereMatchesQuery(java.lang.String,com.parse.ParseQuery) -> whereMatchesQuery
    com.parse.ParseQuery whereDoesNotMatchQuery(java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchQuery
    com.parse.ParseQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereMatchesKeyInQuery
    com.parse.ParseQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchKeyInQuery
    com.parse.ParseQuery whereSatifiesAnyOf(java.util.List) -> whereSatifiesAnyOf
    com.parse.ParseQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.parse.ParseQuery whereNear(java.lang.String,com.parse.ParseGeoPoint) -> whereNear
    com.parse.ParseQuery whereWithinMiles(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinMiles
    com.parse.ParseQuery whereWithinKilometers(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinKilometers
    com.parse.ParseQuery whereWithinRadians(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinRadians
    com.parse.ParseQuery whereWithinGeoBox(java.lang.String,com.parse.ParseGeoPoint,com.parse.ParseGeoPoint) -> whereWithinGeoBox
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.parse.ParseQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.parse.ParseQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    void include(java.lang.String) -> include
    java.util.List getIncludes() -> getIncludes
    void selectKeys(java.util.Collection) -> selectKeys
    com.parse.ParseQuery whereExists(java.lang.String) -> whereExists
    com.parse.ParseQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.parse.ParseQuery whereRelatedTo(com.parse.ParseObject,java.lang.String) -> whereRelatedTo
    com.parse.ParseQuery redirectClassNameForKey(java.lang.String) -> redirectClassNameForKey
    com.parse.ParseQuery orderByAscending(java.lang.String) -> orderByAscending
    com.parse.ParseQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.parse.ParseQuery orderByDescending(java.lang.String) -> orderByDescending
    com.parse.ParseQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    java.lang.String[] sortKeys() -> sortKeys
    com.parse.ParseQuery setLimit(int) -> setLimit
    void setTrace(boolean) -> setTrace
    int getLimit() -> getLimit
    com.parse.ParseQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
    java.lang.String getClassName() -> getClassName
    bolts.Task access$000(com.parse.ParseQuery) -> access$000
    boolean access$100(com.parse.ParseQuery) -> access$100
    bolts.Task access$200(com.parse.ParseQuery,com.parse.ParseUser,boolean,boolean) -> access$200
    bolts.Task access$300(com.parse.ParseQuery,boolean) -> access$300
    com.parse.ParseCommand access$400(com.parse.ParseQuery) -> access$400
    com.parse.ParseQuery$CachePolicy access$500(com.parse.ParseQuery) -> access$500
    long access$602(com.parse.ParseQuery,long) -> access$602
    long access$702(com.parse.ParseQuery,long) -> access$702
    java.util.List access$800(com.parse.ParseQuery,org.json.JSONObject) -> access$800
    com.parse.ParseCommand access$900(com.parse.ParseQuery,java.lang.String) -> access$900
    long access$1000(com.parse.ParseQuery) -> access$1000
    com.parse.ParseCommand access$1100(com.parse.ParseQuery,java.lang.String) -> access$1100
    java.lang.Object access$1200(com.parse.ParseQuery) -> access$1200
    boolean access$1302(com.parse.ParseQuery,boolean) -> access$1302
    com.parse.ParseCommand access$402(com.parse.ParseQuery,com.parse.ParseCommand) -> access$402
    bolts.Task access$1400(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> access$1400
    bolts.Task access$1500(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> access$1500
    bolts.Task access$1600(com.parse.ParseQuery,java.lang.String,com.parse.ParseQuery$CachePolicy,com.parse.ParseUser) -> access$1600
com.parse.ParseQuery$1 -> com.parse.ParseQuery$1:
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$10 -> com.parse.ParseQuery$10:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseUser val$user -> val$user
    boolean val$includeIsDeletingEventually -> val$includeIsDeletingEventually
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$11 -> com.parse.ParseQuery$11:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Integer call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$12 -> com.parse.ParseQuery$12:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$13 -> com.parse.ParseQuery$13:
    com.parse.ParseQuery$CallableWithCachePolicy val$callable -> val$callable
    com.parse.ParseCallback val$callback -> val$callback
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$13$1 -> com.parse.ParseQuery$13$1:
    com.parse.ParseQuery$13 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$14 -> com.parse.ParseQuery$14:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$15 -> com.parse.ParseQuery$15:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$16 -> com.parse.ParseQuery$16:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$17 -> com.parse.ParseQuery$17:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$18 -> com.parse.ParseQuery$18:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$19 -> com.parse.ParseQuery$19:
    boolean val$caching -> val$caching
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$2 -> com.parse.ParseQuery$2:
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$20 -> com.parse.ParseQuery$20:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$21 -> com.parse.ParseQuery$21:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$22 -> com.parse.ParseQuery$22:
    java.lang.String val$objectId -> val$objectId
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$23 -> com.parse.ParseQuery$23:
    java.lang.String val$objectId -> val$objectId
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$24 -> com.parse.ParseQuery$24:
    int[] $SwitchMap$com$parse$ParseQuery$CachePolicy -> $SwitchMap$com$parse$ParseQuery$CachePolicy
com.parse.ParseQuery$3 -> com.parse.ParseQuery$3:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$4 -> com.parse.ParseQuery$4:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$5 -> com.parse.ParseQuery$5:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$6 -> com.parse.ParseQuery$6:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$6$1 -> com.parse.ParseQuery$6$1:
    boolean val$caching -> val$caching
    com.parse.ParseQuery$6 this$1 -> this$1
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$7 -> com.parse.ParseQuery$7:
    boolean val$shouldRetry -> val$shouldRetry
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$8 -> com.parse.ParseQuery$8:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseUser val$user -> val$user
    boolean val$includeIsDeletingEventually -> val$includeIsDeletingEventually
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$9 -> com.parse.ParseQuery$9:
    com.parse.ParseQuery this$0 -> this$0
    java.util.List call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$CachePolicy -> com.parse.ParseQuery$CachePolicy:
    com.parse.ParseQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.parse.ParseQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.parse.ParseQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.parse.ParseQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.parse.ParseQuery$CachePolicy[] $VALUES -> $VALUES
    com.parse.ParseQuery$CachePolicy[] values() -> values
    com.parse.ParseQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.parse.ParseQuery$CallableWithCachePolicy -> com.parse.ParseQuery$CallableWithCachePolicy:
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$CommandDelegate -> com.parse.ParseQuery$CommandDelegate:
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$KeyConstraints -> com.parse.ParseQuery$KeyConstraints:
com.parse.ParseQuery$QueryConstraints -> com.parse.ParseQuery$QueryConstraints:
com.parse.ParseQuery$RelationConstraint -> com.parse.ParseQuery$RelationConstraint:
    java.lang.String key -> key
    com.parse.ParseObject object -> object
    java.lang.String getKey() -> getKey
    com.parse.ParseObject getObject() -> getObject
    com.parse.ParseRelation getRelation() -> getRelation
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseQueryAdapter -> com.parse.ParseQueryAdapter:
    java.lang.String textKey -> textKey
    java.lang.String imageKey -> imageKey
    int objectsPerPage -> objectsPerPage
    boolean paginationEnabled -> paginationEnabled
    android.graphics.drawable.Drawable placeholder -> placeholder
    java.util.WeakHashMap imageViewSet -> imageViewSet
    java.util.WeakHashMap dataSetObservers -> dataSetObservers
    boolean autoload -> autoload
    android.content.Context context -> context
    java.util.List objects -> objects
    java.util.List objectPages -> objectPages
    int currentPage -> currentPage
    java.lang.Integer itemResourceId -> itemResourceId
    boolean hasNextPage -> hasNextPage
    com.parse.ParseQueryAdapter$QueryFactory queryFactory -> queryFactory
    java.util.List onQueryLoadListeners -> onQueryLoadListeners
    int VIEW_TYPE_ITEM -> VIEW_TYPE_ITEM
    int VIEW_TYPE_NEXT_PAGE -> VIEW_TYPE_NEXT_PAGE
    android.content.Context getContext() -> getContext
    com.parse.ParseObject getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void clear() -> clear
    void loadObjects() -> loadObjects
    void loadObjects(int,boolean) -> loadObjects
    void syncObjectsWithPages() -> syncObjectsWithPages
    void loadNextPage() -> loadNextPage
    int getCount() -> getCount
    android.view.View getItemView(com.parse.ParseObject,android.view.View,android.view.ViewGroup) -> getItemView
    android.view.View getNextPageView(android.view.View,android.view.ViewGroup) -> getNextPageView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setPageOnQuery(int,com.parse.ParseQuery) -> setPageOnQuery
    void setTextKey(java.lang.String) -> setTextKey
    void setImageKey(java.lang.String) -> setImageKey
    void setObjectsPerPage(int) -> setObjectsPerPage
    int getObjectsPerPage() -> getObjectsPerPage
    void setPaginationEnabled(boolean) -> setPaginationEnabled
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setAutoload(boolean) -> setAutoload
    void addOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> addOnQueryLoadListener
    void removeOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> removeOnQueryLoadListener
    android.view.View getDefaultView(android.content.Context) -> getDefaultView
    int getPaginationCellRow() -> getPaginationCellRow
    boolean shouldShowPaginationCell() -> shouldShowPaginationCell
    void notifyOnLoadingListeners() -> notifyOnLoadingListeners
    void notifyOnLoadedListeners(java.util.List,java.lang.Exception) -> notifyOnLoadedListeners
    java.lang.Object getItem(int) -> getItem
    boolean access$002(com.parse.ParseQueryAdapter,boolean) -> access$002
    java.util.List access$100(com.parse.ParseQueryAdapter) -> access$100
    int access$202(com.parse.ParseQueryAdapter,int) -> access$202
    int access$200(com.parse.ParseQueryAdapter) -> access$200
    int access$300(com.parse.ParseQueryAdapter) -> access$300
    boolean access$400(com.parse.ParseQueryAdapter) -> access$400
    void access$500(com.parse.ParseQueryAdapter) -> access$500
    void access$600(com.parse.ParseQueryAdapter,java.util.List,java.lang.Exception) -> access$600
com.parse.ParseQueryAdapter$1 -> com.parse.ParseQueryAdapter$1:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$2 -> com.parse.ParseQueryAdapter$2:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$3 -> com.parse.ParseQueryAdapter$3:
    com.parse.ParseQuery val$query -> val$query
    boolean val$shouldClear -> val$shouldClear
    bolts.Capture val$firstCallBack -> val$firstCallBack
    int val$page -> val$page
    com.parse.ParseQueryAdapter this$0 -> this$0
    void done(java.util.List,com.parse.ParseException) -> done
com.parse.ParseQueryAdapter$4 -> com.parse.ParseQueryAdapter$4:
    com.parse.ParseQueryAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.ParseQueryAdapter$OnQueryLoadListener -> com.parse.ParseQueryAdapter$OnQueryLoadListener:
    void onLoading() -> onLoading
    void onLoaded(java.util.List,java.lang.Exception) -> onLoaded
com.parse.ParseQueryAdapter$QueryFactory -> com.parse.ParseQueryAdapter$QueryFactory:
    com.parse.ParseQuery create() -> create
com.parse.ParseRelation -> com.parse.ParseRelation:
    java.lang.Object mutex -> mutex
    com.parse.ParseObject parent -> parent
    java.lang.String key -> key
    java.lang.String targetClass -> targetClass
    java.util.Set knownObjects -> knownObjects
    void ensureParentAndKey(com.parse.ParseObject,java.lang.String) -> ensureParentAndKey
    void add(com.parse.ParseObject) -> add
    void remove(com.parse.ParseObject) -> remove
    com.parse.ParseQuery getQuery() -> getQuery
    org.json.JSONObject encodeToJSON(com.parse.ParseObjectEncodingStrategy) -> encodeToJSON
    java.lang.String getTargetClass() -> getTargetClass
    void setTargetClass(java.lang.String) -> setTargetClass
    void addKnownObject(com.parse.ParseObject) -> addKnownObject
    void removeKnownObject(com.parse.ParseObject) -> removeKnownObject
    boolean hasKnownObject(com.parse.ParseObject) -> hasKnownObject
com.parse.ParseRelationOperation -> com.parse.ParseRelationOperation:
    java.lang.String targetClass -> targetClass
    java.util.Set relationsToAdd -> relationsToAdd
    java.util.Set relationsToRemove -> relationsToRemove
    void addParseObjectToSet(com.parse.ParseObject,java.util.Set) -> addParseObjectToSet
    void addAllParseObjectsToSet(java.util.Collection,java.util.Set) -> addAllParseObjectsToSet
    void removeParseObjectFromSet(com.parse.ParseObject,java.util.Set) -> removeParseObjectFromSet
    void removeAllParseObjectsFromSet(java.util.Collection,java.util.Set) -> removeAllParseObjectsFromSet
    java.lang.String getTargetClass() -> getTargetClass
    org.json.JSONArray convertSetToArray(java.util.Set,com.parse.ParseObjectEncodingStrategy) -> convertSetToArray
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRemoveOperation -> com.parse.ParseRemoveOperation:
    java.util.HashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRequest -> com.parse.ParseRequest:
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    int CPU_COUNT -> CPU_COUNT
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAX_POOL_SIZE -> MAX_POOL_SIZE
    long KEEP_ALIVE_TIME -> KEEP_ALIVE_TIME
    int MAX_QUEUE_SIZE -> MAX_QUEUE_SIZE
    java.util.concurrent.ExecutorService NETWORK_EXECUTOR -> NETWORK_EXECUTOR
    int SOCKET_OPERATION_TIMEOUT -> SOCKET_OPERATION_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    org.apache.http.client.HttpClient defaultClient -> defaultClient
    long defaultInitialRetryDelay -> defaultInitialRetryDelay
    java.lang.String UserAgent -> UserAgent
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpUriRequest request -> request
    int maxRetries -> maxRetries
    int method -> method
    java.lang.String url -> url
    java.util.concurrent.atomic.AtomicReference currentTask -> currentTask
    java.util.concurrent.ThreadPoolExecutor newThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory) -> newThreadPoolExecutor
    void setDefaultClient(org.apache.http.client.HttpClient) -> setDefaultClient
    org.apache.http.client.HttpClient getDefaultClient() -> getDefaultClient
    void setDefaultInitialRetryDelay(long) -> setDefaultInitialRetryDelay
    long getDefaultInitialRetryDelay() -> getDefaultInitialRetryDelay
    void initialize(android.content.Context) -> initialize
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    org.apache.http.client.HttpClient newHttpClient(android.content.Context) -> newHttpClient
    void setClient(org.apache.http.client.HttpClient) -> setClient
    void setMethod(int) -> setMethod
    void setUrl(java.lang.String) -> setUrl
    void setMaxRetries(int) -> setMaxRetries
    bolts.Task onPreExecute(bolts.Task) -> onPreExecute
    org.apache.http.HttpEntity newEntity() -> newEntity
    org.apache.http.client.methods.HttpUriRequest newRequest() -> newRequest
    bolts.Task onPostExecute(bolts.Task) -> onPostExecute
    bolts.Task sendOneRequestAsync(com.parse.ProgressCallback) -> sendOneRequestAsync
    java.lang.Object onResponse(org.apache.http.HttpResponse,com.parse.ProgressCallback) -> onResponse
    bolts.Task executeAsync() -> executeAsync
    bolts.Task executeAsync(com.parse.ProgressCallback) -> executeAsync
    bolts.Task executeAsync(int,long,com.parse.ProgressCallback) -> executeAsync
    void cancel() -> cancel
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> connectionFailed
    org.apache.http.client.methods.HttpUriRequest access$000(com.parse.ParseRequest) -> access$000
    org.apache.http.client.HttpClient access$100(com.parse.ParseRequest) -> access$100
    long access$200() -> access$200
    org.apache.http.client.methods.HttpUriRequest access$002(com.parse.ParseRequest,org.apache.http.client.methods.HttpUriRequest) -> access$002
    bolts.Task access$300(com.parse.ParseRequest,int,long,com.parse.ProgressCallback) -> access$300
    java.util.concurrent.atomic.AtomicReference access$400(com.parse.ParseRequest) -> access$400
com.parse.ParseRequest$1 -> com.parse.ParseRequest$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.parse.ParseRequest$2 -> com.parse.ParseRequest$2:
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$3 -> com.parse.ParseRequest$3:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseRequest this$0 -> this$0
    java.lang.Object call() -> call
com.parse.ParseRequest$4 -> com.parse.ParseRequest$4:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$5 -> com.parse.ParseRequest$5:
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$6 -> com.parse.ParseRequest$6:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$7 -> com.parse.ParseRequest$7:
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$8 -> com.parse.ParseRequest$8:
    int val$attemptsMade -> val$attemptsMade
    long val$delay -> val$delay
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$8$1 -> com.parse.ParseRequest$8$1:
    bolts.Task$TaskCompletionSource val$retryTask -> val$retryTask
    com.parse.ParseRequest$8 this$1 -> this$1
    void run() -> run
com.parse.ParseRequest$8$1$1 -> com.parse.ParseRequest$8$1$1:
    com.parse.ParseRequest$8$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$Method -> com.parse.ParseRequest$Method:
    int GET -> GET
    int POST -> POST
com.parse.ParseRole -> com.parse.ParseRole:
    java.util.regex.Pattern NAME_PATTERN -> NAME_PATTERN
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    com.parse.ParseRelation getUsers() -> getUsers
    com.parse.ParseRelation getRoles() -> getRoles
    void validateSave() -> validateSave
    void put(java.lang.String,java.lang.Object) -> put
    com.parse.ParseQuery getQuery() -> getQuery
com.parse.ParseSQLiteDatabase -> com.parse.ParseSQLiteDatabase:
    java.util.concurrent.ExecutorService dbExecutor -> dbExecutor
    com.parse.TaskQueue taskQueue -> taskQueue
    android.database.sqlite.SQLiteDatabase db -> db
    bolts.Task current -> current
    java.lang.Object currentLock -> currentLock
    bolts.Task$TaskCompletionSource tcs -> tcs
    boolean writable -> writable
    boolean isWritable() -> isWritable
    boolean isOpen() -> isOpen
    boolean inTransaction() -> inTransaction
    bolts.Task open(android.database.sqlite.SQLiteOpenHelper) -> open
    bolts.Task beginTransactionAsync() -> beginTransactionAsync
    bolts.Task setTransactionSuccessfulAsync() -> setTransactionSuccessfulAsync
    bolts.Task endTransactionAsync() -> endTransactionAsync
    bolts.Task close() -> close
    bolts.Task queryAsync(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[]) -> queryAsync
    bolts.Task insertWithOnConflict(java.lang.String,android.content.ContentValues,int) -> insertWithOnConflict
    bolts.Task insertOrThrowAsync(java.lang.String,android.content.ContentValues) -> insertOrThrowAsync
    bolts.Task updateAsync(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateAsync
    bolts.Task deleteAsync(java.lang.String,java.lang.String,java.lang.String[]) -> deleteAsync
    bolts.Task rawQueryAsync(java.lang.String,java.lang.String[]) -> rawQueryAsync
    java.lang.Object access$000(com.parse.ParseSQLiteDatabase) -> access$000
    bolts.Task access$102(com.parse.ParseSQLiteDatabase,bolts.Task) -> access$102
    bolts.Task$TaskCompletionSource access$200(com.parse.ParseSQLiteDatabase) -> access$200
    android.database.sqlite.SQLiteDatabase access$302(com.parse.ParseSQLiteDatabase,android.database.sqlite.SQLiteDatabase) -> access$302
    boolean access$400(com.parse.ParseSQLiteDatabase) -> access$400
    android.database.sqlite.SQLiteDatabase access$300(com.parse.ParseSQLiteDatabase) -> access$300
com.parse.ParseSQLiteDatabase$1 -> com.parse.ParseSQLiteDatabase$1:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$10 -> com.parse.ParseSQLiteDatabase$10:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$11 -> com.parse.ParseSQLiteDatabase$11:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$12 -> com.parse.ParseSQLiteDatabase$12:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$12$1 -> com.parse.ParseSQLiteDatabase$12$1:
    android.database.Cursor val$cursor -> val$cursor
    com.parse.ParseSQLiteDatabase$12 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$13 -> com.parse.ParseSQLiteDatabase$13:
    java.lang.String val$table -> val$table
    java.lang.String[] val$select -> val$select
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$14 -> com.parse.ParseSQLiteDatabase$14:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$15 -> com.parse.ParseSQLiteDatabase$15:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    int val$conflictAlgorithm -> val$conflictAlgorithm
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$16 -> com.parse.ParseSQLiteDatabase$16:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$17 -> com.parse.ParseSQLiteDatabase$17:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$18 -> com.parse.ParseSQLiteDatabase$18:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$19 -> com.parse.ParseSQLiteDatabase$19:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$2 -> com.parse.ParseSQLiteDatabase$2:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$20 -> com.parse.ParseSQLiteDatabase$20:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$21 -> com.parse.ParseSQLiteDatabase$21:
    java.lang.String val$table -> val$table
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$22 -> com.parse.ParseSQLiteDatabase$22:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$23 -> com.parse.ParseSQLiteDatabase$23:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$23$1 -> com.parse.ParseSQLiteDatabase$23$1:
    android.database.Cursor val$cursor -> val$cursor
    com.parse.ParseSQLiteDatabase$23 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$24 -> com.parse.ParseSQLiteDatabase$24:
    java.lang.String val$sql -> val$sql
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$25 -> com.parse.ParseSQLiteDatabase$25:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$3 -> com.parse.ParseSQLiteDatabase$3:
    android.database.sqlite.SQLiteOpenHelper val$helper -> val$helper
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$4 -> com.parse.ParseSQLiteDatabase$4:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$5 -> com.parse.ParseSQLiteDatabase$5:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$6 -> com.parse.ParseSQLiteDatabase$6:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$7 -> com.parse.ParseSQLiteDatabase$7:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$8 -> com.parse.ParseSQLiteDatabase$8:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$9 -> com.parse.ParseSQLiteDatabase$9:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteOpenHelper -> com.parse.ParseSQLiteOpenHelper:
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    java.lang.String getDatabaseName() -> getDatabaseName
    bolts.Task getReadableDatabaseAsync() -> getReadableDatabaseAsync
    bolts.Task getWritableDatabaseAsync() -> getWritableDatabaseAsync
    bolts.Task getDatabaseAsync(boolean) -> getDatabaseAsync
    void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase) -> onDowngrade
    android.database.sqlite.SQLiteOpenHelper access$000(com.parse.ParseSQLiteOpenHelper) -> access$000
com.parse.ParseSQLiteOpenHelper$1 -> com.parse.ParseSQLiteOpenHelper$1:
    com.parse.ParseSQLiteOpenHelper this$0 -> this$0
    void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.parse.ParseSQLiteOpenHelper$2 -> com.parse.ParseSQLiteOpenHelper$2:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseSQLiteOpenHelper this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteOpenHelper$3 -> com.parse.ParseSQLiteOpenHelper$3:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseSQLiteOpenHelper this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSetOperation -> com.parse.ParseSetOperation:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseTestUtils -> com.parse.ParseTestUtils:
    java.lang.String TAG -> TAG
    java.lang.Object TEST_SERVER_LOCK -> TEST_SERVER_LOCK
    java.lang.String testServer -> testServer
    com.parse.Synchronizer synchronizer -> synchronizer
    int totalBroadcastReceiverInvocations -> totalBroadcastReceiverInvocations
    java.util.concurrent.Semaphore awaitStartSemaphore -> awaitStartSemaphore
    java.util.concurrent.Semaphore awaitStopSemaphore -> awaitStopSemaphore
    com.parse.ParseTestUtils$StateTransitionListener listener -> listener
    com.parse.ParseTestUtils$PushRoutedListener globalListener -> globalListener
    java.util.concurrent.atomic.AtomicBoolean strictModeEnabled -> strictModeEnabled
    java.lang.String useServer(java.lang.String) -> useServer
    void setTestServer(java.lang.String) -> setTestServer
    java.lang.String getTestServer(android.content.Context) -> getTestServer
    java.lang.String useTestServer(android.content.Context) -> useTestServer
    java.lang.String useBadServerPort() -> useBadServerPort
    java.lang.String useInvalidServer() -> useInvalidServer
    java.lang.String useBadServerPort(java.lang.String) -> useBadServerPort
    void clearApp() -> clearApp
    void mockV8Client() -> mockV8Client
    void unmockV8Client() -> unmockV8Client
    void useDevPushServer() -> useDevPushServer
    void saveObjectToDisk(com.parse.ParseObject,android.content.Context,java.lang.String) -> saveObjectToDisk
    com.parse.ParseObject getObjectFromDisk(android.content.Context,java.lang.String) -> getObjectFromDisk
    com.parse.ParseUser getUserObjectFromDisk(android.content.Context,java.lang.String) -> getUserObjectFromDisk
    void saveStringToDisk(java.lang.String,android.content.Context,java.lang.String) -> saveStringToDisk
    java.io.File getParseDir(android.content.Context) -> getParseDir
    void initSynchronizer() -> initSynchronizer
    java.util.Set keySet(com.parse.ParseObject) -> keySet
    void start(int) -> start
    void assertFinishes() -> assertFinishes
    void finish() -> finish
    void setCommandInitialDelay(long) -> setCommandInitialDelay
    void recursiveDelete(java.io.File) -> recursiveDelete
    void clearFiles() -> clearFiles
    void reloadPushRouter() -> reloadPushRouter
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    void deleteCurrentInstallation() -> deleteCurrentInstallation
    java.util.Set pushRoutes(android.content.Context) -> pushRoutes
    int totalBroadcastReceiverInvocations() -> totalBroadcastReceiverInvocations
    java.lang.String getInstallationId(android.content.Context) -> getInstallationId
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    org.json.JSONObject getSerializedPushStateJSON() -> getSerializedPushStateJSON
    void resetAwaitConnectionStarted() -> resetAwaitConnectionStarted
    void resetAwaitConnectionStopped() -> resetAwaitConnectionStopped
    boolean awaitConnectionStarted() -> awaitConnectionStarted
    boolean awaitConnectionStopped() -> awaitConnectionStopped
    java.util.List getPushConnectionStateTransitions() -> getPushConnectionStateTransitions
    java.util.List getPushConnectionRetryDelays() -> getPushConnectionRetryDelays
    void tearDownPushTest(android.content.Context) -> tearDownPushTest
    void setPushRoutedListener(com.parse.ParseTestUtils$PushRoutedListener) -> setPushRoutedListener
    void setUpPushTest(android.content.Context) -> setUpPushTest
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void setRetryDelayEnabled(boolean) -> setRetryDelayEnabled
    java.net.ServerSocket mockPushServer() -> mockPushServer
    int numKeyValueCacheFiles() -> numKeyValueCacheFiles
    void setMaxKeyValueCacheFiles(int) -> setMaxKeyValueCacheFiles
    void setMaxKeyValueCacheBytes(int) -> setMaxKeyValueCacheBytes
    void resetCommandCache() -> resetCommandCache
    void disconnectCommandCache() -> disconnectCommandCache
    void reconnectCommandCache() -> reconnectCommandCache
    boolean waitForCommandCacheEnqueue() -> waitForCommandCacheEnqueue
    boolean waitForCommandCacheSuccess() -> waitForCommandCacheSuccess
    boolean waitForCommandCacheFailure() -> waitForCommandCacheFailure
    int commandCacheUnexpectedEvents() -> commandCacheUnexpectedEvents
    int setPushHistoryLength(int) -> setPushHistoryLength
    void setStrictModeEnabledForMainThread(boolean) -> setStrictModeEnabledForMainThread
    void setStrictModeEnabledForThisThread(boolean) -> setStrictModeEnabledForThisThread
    java.util.concurrent.Semaphore access$000() -> access$000
    java.util.concurrent.Semaphore access$100() -> access$100
    int access$208() -> access$208
    com.parse.ParseTestUtils$PushRoutedListener access$300() -> access$300
com.parse.ParseTestUtils$1 -> com.parse.ParseTestUtils$1:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.ParseTestUtils$2 -> com.parse.ParseTestUtils$2:
    boolean val$enabled -> val$enabled
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.ParseTestUtils$PushRoutedListener -> com.parse.ParseTestUtils$PushRoutedListener:
    void onPushRouted(org.json.JSONObject) -> onPushRouted
com.parse.ParseTestUtils$StateTransition -> com.parse.ParseTestUtils$StateTransition:
    long timestamp -> timestamp
    com.parse.PushConnection connection -> connection
    com.parse.PushConnection$State fromState -> fromState
    com.parse.PushConnection$State toState -> toState
    java.lang.String toString() -> toString
com.parse.ParseTestUtils$StateTransitionListener -> com.parse.ParseTestUtils$StateTransitionListener:
    java.util.ArrayList transitions -> transitions
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
    java.util.List getTransitions() -> getTransitions
com.parse.ParseTraverser -> com.parse.ParseTraverser:
    boolean traverseParseObjects -> traverseParseObjects
    boolean yieldRoot -> yieldRoot
    boolean visit(java.lang.Object) -> visit
    void traverseInternal(java.lang.Object,boolean,java.util.IdentityHashMap) -> traverseInternal
    com.parse.ParseTraverser setTraverseParseObjects(boolean) -> setTraverseParseObjects
    com.parse.ParseTraverser setYieldRoot(boolean) -> setYieldRoot
    void traverse(java.lang.Object) -> traverse
com.parse.ParseTwitterUtils -> com.parse.ParseTwitterUtils:
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.TwitterAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.parse.TwitterAuthenticationProvider getAuthenticationProvider() -> getAuthenticationProvider
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void initialize(java.lang.String,java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    boolean isLinked(com.parse.ParseUser) -> isLinked
    bolts.Task linkInBackground(android.content.Context,com.parse.ParseUser) -> linkInBackground
    void link(com.parse.ParseUser,android.content.Context) -> link
    void link(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> link
    bolts.Task linkInBackground(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> linkInBackground
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.SaveCallback) -> link
    bolts.Task logInInBackground(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logInInBackground
    void logIn(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.LogInCallback) -> logIn
    bolts.Task logInInBackground(android.content.Context) -> logInInBackground
    void logIn(android.content.Context,com.parse.LogInCallback) -> logIn
    void unlink(com.parse.ParseUser) -> unlink
    bolts.Task unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
com.parse.ParseUser -> com.parse.ParseUser:
    java.lang.String CURRENT_USER_FILENAME -> CURRENT_USER_FILENAME
    java.lang.String PIN_CURRENT_USER -> PIN_CURRENT_USER
    java.lang.Object MUTEX_CURRENT_USER -> MUTEX_CURRENT_USER
    com.parse.ParseUser currentUser -> currentUser
    java.util.Map authenticationProviders -> authenticationProviders
    boolean autoUserEnabled -> autoUserEnabled
    boolean currentUserMatchesDisk -> currentUserMatchesDisk
    java.lang.String password -> password
    java.lang.String sessionToken -> sessionToken
    org.json.JSONObject authData -> authData
    java.util.Set linkedServiceNames -> linkedServiceNames
    java.util.Set readOnlyLinkedServiceNames -> readOnlyLinkedServiceNames
    boolean isNew -> isNew
    boolean isLazy -> isLazy
    boolean dirty -> dirty
    boolean isCurrentUser -> isCurrentUser
    com.parse.ParseUser logInLazyUser(java.lang.String,org.json.JSONObject) -> logInLazyUser
    boolean isLazy() -> isLazy
    boolean isDirty(boolean) -> isDirty
    boolean isAuthenticated() -> isAuthenticated
    void remove(java.lang.String) -> remove
    org.json.JSONObject toJSONObjectForSaving(com.parse.ParseOperationSet,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    org.json.JSONObject toRest(com.parse.ParseObjectEncodingStrategy) -> toRest
    void mergeREST(org.json.JSONObject,com.parse.ParseDecoder) -> mergeREST
    boolean isCurrentUser() -> isCurrentUser
    void cleanUpAuthData() -> cleanUpAuthData
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setPassword(java.lang.String) -> setPassword
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getEmail() -> getEmail
    void put(java.lang.String,java.lang.Object) -> put
    void stripAnonymity() -> stripAnonymity
    void restoreAnonymity(org.json.JSONObject) -> restoreAnonymity
    java.lang.String getSessionToken() -> getSessionToken
    void validateSave() -> validateSave
    bolts.Task saveAsync(bolts.Task) -> saveAsync
    void validateDelete() -> validateDelete
    com.parse.ParseUser fetch() -> fetch
    bolts.Task fetchAsync(bolts.Task) -> fetchAsync
    com.parse.ParseCommand constructSaveCommand(com.parse.ParseOperationSet,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    com.parse.ParseCommand constructSignUpCommand(com.parse.ParseOperationSet,java.lang.String) -> constructSignUpCommand
    com.parse.ParseCommand constructSignUpOrLoginCommand(com.parse.ParseOperationSet) -> constructSignUpOrLoginCommand
    com.parse.ParseCommand constructPasswordResetCommand(java.lang.String,java.lang.String) -> constructPasswordResetCommand
    bolts.Task signUpInBackground() -> signUpInBackground
    bolts.Task signUpAsync(bolts.Task) -> signUpAsync
    void signUp() -> signUp
    void signUpInBackground(com.parse.SignUpCallback) -> signUpInBackground
    com.parse.ParseCommand constructLogInCommand(java.lang.String,java.lang.String) -> constructLogInCommand
    bolts.Task logInInBackground(java.lang.String,java.lang.String) -> logInInBackground
    com.parse.ParseUser logIn(java.lang.String,java.lang.String) -> logIn
    void logInInBackground(java.lang.String,java.lang.String,com.parse.LogInCallback) -> logInInBackground
    com.parse.ParseCommand constructBecomeCommand(java.lang.String) -> constructBecomeCommand
    bolts.Task becomeInBackground(java.lang.String) -> becomeInBackground
    com.parse.ParseUser become(java.lang.String) -> become
    void becomeInBackground(java.lang.String,com.parse.LogInCallback) -> becomeInBackground
    com.parse.ParseUser getCurrentUser() -> getCurrentUser
    java.lang.String getCurrentSessionToken() -> getCurrentSessionToken
    bolts.Task saveCurrentUserAsync(com.parse.ParseUser) -> saveCurrentUserAsync
    void logOut() -> logOut
    bolts.Task requestPasswordResetInBackground(java.lang.String) -> requestPasswordResetInBackground
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.parse.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void checkApplicationContext() -> checkApplicationContext
    com.parse.ParseUser fetchIfNeeded() -> fetchIfNeeded
    java.util.Set getLinkedServiceNames() -> getLinkedServiceNames
    void synchronizeAuthData(java.lang.String) -> synchronizeAuthData
    void synchronizeAllAuthData() -> synchronizeAllAuthData
    bolts.Task unlinkFromAsync(java.lang.String) -> unlinkFromAsync
    void registerAuthenticationProvider(com.parse.ParseAuthenticationProvider) -> registerAuthenticationProvider
    bolts.Task logInWithAsync(java.lang.String) -> logInWithAsync
    bolts.Task logInWithAsync(java.lang.String,org.json.JSONObject) -> logInWithAsync
    bolts.Task resolveLazinessAsync(bolts.Task) -> resolveLazinessAsync
    bolts.Task authenticateAsync(com.parse.ParseAuthenticationProvider) -> authenticateAsync
    bolts.Task logInWithAsync(com.parse.ParseAuthenticationProvider) -> logInWithAsync
    bolts.Task linkWithAsync(java.lang.String,org.json.JSONObject,bolts.Task) -> linkWithAsync
    bolts.Task linkWithAsync(java.lang.String,org.json.JSONObject) -> linkWithAsync
    bolts.Task linkWithAsync(java.lang.String) -> linkWithAsync
    bolts.Task linkWithAsync(com.parse.ParseAuthenticationProvider) -> linkWithAsync
    void logOutWith(java.lang.String) -> logOutWith
    void logOutWith(com.parse.ParseAuthenticationProvider) -> logOutWith
    boolean isNew() -> isNew
    void disableAutomaticUser() -> disableAutomaticUser
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isAutomaticUserEnabled() -> isAutomaticUserEnabled
    com.parse.ParseQuery getQuery() -> getQuery
    void clearCurrentUserFromMemory() -> clearCurrentUserFromMemory
    boolean needsDefaultACL() -> needsDefaultACL
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    com.parse.ParseObject fetch() -> fetch
    void access$000(com.parse.ParseUser) -> access$000
    bolts.Task access$100(com.parse.ParseUser) -> access$100
    bolts.Task access$200(com.parse.ParseUser,bolts.Task) -> access$200
    com.parse.ParseCommand access$300(com.parse.ParseUser,com.parse.ParseOperationSet,java.lang.String) -> access$300
    boolean access$402(com.parse.ParseUser,boolean) -> access$402
    boolean access$502(com.parse.ParseUser,boolean) -> access$502
    java.lang.Object access$600() -> access$600
    boolean access$702(boolean) -> access$702
    com.parse.ParseUser access$802(com.parse.ParseUser) -> access$802
    org.json.JSONObject access$900(com.parse.ParseUser) -> access$900
    java.util.Set access$1000(com.parse.ParseUser) -> access$1000
    com.parse.ParseCommand access$1100(com.parse.ParseUser,com.parse.ParseOperationSet) -> access$1100
    void access$1200(com.parse.ParseUser,org.json.JSONObject) -> access$1200
    void access$1300(com.parse.ParseUser) -> access$1300
    bolts.Task access$1400(com.parse.ParseUser,bolts.Task) -> access$1400
    boolean access$1502(com.parse.ParseUser,boolean) -> access$1502
    void access$1600(com.parse.ParseUser,java.lang.String) -> access$1600
    bolts.Task access$1700(com.parse.ParseUser,java.lang.String,org.json.JSONObject,bolts.Task) -> access$1700
com.parse.ParseUser$1 -> com.parse.ParseUser$1:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$10 -> com.parse.ParseUser$10:
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$11 -> com.parse.ParseUser$11:
    com.parse.ParseUser val$user -> val$user
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12 -> com.parse.ParseUser$12:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$13 -> com.parse.ParseUser$13:
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$14 -> com.parse.ParseUser$14:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$14$1 -> com.parse.ParseUser$14$1:
    com.parse.ParseUser$14 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$15 -> com.parse.ParseUser$15:
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$15$1 -> com.parse.ParseUser$15$1:
    com.parse.ParseUser$15 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$15$2 -> com.parse.ParseUser$15$2:
    com.parse.ParseUser$15 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$16 -> com.parse.ParseUser$16:
    bolts.Continuation val$logInWithTask -> val$logInWithTask
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$17 -> com.parse.ParseUser$17:
    com.parse.ParseUser this$0 -> this$0
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$18 -> com.parse.ParseUser$18:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$19 -> com.parse.ParseUser$19:
    bolts.Capture val$operations -> val$operations
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$19$1 -> com.parse.ParseUser$19$1:
    org.json.JSONObject val$commandResult -> val$commandResult
    com.parse.ParseUser$19 this$1 -> this$1
    org.json.JSONObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$2 -> com.parse.ParseUser$2:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$2$1 -> com.parse.ParseUser$2$1:
    bolts.Task val$fetchAsyncTask -> val$fetchAsyncTask
    com.parse.ParseUser$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$20 -> com.parse.ParseUser$20:
    bolts.Capture val$operations -> val$operations
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$21 -> com.parse.ParseUser$21:
    com.parse.ParseUser this$0 -> this$0
    com.parse.ParseOperationSet call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$22 -> com.parse.ParseUser$22:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.ParseUser$23 -> com.parse.ParseUser$23:
    com.parse.ParseAuthenticationProvider val$authenticator -> val$authenticator
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$24 -> com.parse.ParseUser$24:
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$25 -> com.parse.ParseUser$25:
    bolts.Task val$toAwait -> val$toAwait
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$26 -> com.parse.ParseUser$26:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$27 -> com.parse.ParseUser$27:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$28 -> com.parse.ParseUser$28:
    com.parse.ParseAuthenticationProvider val$authenticator -> val$authenticator
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$3 -> com.parse.ParseUser$3:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$4 -> com.parse.ParseUser$4:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$5 -> com.parse.ParseUser$5:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$5$1 -> com.parse.ParseUser$5$1:
    com.parse.ParseOperationSet val$operations -> val$operations
    com.parse.ParseUser$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$5$1$1 -> com.parse.ParseUser$5$1$1:
    bolts.Task val$signUpTask -> val$signUpTask
    com.parse.ParseUser$5$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$6 -> com.parse.ParseUser$6:
    com.parse.ParseUser this$0 -> this$0
    com.parse.ParseOperationSet call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$7 -> com.parse.ParseUser$7:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$8 -> com.parse.ParseUser$8:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$9 -> com.parse.ParseUser$9:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseWakeLock -> com.parse.ParseWakeLock:
    java.lang.String TAG -> TAG
    boolean hasWakeLockPermission -> hasWakeLockPermission
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    com.parse.ParseWakeLock acquireNewWakeLock(android.content.Context,int,java.lang.String,long) -> acquireNewWakeLock
    void release() -> release
com.parse.PointerEncodingStrategy -> com.parse.PointerEncodingStrategy:
    com.parse.PointerEncodingStrategy instance -> instance
    com.parse.PointerEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.PointerOrLocalIdEncodingStrategy -> com.parse.PointerOrLocalIdEncodingStrategy:
    com.parse.PointerOrLocalIdEncodingStrategy instance -> instance
    com.parse.PointerOrLocalIdEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ProcFileReader -> com.parse.ProcFileReader:
    java.lang.Class TAG -> TAG
    int CANNOT_DETERMINE_OPEN_FDS -> CANNOT_DETERMINE_OPEN_FDS
    int SECURITY_EXCEPTION -> SECURITY_EXCEPTION
    int getOpenFDCount() -> getOpenFDCount
    com.parse.ProcFileReader$OpenFDLimits getOpenFDLimits() -> getOpenFDLimits
com.parse.ProcFileReader$OpenFDLimits -> com.parse.ProcFileReader$OpenFDLimits:
    java.lang.String softLimit -> softLimit
    java.lang.String hardLimit -> hardLimit
com.parse.ProgressCallback -> com.parse.ProgressCallback:
    java.lang.Integer maxProgressSoFar -> maxProgressSoFar
    void done(java.lang.Integer) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.PushConnection -> com.parse.PushConnection:
    java.lang.String TAG -> TAG
    int CONNECT_TIMEOUT_MS -> CONNECT_TIMEOUT_MS
    long KEEP_ALIVE_INTERVAL -> KEEP_ALIVE_INTERVAL
    long KEEP_ALIVE_ACK_INTERVAL -> KEEP_ALIVE_ACK_INTERVAL
    boolean ENABLE_QUICK_ACK_CHECK -> ENABLE_QUICK_ACK_CHECK
    boolean ENABLE_RETRY_DELAY -> ENABLE_RETRY_DELAY
    long MIN_RETRY_DELAY_MS -> MIN_RETRY_DELAY_MS
    long MAX_RETRY_DELAY_MS -> MAX_RETRY_DELAY_MS
    double RETRY_MULT_FACTOR_MIN -> RETRY_MULT_FACTOR_MIN
    double RETRY_MULT_FACTOR_MAX -> RETRY_MULT_FACTOR_MAX
    android.app.Service service -> service
    java.lang.String host -> host
    int port -> port
    java.util.concurrent.ExecutorService executor -> executor
    com.parse.PushConnection$EventSet eventSet -> eventSet
    java.util.concurrent.atomic.AtomicLong lastReadTime -> lastReadTime
    com.parse.PushConnection$StateTransitionListener stateTransitionListener -> stateTransitionListener
    void start() -> start
    void stop() -> stop
    boolean writeLine(java.net.Socket,java.lang.String) -> writeLine
    void closeSocket(java.net.Socket) -> closeSocket
    void setStateTransitionListener(com.parse.PushConnection$StateTransitionListener) -> setStateTransitionListener
    com.parse.PushConnection$StateTransitionListener access$100() -> access$100
    java.util.concurrent.ExecutorService access$200(com.parse.PushConnection) -> access$200
    com.parse.PushConnection$EventSet access$300(com.parse.PushConnection) -> access$300
    java.lang.String access$400(com.parse.PushConnection) -> access$400
    int access$500(com.parse.PushConnection) -> access$500
    void access$600(java.net.Socket) -> access$600
    boolean access$700(java.net.Socket,java.lang.String) -> access$700
    android.app.Service access$1000(com.parse.PushConnection) -> access$1000
    java.util.concurrent.atomic.AtomicLong access$1100(com.parse.PushConnection) -> access$1100
com.parse.PushConnection$1 -> com.parse.PushConnection$1:
com.parse.PushConnection$ConnectState -> com.parse.PushConnection$ConnectState:
    long lastDelay -> lastDelay
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean sendHandshake(java.net.Socket) -> sendHandshake
    long nextDelay() -> nextDelay
com.parse.PushConnection$ConnectedState -> com.parse.PushConnection$ConnectedState:
    java.net.Socket socket -> socket
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$Event -> com.parse.PushConnection$Event:
    com.parse.PushConnection$Event START -> START
    com.parse.PushConnection$Event STOP -> STOP
    com.parse.PushConnection$Event CONNECTIVITY_CHANGED -> CONNECTIVITY_CHANGED
    com.parse.PushConnection$Event KEEP_ALIVE_ERROR -> KEEP_ALIVE_ERROR
    com.parse.PushConnection$Event READ_ERROR -> READ_ERROR
    com.parse.PushConnection$Event[] $VALUES -> $VALUES
    com.parse.PushConnection$Event[] values() -> values
    com.parse.PushConnection$Event valueOf(java.lang.String) -> valueOf
com.parse.PushConnection$EventSet -> com.parse.PushConnection$EventSet:
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition condition -> condition
    java.util.HashSet signaledEvents -> signaledEvents
    void signalEvent(com.parse.PushConnection$Event) -> signalEvent
    void removeEvents(com.parse.PushConnection$Event[]) -> removeEvents
    java.util.Set await(com.parse.PushConnection$Event[]) -> await
    java.util.Set timedAwait(long,com.parse.PushConnection$Event[]) -> timedAwait
com.parse.PushConnection$KeepAliveMonitor -> com.parse.PushConnection$KeepAliveMonitor:
    java.net.Socket socket -> socket
    long interval -> interval
    android.content.BroadcastReceiver writeReceiver -> writeReceiver
    android.content.BroadcastReceiver readReceiver -> readReceiver
    android.app.AlarmManager manager -> manager
    android.app.PendingIntent broadcast -> broadcast
    bolts.Task keepAliveTask -> keepAliveTask
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void signalKeepAliveFailure() -> signalKeepAliveFailure
    void unregister() -> unregister
    void access$1200(com.parse.PushConnection$KeepAliveMonitor) -> access$1200
    bolts.Task access$1300(com.parse.PushConnection$KeepAliveMonitor) -> access$1300
    bolts.Task access$1302(com.parse.PushConnection$KeepAliveMonitor,bolts.Task) -> access$1302
    java.net.Socket access$1400(com.parse.PushConnection$KeepAliveMonitor) -> access$1400
    android.app.AlarmManager access$1500(com.parse.PushConnection$KeepAliveMonitor) -> access$1500
com.parse.PushConnection$KeepAliveMonitor$1 -> com.parse.PushConnection$KeepAliveMonitor$1:
    com.parse.PushConnection$KeepAliveMonitor this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.PushConnection$KeepAliveMonitor$2 -> com.parse.PushConnection$KeepAliveMonitor$2:
    android.content.Context val$appContext -> val$appContext
    android.content.Intent val$readIntent -> val$readIntent
    com.parse.PushConnection$KeepAliveMonitor this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.PushConnection$KeepAliveMonitor$2$1 -> com.parse.PushConnection$KeepAliveMonitor$2$1:
    com.parse.ParseWakeLock val$wl -> val$wl
    com.parse.PushConnection$KeepAliveMonitor$2 this$2 -> this$2
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushConnection$ReachabilityMonitor -> com.parse.PushConnection$ReachabilityMonitor:
    com.parse.ConnectivityNotifier$ConnectivityListener listener -> listener
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void unregister() -> unregister
    boolean access$900(com.parse.PushConnection$ReachabilityMonitor) -> access$900
com.parse.PushConnection$ReachabilityMonitor$1 -> com.parse.PushConnection$ReachabilityMonitor$1:
    com.parse.PushConnection$ReachabilityMonitor this$1 -> this$1
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.PushConnection$ReaderThread -> com.parse.PushConnection$ReaderThread:
    java.net.Socket socket -> socket
    boolean stopped -> stopped
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    void runReaderLoop(java.io.BufferedReader) -> runReaderLoop
    void stopReading() -> stopReading
com.parse.PushConnection$State -> com.parse.PushConnection$State:
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$StateTransitionListener -> com.parse.PushConnection$StateTransitionListener:
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
com.parse.PushConnection$StoppedState -> com.parse.PushConnection$StoppedState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$WaitRetryState -> com.parse.PushConnection$WaitRetryState:
    long delay -> delay
    com.parse.PushConnection this$0 -> this$0
    long getDelay() -> getDelay
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$WaitStartState -> com.parse.PushConnection$WaitStartState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushHistory -> com.parse.PushHistory:
    java.lang.String TAG -> TAG
    int maxHistoryLength -> maxHistoryLength
    java.util.PriorityQueue entries -> entries
    java.util.HashSet pushIds -> pushIds
    java.lang.String cutoff -> cutoff
    java.lang.String lastTime -> lastTime
    org.json.JSONObject toJSON() -> toJSON
    java.lang.String getCutoffTimestamp() -> getCutoffTimestamp
    void setCutoffTimestamp(java.lang.String) -> setCutoffTimestamp
    java.lang.String getLastReceivedTimestamp() -> getLastReceivedTimestamp
    void setLastReceivedTimestamp(java.lang.String) -> setLastReceivedTimestamp
    java.util.Set getPushIds() -> getPushIds
    boolean tryInsertPush(java.lang.String,java.lang.String) -> tryInsertPush
com.parse.PushHistory$Entry -> com.parse.PushHistory$Entry:
    java.lang.String pushId -> pushId
    java.lang.String timestamp -> timestamp
    int compareTo(com.parse.PushHistory$Entry) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.parse.PushRouter -> com.parse.PushRouter:
    java.lang.String TAG -> TAG
    java.lang.String LEGACY_ROUTE_LOCATION -> LEGACY_ROUTE_LOCATION
    java.lang.String STATE_LOCATION -> STATE_LOCATION
    java.lang.Integer V2_PUSH_STATE_VERSION -> V2_PUSH_STATE_VERSION
    java.lang.Integer V1_LATEST_PUSH_STATE_VERSION -> V1_LATEST_PUSH_STATE_VERSION
    java.util.concurrent.ExecutorService EXECUTOR -> EXECUTOR
    java.lang.String GCM_RECEIVE_ACTION -> GCM_RECEIVE_ACTION
    int MAX_HISTORY_LENGTH -> MAX_HISTORY_LENGTH
    bolts.Task lastTask -> lastTask
    com.parse.PushRouter$PushListener pushListener -> pushListener
    com.parse.PushRouter instance -> instance
    java.lang.String stateLocation -> stateLocation
    com.parse.PushRoutes routes -> routes
    com.parse.PushHistory history -> history
    java.util.concurrent.atomic.AtomicBoolean isRefreshingInstallation -> isRefreshingInstallation
    java.lang.Boolean forceEnabled -> forceEnabled
    int pushStateVersion -> pushStateVersion
    bolts.Task subscribeAsync(java.lang.String,java.lang.Class,int) -> subscribeAsync
    bolts.Task unsubscribeAsync(java.lang.String) -> unsubscribeAsync
    bolts.Task setForceEnabledAsync(java.lang.Boolean) -> setForceEnabledAsync
    bolts.Task getForceEnabledStateAsync() -> getForceEnabledStateAsync
    bolts.Task getRouteAsync(java.lang.String) -> getRouteAsync
    com.parse.PushRoutes$Route getRoute(java.lang.String) -> getRoute
    bolts.Task getSubscriptionsAsync(boolean) -> getSubscriptionsAsync
    bolts.Task getPushRequestJSONAsync() -> getPushRequestJSONAsync
    boolean isGcmPushIntent(android.content.Intent) -> isGcmPushIntent
    void handleGcmPushIntent(android.content.Intent) -> handleGcmPushIntent
    bolts.Task handlePpnsPushAsync(org.json.JSONObject) -> handlePpnsPushAsync
    bolts.Task reloadFromDiskAsync(boolean) -> reloadFromDiskAsync
    bolts.Task wipeRoutingAndUpgradePushStateAsync() -> wipeRoutingAndUpgradePushStateAsync
    bolts.Task getPushStateVersionAsync() -> getPushStateVersionAsync
    bolts.Task getLastTask() -> getLastTask
    bolts.Task makeUnhandledExceptionsFatal(bolts.Task) -> makeUnhandledExceptionsFatal
    org.json.JSONArray getChannelsArrayFromInstallation(com.parse.ParseInstallation) -> getChannelsArrayFromInstallation
    void setGlobalPushListener(com.parse.PushRouter$PushListener) -> setGlobalPushListener
    void noteHandlePushResult(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> noteHandlePushResult
    com.parse.PushRouter getInstance() -> getInstance
    com.parse.PushRouter reloadInstance(boolean) -> reloadInstance
    org.json.JSONObject migrateV1toV3(java.lang.String,java.lang.String) -> migrateV1toV3
    org.json.JSONObject migrateV2toV3(java.lang.String,java.lang.String) -> migrateV2toV3
    org.json.JSONObject toJSON() -> toJSON
    org.json.JSONObject merge(org.json.JSONObject[]) -> merge
    boolean saveStateToDisk() -> saveStateToDisk
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    void subscribe(java.lang.String,java.lang.Class,int) -> subscribe
    void setForceEnabledState(java.lang.Boolean) -> setForceEnabledState
    void unsubscribe(java.lang.String) -> unsubscribe
    void setPushStateVersion(int) -> setPushStateVersion
    java.util.Set getSubscriptions(boolean) -> getSubscriptions
    java.util.Date serverInstallationUpdatedAt(org.json.JSONObject) -> serverInstallationUpdatedAt
    void maybeRefreshInstallation(java.util.Date) -> maybeRefreshInstallation
    org.json.JSONObject convertGcmIntentToJSONObject(android.content.Intent) -> convertGcmIntentToJSONObject
    com.parse.PushRouter$HandlePushResult handleGcmPush(android.content.Intent) -> handleGcmPush
    com.parse.PushRouter$HandlePushResult handlePpnsPush(org.json.JSONObject) -> handlePpnsPush
    com.parse.PushRouter$HandlePushResult handlePush(org.json.JSONObject) -> handlePush
    void handlePushInternal(org.json.JSONObject) -> handlePushInternal
    com.parse.PushRouter$HandlePushResult handlePushLegacy(org.json.JSONObject) -> handlePushLegacy
    com.parse.PushRouter access$000() -> access$000
    java.lang.Boolean access$100(com.parse.PushRouter) -> access$100
    com.parse.PushRoutes access$200(com.parse.PushRouter) -> access$200
    com.parse.PushRouter access$300(boolean) -> access$300
    int access$400(com.parse.PushRouter) -> access$400
    java.util.concurrent.atomic.AtomicBoolean access$500(com.parse.PushRouter) -> access$500
com.parse.PushRouter$1 -> com.parse.PushRouter$1:
    java.lang.String val$channel -> val$channel
    java.lang.Class val$cls -> val$cls
    int val$iconId -> val$iconId
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$10 -> com.parse.PushRouter$10:
    boolean val$removeExistingState -> val$removeExistingState
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$11 -> com.parse.PushRouter$11:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$12 -> com.parse.PushRouter$12:
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$13 -> com.parse.PushRouter$13:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$13$1 -> com.parse.PushRouter$13$1:
    bolts.Task val$task -> val$task
    com.parse.PushRouter$13 this$0 -> this$0
    void run() -> run
com.parse.PushRouter$14 -> com.parse.PushRouter$14:
    com.parse.PushRouter$PushListener val$finalListener -> val$finalListener
    org.json.JSONObject val$pushData -> val$pushData
    com.parse.PushRouter$HandlePushResult val$result -> val$result
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$15 -> com.parse.PushRouter$15:
    com.parse.PushRouter this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$2 -> com.parse.PushRouter$2:
    java.lang.String val$channel -> val$channel
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$3 -> com.parse.PushRouter$3:
    java.lang.Boolean val$forceEnabled -> val$forceEnabled
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$4 -> com.parse.PushRouter$4:
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$5 -> com.parse.PushRouter$5:
    java.lang.String val$channel -> val$channel
    com.parse.PushRoutes$Route then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$6 -> com.parse.PushRouter$6:
    boolean val$includeDefaultRoute -> val$includeDefaultRoute
    java.util.Set then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$7 -> com.parse.PushRouter$7:
    org.json.JSONObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$8 -> com.parse.PushRouter$8:
    android.content.Intent val$intent -> val$intent
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.PushRouter$9 -> com.parse.PushRouter$9:
    org.json.JSONObject val$pushPayload -> val$pushPayload
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushRouter$HandlePushResult -> com.parse.PushRouter$HandlePushResult:
    com.parse.PushRouter$HandlePushResult INVALID_DATA -> INVALID_DATA
    com.parse.PushRouter$HandlePushResult FAILED_HISTORY_TEST -> FAILED_HISTORY_TEST
    com.parse.PushRouter$HandlePushResult NO_ROUTE_FOUND -> NO_ROUTE_FOUND
    com.parse.PushRouter$HandlePushResult INVALID_ROUTE -> INVALID_ROUTE
    com.parse.PushRouter$HandlePushResult BROADCAST_INTENT -> BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION -> SHOW_NOTIFICATION
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION_AND_BROADCAST_INTENT -> SHOW_NOTIFICATION_AND_BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult INVOKED_PARSE_PUSH_BROADCAST_RECEIVER -> INVOKED_PARSE_PUSH_BROADCAST_RECEIVER
    com.parse.PushRouter$HandlePushResult[] $VALUES -> $VALUES
    com.parse.PushRouter$HandlePushResult[] values() -> values
    com.parse.PushRouter$HandlePushResult valueOf(java.lang.String) -> valueOf
com.parse.PushRouter$PushListener -> com.parse.PushRouter$PushListener:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.PushRoutes -> com.parse.PushRoutes:
    java.lang.String TAG -> TAG
    java.util.regex.Pattern CHANNEL_PATTERN -> CHANNEL_PATTERN
    java.util.HashMap channels -> channels
    boolean isValidChannelName(java.lang.String) -> isValidChannelName
    org.json.JSONObject toJSON() -> toJSON
    java.util.Set getChannels() -> getChannels
    com.parse.PushRoutes$Route get(java.lang.String) -> get
    com.parse.PushRoutes$Route put(java.lang.String,com.parse.PushRoutes$Route) -> put
    com.parse.PushRoutes$Route remove(java.lang.String) -> remove
com.parse.PushRoutes$Route -> com.parse.PushRoutes$Route:
    java.lang.String activityClassName -> activityClassName
    int iconId -> iconId
    com.parse.PushRoutes$Route newFromJSON(org.json.JSONObject) -> newFromJSON
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.json.JSONObject toJSON() -> toJSON
    java.lang.Class getActivityClass() -> getActivityClass
    int getIconId() -> getIconId
com.parse.PushService -> com.parse.PushService:
    java.lang.String TAG -> TAG
    java.lang.String START_IF_REQUIRED_ACTION -> START_IF_REQUIRED_ACTION
    int WAKE_LOCK_TIMEOUT_MS -> WAKE_LOCK_TIMEOUT_MS
    java.lang.String host -> host
    int port -> port
    boolean loggedStartError -> loggedStartError
    com.parse.PushService$LifecycleListener lifecycleListener -> lifecycleListener
    java.lang.String CANNOT_USE_PUSH_V1_ERROR_MESSAGE -> CANNOT_USE_PUSH_V1_ERROR_MESSAGE
    com.parse.PushConnection connection -> connection
    java.util.concurrent.ExecutorService executor -> executor
    void setLifecycleListener(com.parse.PushService$LifecycleListener) -> setLifecycleListener
    void runGcmIntentInService(android.content.Context,android.content.Intent) -> runGcmIntentInService
    void stopPpnsService(android.content.Context) -> stopPpnsService
    void startPpnsServiceIfRequired(android.content.Context) -> startPpnsServiceIfRequired
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> subscribe
    void subscribe(android.content.Context,java.lang.String,java.lang.Class,int) -> subscribe
    void unsubscribe(android.content.Context,java.lang.String) -> unsubscribe
    void unsubscribeInternal(java.lang.String) -> unsubscribeInternal
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> setDefaultPushCallback
    void setDefaultPushCallback(android.content.Context,java.lang.Class,int) -> setDefaultPushCallback
    void checkManifestAndThrowExceptionIfNeeded() -> checkManifestAndThrowExceptionIfNeeded
    java.util.Set getSubscriptions(android.content.Context) -> getSubscriptions
    void useServer(java.lang.String,int) -> useServer
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void wipeRoutingAndUpgradePushStateIfNeeded() -> wipeRoutingAndUpgradePushStateIfNeeded
    int onPpnsStartCommand(android.content.Intent,int,int) -> onPpnsStartCommand
    int onGcmStartCommand(android.content.Intent,int,int) -> onGcmStartCommand
    void onHandleGcmIntent(android.content.Intent) -> onHandleGcmIntent
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void access$000(com.parse.PushService,android.content.Intent) -> access$000
com.parse.PushService$1 -> com.parse.PushService$1:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$2 -> com.parse.PushService$2:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$3 -> com.parse.PushService$3:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$4 -> com.parse.PushService$4:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$5 -> com.parse.PushService$5:
    bolts.Capture val$forceEnabledCapture -> val$forceEnabledCapture
    com.parse.PushConnection val$conn -> val$conn
    com.parse.PushService this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$6 -> com.parse.PushService$6:
    bolts.Capture val$forceEnabledCapture -> val$forceEnabledCapture
    com.parse.PushService this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.PushService$7 -> com.parse.PushService$7:
    android.content.Intent val$intent -> val$intent
    int val$startId -> val$startId
    com.parse.PushService this$0 -> this$0
    void run() -> run
com.parse.PushService$8 -> com.parse.PushService$8:
    int[] $SwitchMap$com$parse$PushType -> $SwitchMap$com$parse$PushType
com.parse.PushService$LifecycleListener -> com.parse.PushService$LifecycleListener:
    void onServiceCreated(android.app.Service) -> onServiceCreated
    void onServiceDestroyed(android.app.Service) -> onServiceDestroyed
com.parse.PushType -> com.parse.PushType:
    com.parse.PushType NONE -> NONE
    com.parse.PushType PPNS -> PPNS
    com.parse.PushType GCM -> GCM
    java.lang.String pushType -> pushType
    com.parse.PushType[] $VALUES -> $VALUES
    com.parse.PushType[] values() -> values
    com.parse.PushType valueOf(java.lang.String) -> valueOf
    com.parse.PushType fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
com.parse.ReflectionCollector -> com.parse.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
com.parse.RefreshCallback -> com.parse.RefreshCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ReportField -> com.parse.ReportField:
    com.parse.ReportField REPORT_ID -> REPORT_ID
    com.parse.ReportField ANDROID_ID -> ANDROID_ID
    com.parse.ReportField UID -> UID
    com.parse.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    com.parse.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    com.parse.ReportField PACKAGE_NAME -> PACKAGE_NAME
    com.parse.ReportField FILE_PATH -> FILE_PATH
    com.parse.ReportField PHONE_MODEL -> PHONE_MODEL
    com.parse.ReportField ANDROID_VERSION -> ANDROID_VERSION
    com.parse.ReportField OS_VERSION -> OS_VERSION
    com.parse.ReportField IS_CYANOGENMOD -> IS_CYANOGENMOD
    com.parse.ReportField BUILD -> BUILD
    com.parse.ReportField BRAND -> BRAND
    com.parse.ReportField PRODUCT -> PRODUCT
    com.parse.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    com.parse.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    com.parse.ReportField CUSTOM_DATA -> CUSTOM_DATA
    com.parse.ReportField STACK_TRACE -> STACK_TRACE
    com.parse.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    com.parse.ReportField DISPLAY -> DISPLAY
    com.parse.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    com.parse.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    com.parse.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    com.parse.ReportField DROPBOX -> DROPBOX
    com.parse.ReportField LOGCAT -> LOGCAT
    com.parse.ReportField EVENTSLOG -> EVENTSLOG
    com.parse.ReportField RADIOLOG -> RADIOLOG
    com.parse.ReportField IS_SILENT -> IS_SILENT
    com.parse.ReportField DEVICE_ID -> DEVICE_ID
    com.parse.ReportField INSTALLATION_ID -> INSTALLATION_ID
    com.parse.ReportField USER_EMAIL -> USER_EMAIL
    com.parse.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    com.parse.ReportField ENVIRONMENT -> ENVIRONMENT
    com.parse.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    com.parse.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    com.parse.ReportField PROCESS_NAME -> PROCESS_NAME
    com.parse.ReportField PROCESS_NAME_BY_AMS -> PROCESS_NAME_BY_AMS
    com.parse.ReportField UPLOADED_BY_PROCESS -> UPLOADED_BY_PROCESS
    com.parse.ReportField ACTIVITY_LOG -> ACTIVITY_LOG
    com.parse.ReportField ACRA_INTERNAL -> ACRA_INTERNAL
    com.parse.ReportField PROCESS_UPTIME -> PROCESS_UPTIME
    com.parse.ReportField DEVICE_UPTIME -> DEVICE_UPTIME
    com.parse.ReportField JAIL_BROKEN -> JAIL_BROKEN
    com.parse.ReportField ACRA_REPORT_FILENAME -> ACRA_REPORT_FILENAME
    com.parse.ReportField EXCEPTION_CAUSE -> EXCEPTION_CAUSE
    com.parse.ReportField REPORT_LOAD_THROW -> REPORT_LOAD_THROW
    com.parse.ReportField MINIDUMP -> MINIDUMP
    com.parse.ReportField OPEN_FD_COUNT -> OPEN_FD_COUNT
    com.parse.ReportField OPEN_FD_SOFT_LIMIT -> OPEN_FD_SOFT_LIMIT
    com.parse.ReportField OPEN_FD_HARD_LIMIT -> OPEN_FD_HARD_LIMIT
    com.parse.ReportField APP_INSTALL_TIME -> APP_INSTALL_TIME
    com.parse.ReportField APP_UPGRADE_TIME -> APP_UPGRADE_TIME
    com.parse.ReportField SERIAL -> SERIAL
    com.parse.ReportField IS_LOW_RAM_DEVICE -> IS_LOW_RAM_DEVICE
    com.parse.ReportField SIGQUIT -> SIGQUIT
    com.parse.ReportField LARGE_MEM_HEAP -> LARGE_MEM_HEAP
    com.parse.ReportField ANDROID_RUNTIME -> ANDROID_RUNTIME
    com.parse.ReportField[] $VALUES -> $VALUES
    com.parse.ReportField[] values() -> values
    com.parse.ReportField valueOf(java.lang.String) -> valueOf
com.parse.ReportSender -> com.parse.ReportSender:
    void send(com.parse.CrashReportData) -> send
com.parse.ReportSenderException -> com.parse.ReportSenderException:
com.parse.ReportsCrashes -> com.parse.ReportsCrashes:
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formPostFormat() -> formPostFormat
    int socketTimeout() -> socketTimeout
    boolean checkSSLCertsOnCrashReport() -> checkSSLCertsOnCrashReport
    android.content.Context getApplicationContext() -> getApplicationContext
com.parse.RequestPasswordResetCallback -> com.parse.RequestPasswordResetCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SSLConnectionProvider -> com.parse.SSLConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
    java.net.HttpURLConnection initializeConnectionParameters(java.net.HttpURLConnection) -> initializeConnectionParameters
com.parse.SaveCallback -> com.parse.SaveCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SendCallback -> com.parse.SendCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ServiceUtils -> com.parse.ServiceUtils:
    java.lang.String TAG -> TAG
    java.lang.String WAKE_LOCK_EXTRA -> WAKE_LOCK_EXTRA
    android.util.SparseArray wakeLocks -> wakeLocks
    int wakeLockId -> wakeLockId
    boolean runIntentInService(android.content.Context,android.content.Intent,java.lang.Class) -> runIntentInService
    boolean runWakefulIntentInService(android.content.Context,android.content.Intent,java.lang.Class,long) -> runWakefulIntentInService
    void completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
com.parse.SettingsCollector -> com.parse.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
com.parse.SignUpCallback -> com.parse.SignUpCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SimpleTraceLogger -> com.parse.SimpleTraceLogger:
    java.lang.String TAG -> TAG
    int NO_LIMIT -> NO_LIMIT
    int mTraceCountLimit -> mTraceCountLimit
    java.util.Queue mTrace -> mTrace
    void append(java.lang.String,java.lang.Object[]) -> append
    void append(java.lang.String) -> append
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    void clear() -> clear
com.parse.SimpleTraceLogger$TraceLogLine -> com.parse.SimpleTraceLogger$TraceLogLine:
    java.lang.String trace -> trace
    long time -> time
    java.lang.String toString() -> toString
com.parse.Synchronizer -> com.parse.Synchronizer:
    boolean done -> done
    java.util.concurrent.CountDownLatch latch -> latch
    void start(int) -> start
    void finish() -> finish
    void assertFinishes() -> assertFinishes
com.parse.TaskQueue -> com.parse.TaskQueue:
    bolts.Task tail -> tail
    java.util.concurrent.locks.Lock lock -> lock
    bolts.Task getTaskToAwait() -> getTaskToAwait
    bolts.Task enqueue(bolts.Continuation) -> enqueue
    bolts.Continuation waitFor(bolts.Task) -> waitFor
    java.util.concurrent.locks.Lock getLock() -> getLock
    void waitUntilFinished() -> waitUntilFinished
com.parse.TaskQueue$1 -> com.parse.TaskQueue$1:
    com.parse.TaskQueue this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskQueue$2 -> com.parse.TaskQueue$2:
    bolts.Task val$toAwait -> val$toAwait
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskQueue$2$1 -> com.parse.TaskQueue$2$1:
    bolts.Task val$task -> val$task
    com.parse.TaskQueue$2 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskStackBuilderHelper -> com.parse.TaskStackBuilderHelper:
    void startActivities(android.content.Context,java.lang.Class,android.content.Intent) -> startActivities
com.parse.TrustEveryoneTrustManager -> com.parse.TrustEveryoneTrustManager:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.parse.TwitterAuthenticationProvider -> com.parse.TwitterAuthenticationProvider:
    java.lang.String SCREEN_NAME_KEY -> SCREEN_NAME_KEY
    java.lang.String ID_KEY -> ID_KEY
    java.lang.String AUTH_TOKEN_SECRET_KEY -> AUTH_TOKEN_SECRET_KEY
    java.lang.String AUTH_TOKEN_KEY -> AUTH_TOKEN_KEY
    java.lang.String CONSUMER_KEY_KEY -> CONSUMER_KEY_KEY
    java.lang.String CONSUMER_SECRET_KEY -> CONSUMER_SECRET_KEY
    java.lang.ref.WeakReference baseContext -> baseContext
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    void authenticate(com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAuthData
    void cancel() -> cancel
    void deauthenticate() -> deauthenticate
    java.lang.String getAuthType() -> getAuthType
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void handleCancel(com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> handleCancel
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void setContext(android.content.Context) -> setContext
    void access$000(com.parse.TwitterAuthenticationProvider,com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$000
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback access$100(com.parse.TwitterAuthenticationProvider) -> access$100
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback access$102(com.parse.TwitterAuthenticationProvider,com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$102
    com.parse.twitter.Twitter access$200(com.parse.TwitterAuthenticationProvider) -> access$200
com.parse.TwitterAuthenticationProvider$1 -> com.parse.TwitterAuthenticationProvider$1:
    com.parse.ParseAuthenticationProvider$ParseAuthenticationCallback val$callback -> val$callback
    com.parse.TwitterAuthenticationProvider this$0 -> this$0
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.parse.UnsafeConnectionProvider -> com.parse.UnsafeConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
    java.net.HttpURLConnection initializeConnectionParameters(java.net.HttpURLConnection) -> initializeConnectionParameters
com.parse.UnsafeConnectionProvider$1 -> com.parse.UnsafeConnectionProvider$1:
    com.parse.UnsafeConnectionProvider this$0 -> this$0
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.parse.WeakValueHashMap -> com.parse.WeakValueHashMap:
    java.util.HashMap map -> map
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
com.parse.codec.BinaryDecoder -> com.parse.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
com.parse.codec.BinaryEncoder -> com.parse.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
com.parse.codec.CharEncoding -> com.parse.codec.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
com.parse.codec.Decoder -> com.parse.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.codec.DecoderException -> com.parse.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.Encoder -> com.parse.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
com.parse.codec.EncoderException -> com.parse.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.StringDecoder -> com.parse.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
com.parse.codec.StringEncoder -> com.parse.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.binary.Base32 -> com.parse.codec.binary.Base32:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] DECODE_TABLE -> DECODE_TABLE
    byte[] ENCODE_TABLE -> ENCODE_TABLE
    byte[] HEX_DECODE_TABLE -> HEX_DECODE_TABLE
    byte[] HEX_ENCODE_TABLE -> HEX_ENCODE_TABLE
    int MASK_5BITS -> MASK_5BITS
    long bitWorkArea -> bitWorkArea
    int decodeSize -> decodeSize
    byte[] decodeTable -> decodeTable
    int encodeSize -> encodeSize
    byte[] encodeTable -> encodeTable
    byte[] lineSeparator -> lineSeparator
    void decode(byte[],int,int) -> decode
    void encode(byte[],int,int) -> encode
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base32InputStream -> com.parse.codec.binary.Base32InputStream:
com.parse.codec.binary.Base32OutputStream -> com.parse.codec.binary.Base32OutputStream:
com.parse.codec.binary.Base64 -> com.parse.codec.binary.Base64:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] STANDARD_ENCODE_TABLE -> STANDARD_ENCODE_TABLE
    byte[] URL_SAFE_ENCODE_TABLE -> URL_SAFE_ENCODE_TABLE
    byte[] DECODE_TABLE -> DECODE_TABLE
    int MASK_6BITS -> MASK_6BITS
    byte[] encodeTable -> encodeTable
    byte[] decodeTable -> decodeTable
    byte[] lineSeparator -> lineSeparator
    int decodeSize -> decodeSize
    int encodeSize -> encodeSize
    int bitWorkArea -> bitWorkArea
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> toIntegerBytes
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base64InputStream -> com.parse.codec.binary.Base64InputStream:
com.parse.codec.binary.Base64OutputStream -> com.parse.codec.binary.Base64OutputStream:
com.parse.codec.binary.BaseNCodec -> com.parse.codec.binary.BaseNCodec:
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int DEFAULT_BUFFER_RESIZE_FACTOR -> DEFAULT_BUFFER_RESIZE_FACTOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> unencodedBlockSize
    int encodedBlockSize -> encodedBlockSize
    int lineLength -> lineLength
    int chunkSeparatorLength -> chunkSeparatorLength
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> readPos
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    boolean hasData() -> hasData
    int available() -> available
    int getDefaultBufferSize() -> getDefaultBufferSize
    void resizeBuffer() -> resizeBuffer
    void ensureBufferSize(int) -> ensureBufferSize
    int readResults(byte[],int,int) -> readResults
    boolean isWhiteSpace(byte) -> isWhiteSpace
    void reset() -> reset
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
com.parse.codec.binary.BaseNCodecInputStream -> com.parse.codec.binary.BaseNCodecInputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
com.parse.codec.binary.BaseNCodecOutputStream -> com.parse.codec.binary.BaseNCodecOutputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush(boolean) -> flush
    void flush() -> flush
    void close() -> close
com.parse.codec.binary.BinaryCodec -> com.parse.codec.binary.BinaryCodec:
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    int BIT_0 -> BIT_0
    int BIT_1 -> BIT_1
    int BIT_2 -> BIT_2
    int BIT_3 -> BIT_3
    int BIT_4 -> BIT_4
    int BIT_5 -> BIT_5
    int BIT_6 -> BIT_6
    int BIT_7 -> BIT_7
    int[] BITS -> BITS
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    boolean isEmpty(byte[]) -> isEmpty
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
com.parse.codec.binary.Hex -> com.parse.codec.binary.Hex:
    java.lang.String DEFAULT_CHARSET_NAME -> DEFAULT_CHARSET_NAME
    char[] DIGITS_LOWER -> DIGITS_LOWER
    char[] DIGITS_UPPER -> DIGITS_UPPER
    java.lang.String charsetName -> charsetName
    byte[] decodeHex(char[]) -> decodeHex
    char[] encodeHex(byte[]) -> encodeHex
    char[] encodeHex(byte[],boolean) -> encodeHex
    char[] encodeHex(byte[],char[]) -> encodeHex
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    int toDigit(char,int) -> toDigit
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String getCharsetName() -> getCharsetName
    java.lang.String toString() -> toString
com.parse.codec.binary.StringUtils -> com.parse.codec.binary.StringUtils:
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> newIllegalStateException
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.parse.codec.digest.DigestUtils -> com.parse.codec.digest.DigestUtils:
    int STREAM_BUFFER_LENGTH -> STREAM_BUFFER_LENGTH
    byte[] digest(java.security.MessageDigest,java.io.InputStream) -> digest
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.security.MessageDigest getDigest(java.lang.String) -> getDigest
    java.security.MessageDigest getMd5Digest() -> getMd5Digest
    java.security.MessageDigest getSha256Digest() -> getSha256Digest
    java.security.MessageDigest getSha384Digest() -> getSha384Digest
    java.security.MessageDigest getSha512Digest() -> getSha512Digest
    java.security.MessageDigest getShaDigest() -> getShaDigest
    byte[] md5(byte[]) -> md5
    byte[] md5(java.io.InputStream) -> md5
    byte[] md5(java.lang.String) -> md5
    java.lang.String md5Hex(byte[]) -> md5Hex
    java.lang.String md5Hex(java.io.InputStream) -> md5Hex
    java.lang.String md5Hex(java.lang.String) -> md5Hex
    byte[] sha(byte[]) -> sha
    byte[] sha(java.io.InputStream) -> sha
    byte[] sha(java.lang.String) -> sha
    byte[] sha256(byte[]) -> sha256
    byte[] sha256(java.io.InputStream) -> sha256
    byte[] sha256(java.lang.String) -> sha256
    java.lang.String sha256Hex(byte[]) -> sha256Hex
    java.lang.String sha256Hex(java.io.InputStream) -> sha256Hex
    java.lang.String sha256Hex(java.lang.String) -> sha256Hex
    byte[] sha384(byte[]) -> sha384
    byte[] sha384(java.io.InputStream) -> sha384
    byte[] sha384(java.lang.String) -> sha384
    java.lang.String sha384Hex(byte[]) -> sha384Hex
    java.lang.String sha384Hex(java.io.InputStream) -> sha384Hex
    java.lang.String sha384Hex(java.lang.String) -> sha384Hex
    byte[] sha512(byte[]) -> sha512
    byte[] sha512(java.io.InputStream) -> sha512
    byte[] sha512(java.lang.String) -> sha512
    java.lang.String sha512Hex(byte[]) -> sha512Hex
    java.lang.String sha512Hex(java.io.InputStream) -> sha512Hex
    java.lang.String sha512Hex(java.lang.String) -> sha512Hex
    java.lang.String shaHex(byte[]) -> shaHex
    java.lang.String shaHex(java.io.InputStream) -> shaHex
    java.lang.String shaHex(java.lang.String) -> shaHex
com.parse.codec.language.AbstractCaverphone -> com.parse.codec.language.AbstractCaverphone:
    java.lang.Object encode(java.lang.Object) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
com.parse.codec.language.Caverphone -> com.parse.codec.language.Caverphone:
    com.parse.codec.language.Caverphone2 encoder -> encoder
    java.lang.String caverphone(java.lang.String) -> caverphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isCaverphoneEqual(java.lang.String,java.lang.String) -> isCaverphoneEqual
com.parse.codec.language.Caverphone1 -> com.parse.codec.language.Caverphone1:
    java.lang.String SIX_1 -> SIX_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.Caverphone2 -> com.parse.codec.language.Caverphone2:
    java.lang.String TEN_1 -> TEN_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.ColognePhonetic -> com.parse.codec.language.ColognePhonetic:
    char[][] PREPROCESS_MAP -> PREPROCESS_MAP
    boolean arrayContains(char[],char) -> arrayContains
    java.lang.String colognePhonetic(java.lang.String) -> colognePhonetic
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
    java.lang.String preprocess(java.lang.String) -> preprocess
com.parse.codec.language.ColognePhonetic$CologneBuffer -> com.parse.codec.language.ColognePhonetic$CologneBuffer:
    char[] data -> data
    int length -> length
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    char[] copyData(int,int) -> copyData
    int length() -> length
    java.lang.String toString() -> toString
com.parse.codec.language.ColognePhonetic$CologneInputBuffer -> com.parse.codec.language.ColognePhonetic$CologneInputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addLeft(char) -> addLeft
    char[] copyData(int,int) -> copyData
    char getNextChar() -> getNextChar
    int getNextPos() -> getNextPos
    char removeNext() -> removeNext
com.parse.codec.language.ColognePhonetic$CologneOutputBuffer -> com.parse.codec.language.ColognePhonetic$CologneOutputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addRight(char) -> addRight
    char[] copyData(int,int) -> copyData
com.parse.codec.language.DoubleMetaphone -> com.parse.codec.language.DoubleMetaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String[] SILENT_START -> SILENT_START
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> L_R_N_M_B_H_F_V_W_SPACE
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER
    java.lang.String[] L_T_K_S_N_M_B_Z -> L_T_K_S_N_M_B_Z
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    int handleAEIOUY(com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleAEIOUY
    int handleC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleC
    int handleCC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCC
    int handleCH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCH
    int handleD(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleD
    int handleG(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleG
    int handleGH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleGH
    int handleH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleH
    int handleJ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleJ
    int handleL(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleL
    int handleP(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleP
    int handleR(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleR
    int handleS(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleS
    int handleSC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleSC
    int handleT(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleT
    int handleW(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleW
    int handleX(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleX
    int handleZ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleZ
    boolean conditionC0(java.lang.String,int) -> conditionC0
    boolean conditionCH0(java.lang.String,int) -> conditionCH0
    boolean conditionCH1(java.lang.String,int) -> conditionCH1
    boolean conditionL0(java.lang.String,int) -> conditionL0
    boolean conditionM0(java.lang.String,int) -> conditionM0
    boolean isSlavoGermanic(java.lang.String) -> isSlavoGermanic
    boolean isVowel(char) -> isVowel
    boolean isSilentStart(java.lang.String) -> isSilentStart
    java.lang.String cleanInput(java.lang.String) -> cleanInput
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    java.lang.StringBuffer primary -> primary
    java.lang.StringBuffer alternate -> alternate
    int maxLength -> maxLength
    com.parse.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
com.parse.codec.language.Metaphone -> com.parse.codec.language.Metaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String FRONTV -> FRONTV
    java.lang.String VARSON -> VARSON
    int maxCodeLen -> maxCodeLen
    java.lang.String metaphone(java.lang.String) -> metaphone
    boolean isVowel(java.lang.StringBuffer,int) -> isVowel
    boolean isPreviousChar(java.lang.StringBuffer,int,char) -> isPreviousChar
    boolean isNextChar(java.lang.StringBuffer,int,char) -> isNextChar
    boolean regionMatch(java.lang.StringBuffer,int,java.lang.String) -> regionMatch
    boolean isLastChar(int,int) -> isLastChar
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
com.parse.codec.language.RefinedSoundex -> com.parse.codec.language.RefinedSoundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    char[] soundexMapping -> soundexMapping
    com.parse.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(char) -> getMappingCode
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.Soundex -> com.parse.codec.language.Soundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    com.parse.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    int maxLength -> maxLength
    char[] soundexMapping -> soundexMapping
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(java.lang.String,int) -> getMappingCode
    int getMaxLength() -> getMaxLength
    char[] getSoundexMapping() -> getSoundexMapping
    char map(char) -> map
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.SoundexUtils -> com.parse.codec.language.SoundexUtils:
    java.lang.String clean(java.lang.String) -> clean
    int difference(com.parse.codec.StringEncoder,java.lang.String,java.lang.String) -> difference
    int differenceEncoded(java.lang.String,java.lang.String) -> differenceEncoded
com.parse.codec.net.BCodec -> com.parse.codec.net.BCodec:
    java.lang.String charset -> charset
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.QCodec -> com.parse.codec.net.QCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte BLANK -> BLANK
    byte UNDERSCORE -> UNDERSCORE
    boolean encodeBlanks -> encodeBlanks
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
com.parse.codec.net.QuotedPrintableCodec -> com.parse.codec.net.QuotedPrintableCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte TAB -> TAB
    byte SPACE -> SPACE
    void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream) -> encodeQuotedPrintable
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.parse.codec.net.RFC1522Codec -> com.parse.codec.net.RFC1522Codec:
    char SEP -> SEP
    java.lang.String POSTFIX -> POSTFIX
    java.lang.String PREFIX -> PREFIX
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
com.parse.codec.net.URLCodec -> com.parse.codec.net.URLCodec:
    int RADIX -> RADIX
    java.lang.String charset -> charset
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.Utils -> com.parse.codec.net.Utils:
    int digit16(byte) -> digit16
com.parse.entity.mime.FormBodyPart -> com.parse.entity.mime.FormBodyPart:
    java.lang.String name -> name
    com.parse.entity.mime.Header header -> header
    com.parse.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.parse.entity.mime.content.ContentBody getBody() -> getBody
    com.parse.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(com.parse.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(com.parse.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.parse.entity.mime.content.ContentBody) -> generateTransferEncoding
com.parse.entity.mime.Header -> com.parse.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.parse.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.parse.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.parse.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.parse.entity.mime.HttpMultipart -> com.parse.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.parse.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.parse.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.parse.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.parse.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.parse.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.parse.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
com.parse.entity.mime.HttpMultipart$1 -> com.parse.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$com$parse$entity$mime$HttpMultipartMode -> $SwitchMap$com$parse$entity$mime$HttpMultipartMode
com.parse.entity.mime.HttpMultipartMode -> com.parse.entity.mime.HttpMultipartMode:
    com.parse.entity.mime.HttpMultipartMode STRICT -> STRICT
    com.parse.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.parse.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    com.parse.entity.mime.HttpMultipartMode[] values() -> values
    com.parse.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.parse.entity.mime.MIME -> com.parse.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.parse.entity.mime.MinimalField -> com.parse.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.parse.entity.mime.MultipartEntity -> com.parse.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.parse.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.parse.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.parse.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.AbstractContentBody -> com.parse.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
com.parse.entity.mime.content.ByteArrayBody -> com.parse.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.ContentBody -> com.parse.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.ContentDescriptor -> com.parse.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.FileBody -> com.parse.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.parse.entity.mime.content.InputStreamBody -> com.parse.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.entity.mime.content.StringBody -> com.parse.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.gdata.Escaper -> com.parse.gdata.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
com.parse.gdata.PercentEscaper -> com.parse.gdata.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> URI_ESCAPED_SPACE
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.parse.gdata.Preconditions -> com.parse.gdata.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    void checkElementIndex(int,int) -> checkElementIndex
    void checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    void checkPositionIndex(int,int) -> checkPositionIndex
    void checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.parse.gdata.UnicodeEscaper -> com.parse.gdata.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> growBuffer
com.parse.gdata.UnicodeEscaper$1 -> com.parse.gdata.UnicodeEscaper$1:
    int pendingHighSurrogate -> pendingHighSurrogate
    char[] decodedChars -> decodedChars
    java.lang.Appendable val$out -> val$out
    com.parse.gdata.UnicodeEscaper this$0 -> this$0
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void outputChars(char[],int) -> outputChars
com.parse.gdata.UnicodeEscaper$2 -> com.parse.gdata.UnicodeEscaper$2:
    char[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.internal.AsyncCallback -> com.parse.internal.AsyncCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
com.parse.oauth.OAuth1FlowDialog -> com.parse.oauth.OAuth1FlowDialog:
    android.widget.FrameLayout$LayoutParams FILL -> FILL
    java.lang.String callbackUrl -> callbackUrl
    java.lang.String requestUrl -> requestUrl
    java.lang.String serviceUrlIdentifier -> serviceUrlIdentifier
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler handler -> handler
    android.app.ProgressDialog progressDialog -> progressDialog
    android.widget.ImageView closeImage -> closeImage
    android.webkit.WebView webView -> webView
    android.widget.FrameLayout content -> content
    void onCreate(android.os.Bundle) -> onCreate
    void createCloseImage() -> createCloseImage
    void setUpWebView(int) -> setUpWebView
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler access$000(com.parse.oauth.OAuth1FlowDialog) -> access$000
    java.lang.String access$200(com.parse.oauth.OAuth1FlowDialog) -> access$200
    java.lang.String access$300(com.parse.oauth.OAuth1FlowDialog) -> access$300
    android.app.ProgressDialog access$400(com.parse.oauth.OAuth1FlowDialog) -> access$400
    android.widget.FrameLayout access$500(com.parse.oauth.OAuth1FlowDialog) -> access$500
    android.webkit.WebView access$600(com.parse.oauth.OAuth1FlowDialog) -> access$600
    android.widget.ImageView access$700(com.parse.oauth.OAuth1FlowDialog) -> access$700
com.parse.oauth.OAuth1FlowDialog$1 -> com.parse.oauth.OAuth1FlowDialog$1:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.parse.oauth.OAuth1FlowDialog$2 -> com.parse.oauth.OAuth1FlowDialog$2:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.oauth.OAuth1FlowDialog$FlowResultHandler -> com.parse.oauth.OAuth1FlowDialog$FlowResultHandler:
    void onCancel() -> onCancel
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient -> com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.parse.oauth.OAuth1FlowException -> com.parse.oauth.OAuth1FlowException:
    long serialVersionUID -> serialVersionUID
    int errorCode -> errorCode
    java.lang.String description -> description
    java.lang.String failingUrl -> failingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getDescription() -> getDescription
    java.lang.String getFailingUrl() -> getFailingUrl
com.parse.signpost.AbstractOAuthConsumer -> com.parse.signpost.AbstractOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String token -> token
    com.parse.signpost.signature.OAuthMessageSigner messageSigner -> messageSigner
    com.parse.signpost.signature.SigningStrategy signingStrategy -> signingStrategy
    com.parse.signpost.http.HttpParameters additionalParameters -> additionalParameters
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    boolean sendEmptyTokens -> sendEmptyTokens
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void completeOAuthParameters(com.parse.signpost.http.HttpParameters) -> completeOAuthParameters
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    void collectHeaderParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectHeaderParameters
    void collectBodyParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectBodyParameters
    void collectQueryParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectQueryParameters
    java.lang.String generateTimestamp() -> generateTimestamp
    java.lang.String generateNonce() -> generateNonce
com.parse.signpost.AbstractOAuthProvider -> com.parse.signpost.AbstractOAuthProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.String requestTokenEndpointUrl -> requestTokenEndpointUrl
    java.lang.String accessTokenEndpointUrl -> accessTokenEndpointUrl
    java.lang.String authorizationWebsiteUrl -> authorizationWebsiteUrl
    com.parse.signpost.http.HttpParameters responseParameters -> responseParameters
    java.util.Map defaultHeaders -> defaultHeaders
    boolean isOAuth10a -> isOAuth10a
    com.parse.signpost.OAuthProviderListener listener -> listener
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[]) -> retrieveToken
    void handleUnexpectedResponse(int,com.parse.signpost.http.HttpResponse) -> handleUnexpectedResponse
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    java.lang.String getResponseParameter(java.lang.String) -> getResponseParameter
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuth -> com.parse.signpost.OAuth:
    java.lang.String VERSION_1_0 -> VERSION_1_0
    java.lang.String ENCODING -> ENCODING
    java.lang.String FORM_ENCODED -> FORM_ENCODED
    java.lang.String HTTP_AUTHORIZATION_HEADER -> HTTP_AUTHORIZATION_HEADER
    java.lang.String OAUTH_CONSUMER_KEY -> OAUTH_CONSUMER_KEY
    java.lang.String OAUTH_TOKEN -> OAUTH_TOKEN
    java.lang.String OAUTH_TOKEN_SECRET -> OAUTH_TOKEN_SECRET
    java.lang.String OAUTH_SIGNATURE_METHOD -> OAUTH_SIGNATURE_METHOD
    java.lang.String OAUTH_SIGNATURE -> OAUTH_SIGNATURE
    java.lang.String OAUTH_TIMESTAMP -> OAUTH_TIMESTAMP
    java.lang.String OAUTH_NONCE -> OAUTH_NONCE
    java.lang.String OAUTH_VERSION -> OAUTH_VERSION
    java.lang.String OAUTH_CALLBACK -> OAUTH_CALLBACK
    java.lang.String OAUTH_CALLBACK_CONFIRMED -> OAUTH_CALLBACK_CONFIRMED
    java.lang.String OAUTH_VERIFIER -> OAUTH_VERIFIER
    java.lang.String OUT_OF_BAND -> OUT_OF_BAND
    com.parse.gdata.PercentEscaper percentEncoder -> percentEncoder
    java.lang.String percentEncode(java.lang.String) -> percentEncode
    java.lang.String percentDecode(java.lang.String) -> percentDecode
    void formEncode(java.util.Collection,java.io.OutputStream) -> formEncode
    java.lang.String formEncode(java.util.Collection) -> formEncode
    com.parse.signpost.http.HttpParameters decodeForm(java.lang.String) -> decodeForm
    com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream) -> decodeForm
    java.util.Map toMap(java.util.Collection) -> toMap
    java.lang.String safeToString(java.lang.Object) -> safeToString
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String addQueryParameters(java.lang.String,java.lang.String[]) -> addQueryParameters
    java.lang.String addQueryParameters(java.lang.String,java.util.Map) -> addQueryParameters
    java.lang.String prepareOAuthHeader(java.lang.String[]) -> prepareOAuthHeader
    com.parse.signpost.http.HttpParameters oauthHeaderToParamsMap(java.lang.String) -> oauthHeaderToParamsMap
    java.lang.String toHeaderElement(java.lang.String,java.lang.String) -> toHeaderElement
    void debugOut(java.lang.String,java.lang.String) -> debugOut
com.parse.signpost.OAuthConsumer -> com.parse.signpost.OAuthConsumer:
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
com.parse.signpost.OAuthProvider -> com.parse.signpost.OAuthProvider:
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuthProviderListener -> com.parse.signpost.OAuthProviderListener:
    void prepareRequest(com.parse.signpost.http.HttpRequest) -> prepareRequest
    void prepareSubmission(com.parse.signpost.http.HttpRequest) -> prepareSubmission
    boolean onResponseReceived(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> onResponseReceived
com.parse.signpost.basic.DefaultOAuthConsumer -> com.parse.signpost.basic.DefaultOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.basic.DefaultOAuthProvider -> com.parse.signpost.basic.DefaultOAuthProvider:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.basic.HttpURLConnectionRequestAdapter -> com.parse.signpost.basic.HttpURLConnectionRequestAdapter:
    java.net.HttpURLConnection connection -> connection
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.net.HttpURLConnection unwrap() -> unwrap
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.HttpURLConnectionResponseAdapter -> com.parse.signpost.basic.HttpURLConnectionResponseAdapter:
    java.net.HttpURLConnection connection -> connection
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.UrlStringRequestAdapter -> com.parse.signpost.basic.UrlStringRequestAdapter:
    java.lang.String url -> url
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer -> com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.commonshttp.CommonsHttpOAuthProvider -> com.parse.signpost.commonshttp.CommonsHttpOAuthProvider:
    long serialVersionUID -> serialVersionUID
    org.apache.http.client.HttpClient httpClient -> httpClient
    void setHttpClient(org.apache.http.client.HttpClient) -> setHttpClient
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.commonshttp.HttpRequestAdapter -> com.parse.signpost.commonshttp.HttpRequestAdapter:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpEntity entity -> entity
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    java.lang.String getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.HttpResponseAdapter -> com.parse.signpost.commonshttp.HttpResponseAdapter:
    org.apache.http.HttpResponse response -> response
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.exception.OAuthCommunicationException -> com.parse.signpost.exception.OAuthCommunicationException:
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.exception.OAuthException -> com.parse.signpost.exception.OAuthException:
com.parse.signpost.exception.OAuthExpectationFailedException -> com.parse.signpost.exception.OAuthExpectationFailedException:
com.parse.signpost.exception.OAuthMessageSignerException -> com.parse.signpost.exception.OAuthMessageSignerException:
com.parse.signpost.exception.OAuthNotAuthorizedException -> com.parse.signpost.exception.OAuthNotAuthorizedException:
    java.lang.String ERROR -> ERROR
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.http.HttpParameters -> com.parse.signpost.http.HttpParameters:
    java.util.TreeMap wrappedMap -> wrappedMap
    java.util.SortedSet put(java.lang.String,java.util.SortedSet) -> put
    java.util.SortedSet put(java.lang.String,java.util.SortedSet,boolean) -> put
    java.lang.String put(java.lang.String,java.lang.String) -> put
    java.lang.String put(java.lang.String,java.lang.String,boolean) -> put
    java.lang.String putNull(java.lang.String,java.lang.String) -> putNull
    void putAll(java.util.Map) -> putAll
    void putAll(java.util.Map,boolean) -> putAll
    void putAll(java.lang.String[],boolean) -> putAll
    void putMap(java.util.Map) -> putMap
    java.util.SortedSet get(java.lang.Object) -> get
    java.lang.String getFirst(java.lang.Object) -> getFirst
    java.lang.String getFirst(java.lang.Object,boolean) -> getFirst
    java.lang.String getAsQueryString(java.lang.Object) -> getAsQueryString
    java.lang.String getAsHeaderElement(java.lang.String) -> getAsHeaderElement
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.util.SortedSet remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
com.parse.signpost.http.HttpRequest -> com.parse.signpost.http.HttpRequest:
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.http.HttpResponse -> com.parse.signpost.http.HttpResponse:
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.io.InputStream getContent() -> getContent
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.signature.AuthorizationHeaderSigningStrategy -> com.parse.signpost.signature.AuthorizationHeaderSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.HmacSha1MessageSigner -> com.parse.signpost.signature.HmacSha1MessageSigner:
    java.lang.String MAC_NAME -> MAC_NAME
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.OAuthMessageSigner -> com.parse.signpost.signature.OAuthMessageSigner:
    long serialVersionUID -> serialVersionUID
    com.parse.codec.binary.Base64 base64 -> base64
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String tokenSecret -> tokenSecret
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String getConsumerSecret() -> getConsumerSecret
    java.lang.String getTokenSecret() -> getTokenSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    void setTokenSecret(java.lang.String) -> setTokenSecret
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String base64Encode(byte[]) -> base64Encode
    void readObject(java.io.ObjectInputStream) -> readObject
com.parse.signpost.signature.PlainTextMessageSigner -> com.parse.signpost.signature.PlainTextMessageSigner:
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.QueryStringSigningStrategy -> com.parse.signpost.signature.QueryStringSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.SignatureBaseString -> com.parse.signpost.signature.SignatureBaseString:
    com.parse.signpost.http.HttpRequest request -> request
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    java.lang.String generate() -> generate
    java.lang.String normalizeRequestUrl() -> normalizeRequestUrl
    java.lang.String normalizeRequestParameters() -> normalizeRequestParameters
com.parse.signpost.signature.SigningStrategy -> com.parse.signpost.signature.SigningStrategy:
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.twitter.Twitter -> com.parse.twitter.Twitter:
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String REQUEST_TOKEN_URL -> REQUEST_TOKEN_URL
    java.lang.String AUTHORIZE_URL -> AUTHORIZE_URL
    java.lang.String ACCESS_TOKEN_URL -> ACCESS_TOKEN_URL
    java.lang.String VERIFIER_PARAM -> VERIFIER_PARAM
    java.lang.String USER_ID_PARAM -> USER_ID_PARAM
    java.lang.String SCREEN_NAME_PARAM -> SCREEN_NAME_PARAM
    java.lang.String CALLBACK_URL -> CALLBACK_URL
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String authToken -> authToken
    java.lang.String authTokenSecret -> authTokenSecret
    java.lang.String userId -> userId
    java.lang.String screenName -> screenName
    java.lang.String getConsumerKey() -> getConsumerKey
    void setConsumerKey(java.lang.String) -> setConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    java.lang.String getAuthToken() -> getAuthToken
    void setAuthToken(java.lang.String) -> setAuthToken
    java.lang.String getAuthTokenSecret() -> getAuthTokenSecret
    void setAuthTokenSecret(java.lang.String) -> setAuthTokenSecret
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getScreenName() -> getScreenName
    void setScreenName(java.lang.String) -> setScreenName
    void signRequest(org.apache.http.client.methods.HttpUriRequest) -> signRequest
    void authorize(android.content.Context,com.parse.internal.AsyncCallback) -> authorize
com.parse.twitter.Twitter$1 -> com.parse.twitter.Twitter$1:
    java.lang.Throwable error -> error
    com.parse.internal.AsyncCallback val$callback -> val$callback
    android.content.Context val$context -> val$context
    com.parse.signpost.OAuthProvider val$provider -> val$provider
    com.parse.signpost.OAuthConsumer val$consumer -> val$consumer
    android.app.ProgressDialog val$progress -> val$progress
    com.parse.twitter.Twitter this$0 -> this$0
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.twitter.Twitter$1$1 -> com.parse.twitter.Twitter$1$1:
    com.parse.twitter.Twitter$1 this$1 -> this$1
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
    void onCancel() -> onCancel
com.parse.twitter.Twitter$1$1$1 -> com.parse.twitter.Twitter$1$1$1:
    java.lang.Throwable error -> error
    java.lang.String val$verifier -> val$verifier
    com.parse.twitter.Twitter$1$1 this$2 -> this$2
    com.parse.signpost.http.HttpParameters doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.parse.signpost.http.HttpParameters) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    float mRadius -> mRadius
    android.graphics.Paint mPaintPageFill -> mPaintPageFill
    android.graphics.Paint mPaintStroke -> mPaintStroke
    android.graphics.Paint mPaintFill -> mPaintFill
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    int mSnapPage -> mSnapPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    int mOrientation -> mOrientation
    boolean mCentered -> mCentered
    boolean mSnap -> mSnap
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    boolean isSnap() -> isSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> measureLong
    int measureShort(int) -> measureShort
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.CirclePageIndicator$SavedState$1:
    com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.IconPageIndicator -> com.viewpagerindicator.IconPageIndicator:
    com.viewpagerindicator.IcsLinearLayout mIconsLayout -> mIconsLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    java.lang.Runnable mIconSelector -> mIconSelector
    int mSelectedIndex -> mSelectedIndex
    void animateToIcon(int) -> animateToIcon
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void access$0(com.viewpagerindicator.IconPageIndicator,java.lang.Runnable) -> access$0
com.viewpagerindicator.IconPageIndicator$1 -> com.viewpagerindicator.IconPageIndicator$1:
    com.viewpagerindicator.IconPageIndicator this$0 -> this$0
    android.view.View val$iconView -> val$iconView
    void run() -> run
com.viewpagerindicator.IconPagerAdapter -> com.viewpagerindicator.IconPagerAdapter:
    int getIconResId(int) -> getIconResId
    int getCount() -> getCount
com.viewpagerindicator.IcsLinearLayout -> com.viewpagerindicator.IcsLinearLayout:
    int[] LL -> LL
    int LL_DIVIDER -> LL_DIVIDER
    int LL_SHOW_DIVIDER -> LL_SHOW_DIVIDER
    int LL_DIVIDER_PADDING -> LL_DIVIDER_PADDING
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    android.graphics.Paint mPaintUnselected -> mPaintUnselected
    android.graphics.Paint mPaintSelected -> mPaintSelected
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    boolean mCentered -> mCentered
    float mLineWidth -> mLineWidth
    float mGapWidth -> mGapWidth
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> com.viewpagerindicator.LinePageIndicator$SavedState$1:
    com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.PageIndicator -> com.viewpagerindicator.PageIndicator:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
com.viewpagerindicator.R -> com.viewpagerindicator.R:
com.viewpagerindicator.R$attr -> com.viewpagerindicator.R$attr:
    int centered -> centered
    int clipPadding -> clipPadding
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapWidth -> gapWidth
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int pageColor -> pageColor
    int radius -> radius
    int selectedBold -> selectedBold
    int selectedColor -> selectedColor
    int snap -> snap
    int strokeColor -> strokeColor
    int strokeWidth -> strokeWidth
    int titlePadding -> titlePadding
    int topPadding -> topPadding
    int unselectedColor -> unselectedColor
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.R$bool -> com.viewpagerindicator.R$bool:
    int default_circle_indicator_centered -> default_circle_indicator_centered
    int default_circle_indicator_snap -> default_circle_indicator_snap
    int default_line_indicator_centered -> default_line_indicator_centered
    int default_title_indicator_selected_bold -> default_title_indicator_selected_bold
    int default_underline_indicator_fades -> default_underline_indicator_fades
com.viewpagerindicator.R$color -> com.viewpagerindicator.R$color:
    int default_circle_indicator_fill_color -> default_circle_indicator_fill_color
    int default_circle_indicator_page_color -> default_circle_indicator_page_color
    int default_circle_indicator_stroke_color -> default_circle_indicator_stroke_color
    int default_line_indicator_selected_color -> default_line_indicator_selected_color
    int default_line_indicator_unselected_color -> default_line_indicator_unselected_color
    int default_title_indicator_footer_color -> default_title_indicator_footer_color
    int default_title_indicator_selected_color -> default_title_indicator_selected_color
    int default_title_indicator_text_color -> default_title_indicator_text_color
    int default_underline_indicator_selected_color -> default_underline_indicator_selected_color
    int vpi__background_holo_dark -> vpi__background_holo_dark
    int vpi__background_holo_light -> vpi__background_holo_light
    int vpi__bright_foreground_disabled_holo_dark -> vpi__bright_foreground_disabled_holo_dark
    int vpi__bright_foreground_disabled_holo_light -> vpi__bright_foreground_disabled_holo_light
    int vpi__bright_foreground_holo_dark -> vpi__bright_foreground_holo_dark
    int vpi__bright_foreground_holo_light -> vpi__bright_foreground_holo_light
    int vpi__bright_foreground_inverse_holo_dark -> vpi__bright_foreground_inverse_holo_dark
    int vpi__bright_foreground_inverse_holo_light -> vpi__bright_foreground_inverse_holo_light
    int vpi__dark_theme -> vpi__dark_theme
    int vpi__light_theme -> vpi__light_theme
com.viewpagerindicator.R$dimen -> com.viewpagerindicator.R$dimen:
    int default_circle_indicator_radius -> default_circle_indicator_radius
    int default_circle_indicator_stroke_width -> default_circle_indicator_stroke_width
    int default_line_indicator_gap_width -> default_line_indicator_gap_width
    int default_line_indicator_line_width -> default_line_indicator_line_width
    int default_line_indicator_stroke_width -> default_line_indicator_stroke_width
    int default_title_indicator_clip_padding -> default_title_indicator_clip_padding
    int default_title_indicator_footer_indicator_height -> default_title_indicator_footer_indicator_height
    int default_title_indicator_footer_indicator_underline_padding -> default_title_indicator_footer_indicator_underline_padding
    int default_title_indicator_footer_line_height -> default_title_indicator_footer_line_height
    int default_title_indicator_footer_padding -> default_title_indicator_footer_padding
    int default_title_indicator_text_size -> default_title_indicator_text_size
    int default_title_indicator_title_padding -> default_title_indicator_title_padding
    int default_title_indicator_top_padding -> default_title_indicator_top_padding
com.viewpagerindicator.R$drawable -> com.viewpagerindicator.R$drawable:
    int vpi__tab_indicator -> vpi__tab_indicator
    int vpi__tab_selected_focused_holo -> vpi__tab_selected_focused_holo
    int vpi__tab_selected_holo -> vpi__tab_selected_holo
    int vpi__tab_selected_pressed_holo -> vpi__tab_selected_pressed_holo
    int vpi__tab_unselected_focused_holo -> vpi__tab_unselected_focused_holo
    int vpi__tab_unselected_holo -> vpi__tab_unselected_holo
    int vpi__tab_unselected_pressed_holo -> vpi__tab_unselected_pressed_holo
com.viewpagerindicator.R$id -> com.viewpagerindicator.R$id:
    int bottom -> bottom
    int none -> none
    int top -> top
    int triangle -> triangle
    int underline -> underline
com.viewpagerindicator.R$integer -> com.viewpagerindicator.R$integer:
    int default_circle_indicator_orientation -> default_circle_indicator_orientation
    int default_title_indicator_footer_indicator_style -> default_title_indicator_footer_indicator_style
    int default_title_indicator_line_position -> default_title_indicator_line_position
    int default_underline_indicator_fade_delay -> default_underline_indicator_fade_delay
    int default_underline_indicator_fade_length -> default_underline_indicator_fade_length
com.viewpagerindicator.R$style -> com.viewpagerindicator.R$style:
    int TextAppearance_TabPageIndicator -> TextAppearance_TabPageIndicator
    int Theme_PageIndicatorDefaults -> Theme_PageIndicatorDefaults
    int Widget -> Widget
    int Widget_IconPageIndicator -> Widget_IconPageIndicator
    int Widget_TabPageIndicator -> Widget_TabPageIndicator
com.viewpagerindicator.R$styleable -> com.viewpagerindicator.R$styleable:
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> EMPTY_TITLE
    java.lang.Runnable mTabSelector -> mTabSelector
    android.view.View$OnClickListener mTabClickListener -> mTabClickListener
    com.viewpagerindicator.IcsLinearLayout mTabLayout -> mTabLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mMaxTabWidth -> mMaxTabWidth
    int mSelectedTabIndex -> mSelectedTabIndex
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> mTabReselectedListener
    void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> addTab
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$0(com.viewpagerindicator.TabPageIndicator) -> access$0
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$1(com.viewpagerindicator.TabPageIndicator) -> access$1
    int access$2(com.viewpagerindicator.TabPageIndicator) -> access$2
    void access$3(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> access$3
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.TabPageIndicator$1:
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.TabPageIndicator$2:
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener -> com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener:
    void onTabReselected(int) -> onTabReselected
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.TabPageIndicator$TabView:
    int mIndex -> mIndex
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> getIndex
    void access$0(com.viewpagerindicator.TabPageIndicator$TabView,int) -> access$0
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    float SELECTION_FADE_PERCENTAGE -> SELECTION_FADE_PERCENTAGE
    float BOLD_FADE_PERCENTAGE -> BOLD_FADE_PERCENTAGE
    java.lang.String EMPTY_TITLE -> EMPTY_TITLE
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    android.graphics.Paint mPaintText -> mPaintText
    boolean mBoldText -> mBoldText
    int mColorText -> mColorText
    int mColorSelected -> mColorSelected
    android.graphics.Path mPath -> mPath
    android.graphics.Rect mBounds -> mBounds
    android.graphics.Paint mPaintFooterLine -> mPaintFooterLine
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> mFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> mLinePosition
    android.graphics.Paint mPaintFooterIndicator -> mPaintFooterIndicator
    float mFooterIndicatorHeight -> mFooterIndicatorHeight
    float mFooterIndicatorUnderlinePadding -> mFooterIndicatorUnderlinePadding
    float mFooterPadding -> mFooterPadding
    float mTitlePadding -> mTitlePadding
    float mTopPadding -> mTopPadding
    float mClipPadding -> mClipPadding
    float mFooterLineHeight -> mFooterLineHeight
    int INVALID_POINTER -> INVALID_POINTER
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> mCenterItemClickListener
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    boolean isSelectedBold() -> isSelectedBold
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> clipViewOnTheRight
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> clipViewOnTheLeft
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> calculateAllBounds
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> calcBounds
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> getTitle
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.TitlePageIndicator$IndicatorStyle:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> None
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> Triangle
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> Underline
    int value -> value
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> ENUM$VALUES
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> fromValue
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$LinePosition -> com.viewpagerindicator.TitlePageIndicator$LinePosition:
    com.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> Bottom
    com.viewpagerindicator.TitlePageIndicator$LinePosition Top -> Top
    int value -> value
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> ENUM$VALUES
    com.viewpagerindicator.TitlePageIndicator$LinePosition fromValue(int) -> fromValue
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener:
    void onCenterItemClick(int) -> onCenterItemClick
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.TitlePageIndicator$SavedState$1:
    com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    int FADE_FRAME_MS -> FADE_FRAME_MS
    android.graphics.Paint mPaint -> mPaint
    boolean mFades -> mFades
    int mFadeDelay -> mFadeDelay
    int mFadeLength -> mFadeLength
    int mFadeBy -> mFadeBy
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mScrollState -> mScrollState
    int mCurrentPage -> mCurrentPage
    float mPositionOffset -> mPositionOffset
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    java.lang.Runnable mFadeRunnable -> mFadeRunnable
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.viewpagerindicator.UnderlinePageIndicator) -> access$0
    android.graphics.Paint access$1(com.viewpagerindicator.UnderlinePageIndicator) -> access$1
    int access$2(com.viewpagerindicator.UnderlinePageIndicator) -> access$2
    java.lang.Runnable access$3(com.viewpagerindicator.UnderlinePageIndicator) -> access$3
com.viewpagerindicator.UnderlinePageIndicator$1 -> com.viewpagerindicator.UnderlinePageIndicator$1:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$2 -> com.viewpagerindicator.UnderlinePageIndicator$2:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> com.viewpagerindicator.UnderlinePageIndicator$SavedState$1:
    com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
